{
	"id": "bbf8805e79fd7d324f65c887899b633a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.17",
	"solcLongVersion": "0.4.17+commit.bdeb9e52",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DiverseTetherToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\nimport \"./Pausable.sol\";\nimport \"./StandardToken.sol\";\nimport \"./UpgradedStandardToken.sol\";\nimport \"./Blacklist.sol\";\n\ncontract DiverseTetherToken is Pausable, StandardToken, BlackList {\n\n    string public name;\n    string public symbol;\n    uint public decimals;\n    address public upgradedAddress;\n    bool public deprecated;\n\n    //  The contract can be initialized with a number of tokens\n    //  All the tokens are deposited to the owner address\n    //\n    // @param _balance Initial supply of the contract\n    // @param _name Token Name\n    // @param _symbol Token symbol\n    // @param _decimals Token decimals\n    function DiverseTetherToken() public {\n        _totalSupply = 10000000000 * 10 ** 6;\n        name = \"dTether USD\";\n        symbol = \"dUSDT\";\n        decimals = 6;\n        balances[owner] = 10000000000 * 10 ** 6;\n        deprecated = false;\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function transfer(address _to, uint _value) external whenNotPaused returns(bool){\n        require(!isBlackListed[msg.sender]);\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\n        } else {\n            return _transfer(_to, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused{\n        require(!isBlackListed[_from]);\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\n        } else {\n            return super.transferFrom(_from, _to, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function balanceOf(address who) public constant returns (uint) {\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\n        } else {\n            return super.balanceOf(who);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\n        } else {\n            return super.approve(_spender, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\n        if (deprecated) {\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\n        } else {\n            return super.allowance(_owner, _spender);\n        }\n    }\n\n    // deprecate current contract in favour of a new one\n    function deprecate(address _upgradedAddress) public onlyOwner {\n        deprecated = true;\n        upgradedAddress = _upgradedAddress;\n        Deprecate(_upgradedAddress);\n    }\n\n    // deprecate current contract if favour of a new one\n    function totalSupply() public constant returns (uint) {\n        if (deprecated) {\n            return StandardToken(upgradedAddress).totalSupply();\n        } else {\n            return _totalSupply;\n        }\n    }\n\n    // Issue a new amount of tokens\n    // these tokens are deposited into the owner address\n    //\n    // @param _amount Number of tokens to be issued\n    function issue(uint amount) public onlyOwner {\n        require(_totalSupply + amount > _totalSupply);\n        require(balances[owner] + amount > balances[owner]);\n\n        balances[owner] += amount;\n        _totalSupply += amount;\n        Issue(amount);\n    }\n\n    // Redeem tokens.\n    // These tokens are withdrawn from the owner address\n    // if the balance must be enough to cover the redeem\n    // or the call will fail.\n    // @param _amount Number of tokens to be issued\n    function redeem(uint amount) public onlyOwner {\n        require(_totalSupply >= amount);\n        require(balances[owner] >= amount);\n\n        _totalSupply -= amount;\n        balances[owner] -= amount;\n        Redeem(amount);\n    }\n\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\n        require(newBasisPoints < 20);\n        require(newMaxFee < 50);\n\n        basisPointsRate = newBasisPoints;\n        maximumFee = newMaxFee.mul(10**decimals);\n\n        Params(basisPointsRate, maximumFee);\n    }\n\n    // Called when new token are issued\n    event Issue(uint amount);\n\n    // Called when tokens are redeemed\n    event Redeem(uint amount);\n\n    // Called when contract is deprecated\n    event Deprecate(address newAddress);\n\n    // Called if contract ever adds fees\n    event Params(uint feeBasisPoints, uint maxFee);\n}\n"
			},
			"contracts/Blacklist.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\nimport \"./Ownable.sol\";\nimport \"./BasicToken.sol\";\n\ncontract BlackList is Ownable, BasicToken {\n\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\n    function getBlackListStatus(address _maker) external constant returns (bool) {\n        return isBlackListed[_maker];\n    }\n\n    function getOwner() external constant returns (address) {\n        return owner;\n    }\n\n    mapping (address => bool) public isBlackListed;\n    \n    function addBlackList (address _evilUser) public onlyOwner {\n        isBlackListed[_evilUser] = true;\n        AddedBlackList(_evilUser);\n    }\n\n    function removeBlackList (address _clearedUser) public onlyOwner {\n        isBlackListed[_clearedUser] = false;\n        RemovedBlackList(_clearedUser);\n    }\n\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\n        require(isBlackListed[_blackListedUser]);\n        uint dirtyFunds = balanceOf(_blackListedUser);\n        balances[_blackListedUser] = 0;\n        _totalSupply -= dirtyFunds;\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\n    }\n\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\n\n    event AddedBlackList(address _user);\n\n    event RemovedBlackList(address _user);\n\n}\n"
			},
			"contracts/UpgradedStandardToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\nimport \"./StandardToken.sol\";\n\ncontract UpgradedStandardToken is StandardToken{\n    // those methods are called by the legacy contract\n    // and they must ensure msg.sender to be the contract address\n    function transferByLegacy(address from, address to, uint value) public returns(bool);\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\n    function approveByLegacy(address from, address spender, uint value) public;\n}\n"
			},
			"contracts/StandardToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\nimport \"./BasicToken.sol\";\nimport \"./ERC20.sol\";\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is BasicToken, ERC20 {\n\n    mapping (address => mapping (address => uint)) public allowed;\n\n    uint public constant MAX_UINT = 2**256 - 1;\n\n    /**\n    * @dev Transfer tokens from one address to another\n    * @param _from address The address which you want to send tokens from\n    * @param _to address The address which you want to transfer to\n    * @param _value uint the amount of tokens to be transferred\n    */\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\n        var _allowance = allowed[_from][msg.sender];\n\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\n        // if (_value > _allowance) throw;\n\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\n        if (fee > maximumFee) {\n            fee = maximumFee;\n        }\n        if (_allowance < MAX_UINT) {\n            allowed[_from][msg.sender] = _allowance.sub(_value);\n        }\n        uint sendAmount = _value.sub(fee);\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(sendAmount);\n        if (fee > 0) {\n            balances[owner] = balances[owner].add(fee);\n            Transfer(_from, owner, fee);\n        }\n        Transfer(_from, _to, sendAmount);\n    }\n\n    /**\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n    * @param _spender The address which will spend the funds.\n    * @param _value The amount of tokens to be spent.\n    */\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\n\n        // To change the approve amount you first have to reduce the addresses`\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\n        //  already 0 to mitigate the race condition described here:\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\n\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n    }\n\n    /**\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\n    * @param _owner address The address which owns the funds.\n    * @param _spender address The address which will spend the funds.\n    * @return A uint specifying the amount of tokens still available for the spender.\n    */\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\n        return allowed[_owner][_spender];\n    }\n\n}\n"
			},
			"contracts/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\nimport \"./Ownable.sol\";\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    Unpause();\n  }\n}\n"
			},
			"contracts/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\nimport \"./ERC20Basic.sol\";\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public constant returns (uint);\n    function transferFrom(address from, address to, uint value) public;\n    function approve(address spender, uint value) public;\n    event Approval(address indexed owner, address indexed spender, uint value);\n}\n"
			},
			"contracts/BasicToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\nimport \"./Ownable.sol\";\nimport \"./ERC20Basic.sol\";\nimport \"./SafeMath.sol\";\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is Ownable, ERC20Basic {\n    using SafeMath for uint;\n\n    mapping(address => uint) public balances;\n\n    // additional variables for use if transaction fees ever became necessary\n    uint public basisPointsRate = 0;\n    uint public maximumFee = 0;\n\n    /**\n    * @dev Fix for the ERC20 short address attack.\n    */\n    modifier onlyPayloadSize(uint size) {\n        require(!(msg.data.length < size + 4));\n        _;\n    }\n\n    /**\n    * @dev transfer token for a specified address\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function _transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) returns(bool) {\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\n        if (fee > maximumFee) {\n            fee = maximumFee;\n        }\n        uint sendAmount = _value.sub(fee);\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(sendAmount);\n        if (fee > 0) {\n            balances[owner] = balances[owner].add(fee);\n            Transfer(msg.sender, owner, fee);\n        }\n        Transfer(msg.sender, _to, sendAmount);\n        return true;\n    }\n\n    /**\n    * @dev Gets the balance of the specified address.\n    * @param _owner The address to query the the balance of.\n    * @return An uint representing the amount owned by the passed address.\n    */\n    function balanceOf(address _owner) public constant returns (uint balance) {\n        return balances[_owner];\n    }\n\n}\n"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address public owner;\n\n    /**\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n      * account.\n      */\n    function Ownable() public {\n        owner = msg.sender;\n    }\n\n    /**\n      * @dev Throws if called by any account other than the owner.\n      */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    /**\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\n    * @param newOwner The address to transfer ownership to.\n    */\n    function transferOwnership(address newOwner) public onlyOwner {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n\n}\n"
			},
			"contracts/ERC20Basic.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20Basic {\n    uint public _totalSupply;\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address who) public constant returns (uint);\n    function transfer(address to, uint value) external returns(bool);\n    event Transfer(address indexed from, address indexed to, uint value);\n}\n"
			},
			"contracts/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/BasicToken.sol": {
				"BasicToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "_transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"_transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint representing the amount owned by the passed address."
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						},
						"title": "Basic token"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"_transfer(address,uint256)": "4847a79c",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/Blacklist.sol": {
				"BlackList": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_evilUser",
									"type": "address"
								}
							],
							"name": "addBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "_transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_maker",
									"type": "address"
								}
							],
							"name": "getBlackListStatus",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlackListed",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_clearedUser",
									"type": "address"
								}
							],
							"name": "removeBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_blackListedUser",
									"type": "address"
								}
							],
							"name": "destroyBlackFunds",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_blackListedUser",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "DestroyedBlackFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "AddedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "RemovedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"_transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint representing the amount owned by the passed address."
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"_transfer(address,uint256)": "4847a79c",
							"addBlackList(address)": "0ecb93c0",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"destroyBlackFunds(address)": "f3bdc228",
							"getBlackListStatus(address)": "59bf1abe",
							"getOwner()": "893d20e8",
							"isBlackListed(address)": "e47d6060",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"removeBlackList(address)": "e4997dc5",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {
							"getBlackListStatus(address)": {
								"notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////"
							}
						}
					}
				}
			},
			"contracts/DiverseTetherToken.sol": {
				"DiverseTetherToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_upgradedAddress",
									"type": "address"
								}
							],
							"name": "deprecate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "deprecated",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_evilUser",
									"type": "address"
								}
							],
							"name": "addBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "upgradedAddress",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "_transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_maker",
									"type": "address"
								}
							],
							"name": "getBlackListStatus",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newBasisPoints",
									"type": "uint256"
								},
								{
									"name": "newMaxFee",
									"type": "uint256"
								}
							],
							"name": "setParams",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "issue",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "redeem",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlackListed",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_clearedUser",
									"type": "address"
								}
							],
							"name": "removeBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_blackListedUser",
									"type": "address"
								}
							],
							"name": "destroyBlackFunds",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Issue",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Redeem",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "Deprecate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "feeBasisPoints",
									"type": "uint256"
								},
								{
									"indexed": false,
									"name": "maxFee",
									"type": "uint256"
								}
							],
							"name": "Params",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_blackListedUser",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "DestroyedBlackFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "AddedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "RemovedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"_transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state"
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state"
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/DiverseTetherToken.sol\":178:4931  contract DiverseTetherToken is Pausable, StandardToken, BlackList {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/Pausable.sol\":287:292  false */\n  0x0\n    /* \"contracts/Pausable.sol\":266:292  bool public paused = false */\n  dup1\n  exp(0x100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BasicToken.sol\":459:460  0 */\n  0x0\n    /* \"contracts/BasicToken.sol\":429:460  uint public basisPointsRate = 0 */\n  0x3\n  sstore\n    /* \"contracts/BasicToken.sol\":491:492  0 */\n  0x0\n    /* \"contracts/BasicToken.sol\":466:492  uint public maximumFee = 0 */\n  0x4\n  sstore\n    /* \"contracts/DiverseTetherToken.sol\":680:925  function DiverseTetherToken() public {... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n    /* \"contracts/Ownable.sol\":469:479  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":461:466  owner */\n  0x0\n  dup1\n    /* \"contracts/Ownable.sol\":461:479  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiverseTetherToken.sol\":742:763  10000000000 * 10 ** 6 */\n  0x2386f26fc10000\n    /* \"contracts/DiverseTetherToken.sol\":727:739  _totalSupply */\n  0x1\n    /* \"contracts/DiverseTetherToken.sol\":727:763  _totalSupply = 10000000000 * 10 ** 6 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiverseTetherToken.sol\":773:793  name = \"dTether USD\" */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  0xb\n  dup2\n  mstore\n  0x20\n  add\n  0x6454657468657220555344000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/DiverseTetherToken.sol\":773:777  name */\n  0x7\n    /* \"contracts/DiverseTetherToken.sol\":773:793  name = \"dTether USD\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_7)\ntag_6:\n  pop\n    /* \"contracts/DiverseTetherToken.sol\":803:819  symbol = \"dUSDT\" */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  0x5\n  dup2\n  mstore\n  0x20\n  add\n  0x6455534454000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/DiverseTetherToken.sol\":803:809  symbol */\n  0x8\n    /* \"contracts/DiverseTetherToken.sol\":803:819  symbol = \"dUSDT\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_7)\ntag_8:\n  pop\n    /* \"contracts/DiverseTetherToken.sol\":840:841  6 */\n  0x6\n    /* \"contracts/DiverseTetherToken.sol\":829:837  decimals */\n  0x9\n    /* \"contracts/DiverseTetherToken.sol\":829:841  decimals = 6 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiverseTetherToken.sol\":869:890  10000000000 * 10 ** 6 */\n  0x2386f26fc10000\n    /* \"contracts/DiverseTetherToken.sol\":851:859  balances */\n  0x2\n    /* \"contracts/DiverseTetherToken.sol\":851:866  balances[owner] */\n  0x0\n    /* \"contracts/DiverseTetherToken.sol\":860:865  owner */\n  dup1\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/DiverseTetherToken.sol\":851:866  balances[owner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"contracts/DiverseTetherToken.sol\":851:890  balances[owner] = 10000000000 * 10 ** 6 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiverseTetherToken.sol\":913:918  false */\n  0x0\n    /* \"contracts/DiverseTetherToken.sol\":900:910  deprecated */\n  0xa\n  0x14\n    /* \"contracts/DiverseTetherToken.sol\":900:918  deprecated = false */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiverseTetherToken.sol\":178:4931  contract DiverseTetherToken is Pausable, StandardToken, BlackList {... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_11\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_10)\ntag_11:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_10\n  jumpi\n  swap2\n  dup3\n  add\ntag_12:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_12)\ntag_13:\ntag_10:\n  pop\n  swap1\n  pop\n  tag_14\n  swap2\n  swap1\n  jump\t// in(tag_15)\ntag_14:\n  pop\n  swap1\n  jump\t// out\ntag_15:\n  tag_16\n  swap2\n  swap1\ntag_17:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_18\n  jumpi\n  0x0\n  dup2\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_17)\ntag_18:\n  pop\n  swap1\n  jump\ntag_16:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DiverseTetherToken.sol\":178:4931  contract DiverseTetherToken is Pausable, StandardToken, BlackList {... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, iszero(calldatasize))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x6fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x753c30c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe136b19\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xecb93c0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x26976e3f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x35390714\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3eaaf86b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4847a79c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x59bf1abe\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5c658165\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc0324c77\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xcc872b66\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdb006a75\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xdd644f72\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe47d6060\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe4997dc5\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xe5b5019a\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf3bdc228\n      eq\n      tag_34\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/DiverseTetherToken.sol\":251:269  string public name */\n    tag_2:\n      jumpi(tag_35, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_35:\n      tag_36\n      jump(tag_37)\n    tag_36:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_38:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_38)\n    tag_39:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_41\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_41:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiverseTetherToken.sol\":2902:3079  function deprecate(address _upgradedAddress) public onlyOwner {... */\n    tag_3:\n      jumpi(tag_42, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_42:\n      tag_43\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_44)\n    tag_43:\n      stop\n        /* \"contracts/DiverseTetherToken.sol\":2174:2470  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_4:\n      jumpi(tag_45, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_45:\n      tag_46\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_47)\n    tag_46:\n      stop\n        /* \"contracts/DiverseTetherToken.sol\":363:385  bool public deprecated */\n    tag_5:\n      jumpi(tag_48, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_48:\n      tag_49\n      jump(tag_50)\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Blacklist.sol\":554:696  function addBlackList (address _evilUser) public onlyOwner {... */\n    tag_6:\n      jumpi(tag_51, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_51:\n      tag_52\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_53)\n    tag_52:\n      stop\n        /* \"contracts/DiverseTetherToken.sol\":3142:3354  function totalSupply() public constant returns (uint) {... */\n    tag_7:\n      jumpi(tag_54, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_54:\n      tag_55\n      jump(tag_56)\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiverseTetherToken.sol\":1418:1772  function transferFrom(address _from, address _to, uint _value) public whenNotPaused{... */\n    tag_8:\n      jumpi(tag_57, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_57:\n      tag_58\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_59)\n    tag_58:\n      stop\n        /* \"contracts/DiverseTetherToken.sol\":327:357  address public upgradedAddress */\n    tag_9:\n      jumpi(tag_60, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_60:\n      tag_61\n      jump(tag_62)\n    tag_61:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BasicToken.sol\":304:344  mapping(address => uint) public balances */\n    tag_10:\n      jumpi(tag_63, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_63:\n      tag_64\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_65)\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiverseTetherToken.sol\":301:321  uint public decimals */\n    tag_11:\n      jumpi(tag_66, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_66:\n      tag_67\n      jump(tag_68)\n    tag_67:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BasicToken.sol\":466:492  uint public maximumFee = 0 */\n    tag_12:\n      jumpi(tag_69, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_69:\n      tag_70\n      jump(tag_71)\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20Basic.sol\":211:235  uint public _totalSupply */\n    tag_13:\n      jumpi(tag_72, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_72:\n      tag_73\n      jump(tag_74)\n    tag_73:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pausable.sol\":852:939  function unpause() onlyOwner whenPaused public {... */\n    tag_14:\n      jumpi(tag_75, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_75:\n      tag_76\n      jump(tag_77)\n    tag_76:\n      stop\n        /* \"contracts/BasicToken.sol\":833:1429  function _transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) returns(bool) {... */\n    tag_15:\n      jumpi(tag_78, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_78:\n      tag_79\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_80)\n    tag_79:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Blacklist.sol\":278:400  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n    tag_16:\n      jumpi(tag_81, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_81:\n      tag_82\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_83)\n    tag_82:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StandardToken.sol\":425:486  mapping (address => mapping (address => uint)) public allowed */\n    tag_17:\n      jumpi(tag_84, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_84:\n      tag_85\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_86)\n    tag_85:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pausable.sol\":266:292  bool public paused = false */\n    tag_18:\n      jumpi(tag_87, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_87:\n      tag_88\n      jump(tag_89)\n    tag_88:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiverseTetherToken.sol\":1854:2092  function balanceOf(address who) public constant returns (uint) {... */\n    tag_19:\n      jumpi(tag_90, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_90:\n      tag_91\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_92)\n    tag_91:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pausable.sol\":685:770  function pause() onlyOwner whenNotPaused public {... */\n    tag_20:\n      jumpi(tag_93, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_93:\n      tag_94\n      jump(tag_95)\n    tag_94:\n      stop\n        /* \"contracts/Blacklist.sol\":406:491  function getOwner() external constant returns (address) {... */\n    tag_21:\n      jumpi(tag_96, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_96:\n      tag_97\n      jump(tag_98)\n    tag_97:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":271:291  address public owner */\n    tag_22:\n      jumpi(tag_99, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_99:\n      tag_100\n      jump(tag_101)\n    tag_100:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiverseTetherToken.sol\":275:295  string public symbol */\n    tag_23:\n      jumpi(tag_102, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_102:\n      tag_103\n      jump(tag_104)\n    tag_103:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_105:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_105)\n    tag_106:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_108:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiverseTetherToken.sol\":1007:1336  function transfer(address _to, uint _value) external whenNotPaused returns(bool){... */\n    tag_24:\n      jumpi(tag_109, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_109:\n      tag_110\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_111)\n    tag_110:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiverseTetherToken.sol\":4231:4609  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n    tag_25:\n      jumpi(tag_112, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_112:\n      tag_113\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_114)\n    tag_113:\n      stop\n        /* \"contracts/DiverseTetherToken.sol\":3512:3771  function issue(uint amount) public onlyOwner {... */\n    tag_26:\n      jumpi(tag_115, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_115:\n      tag_116\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_117)\n    tag_116:\n      stop\n        /* \"contracts/DiverseTetherToken.sol\":3995:4225  function redeem(uint amount) public onlyOwner {... */\n    tag_27:\n      jumpi(tag_118, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_118:\n      tag_119\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_120)\n    tag_119:\n      stop\n        /* \"contracts/DiverseTetherToken.sol\":2552:2839  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_28:\n      jumpi(tag_121, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_121:\n      tag_122\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_123)\n    tag_122:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BasicToken.sol\":429:460  uint public basisPointsRate = 0 */\n    tag_29:\n      jumpi(tag_124, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_124:\n      tag_125\n      jump(tag_126)\n    tag_125:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Blacklist.sol\":497:543  mapping (address => bool) public isBlackListed */\n    tag_30:\n      jumpi(tag_127, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_127:\n      tag_128\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_129)\n    tag_128:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Blacklist.sol\":702:859  function removeBlackList (address _clearedUser) public onlyOwner {... */\n    tag_31:\n      jumpi(tag_130, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_130:\n      tag_131\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_132)\n    tag_131:\n      stop\n        /* \"contracts/StandardToken.sol\":493:535  uint public constant MAX_UINT = 2**256 - 1 */\n    tag_32:\n      jumpi(tag_133, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_133:\n      tag_134\n      jump(tag_135)\n    tag_134:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":821:968  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_33:\n      jumpi(tag_136, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_136:\n      tag_137\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_138)\n    tag_137:\n      stop\n        /* \"contracts/Blacklist.sol\":865:1183  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n    tag_34:\n      jumpi(tag_139, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_139:\n      tag_140\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_141)\n    tag_140:\n      stop\n        /* \"contracts/DiverseTetherToken.sol\":251:269  string public name */\n    tag_37:\n      0x7\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_142\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_143\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_142)\n    tag_143:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_144:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_144\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":2902:3079  function deprecate(address _upgradedAddress) public onlyOwner {... */\n    tag_44:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_146\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_146:\n        /* \"contracts/DiverseTetherToken.sol\":2987:2991  true */\n      0x1\n        /* \"contracts/DiverseTetherToken.sol\":2974:2984  deprecated */\n      0xa\n      0x14\n        /* \"contracts/DiverseTetherToken.sol\":2974:2991  deprecated = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":3019:3035  _upgradedAddress */\n      dup1\n        /* \"contracts/DiverseTetherToken.sol\":3001:3016  upgradedAddress */\n      0xa\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":3001:3035  upgradedAddress = _upgradedAddress */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":3045:3072  Deprecate(_upgradedAddress) */\n      0xcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e\n        /* \"contracts/DiverseTetherToken.sol\":3055:3071  _upgradedAddress */\n      dup2\n        /* \"contracts/DiverseTetherToken.sol\":3045:3072  Deprecate(_upgradedAddress) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DiverseTetherToken.sol\":2902:3079  function deprecate(address _upgradedAddress) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":2174:2470  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_47:\n        /* \"contracts/DiverseTetherToken.sol\":2245:2251  2 * 32 */\n      0x40\n        /* \"contracts/BasicToken.sol\":646:647  4 */\n      0x4\n        /* \"contracts/BasicToken.sol\":639:643  size */\n      dup2\n        /* \"contracts/BasicToken.sol\":639:647  size + 4 */\n      add\n        /* \"contracts/BasicToken.sol\":621:629  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/BasicToken.sol\":621:636  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/BasicToken.sol\":621:647  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/BasicToken.sol\":619:648  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/BasicToken.sol\":611:649  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_149\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_149:\n        /* \"contracts/DiverseTetherToken.sol\":2267:2277  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":2263:2464  if (deprecated) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"contracts/DiverseTetherToken.sol\":2322:2337  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":2300:2354  UpgradedStandardToken(upgradedAddress).approveByLegacy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaee92d33\n        /* \"contracts/DiverseTetherToken.sol\":2355:2365  msg.sender */\n      caller\n        /* \"contracts/DiverseTetherToken.sol\":2367:2375  _spender */\n      dup6\n        /* \"contracts/DiverseTetherToken.sol\":2377:2383  _value */\n      dup6\n        /* \"contracts/DiverseTetherToken.sol\":2300:2384  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_152\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_152:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_153\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_153:\n      pop\n      pop\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":2293:2384  return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      jump(tag_150)\n        /* \"contracts/DiverseTetherToken.sol\":2263:2464  if (deprecated) {... */\n    tag_151:\n        /* \"contracts/DiverseTetherToken.sol\":2422:2453  super.approve(_spender, _value) */\n      tag_155\n        /* \"contracts/DiverseTetherToken.sol\":2436:2444  _spender */\n      dup4\n        /* \"contracts/DiverseTetherToken.sol\":2446:2452  _value */\n      dup4\n        /* \"contracts/DiverseTetherToken.sol\":2422:2435  super.approve */\n      tag_156\n        /* \"contracts/DiverseTetherToken.sol\":2422:2453  super.approve(_spender, _value) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/BasicToken.sol\":659:660  _ */\n    tag_150:\n        /* \"contracts/DiverseTetherToken.sol\":2174:2470  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":363:385  bool public deprecated */\n    tag_50:\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Blacklist.sol\":554:696  function addBlackList (address _evilUser) public onlyOwner {... */\n    tag_53:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_158\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_158:\n        /* \"contracts/Blacklist.sol\":650:654  true */\n      0x1\n        /* \"contracts/Blacklist.sol\":623:636  isBlackListed */\n      0x6\n        /* \"contracts/Blacklist.sol\":623:647  isBlackListed[_evilUser] */\n      0x0\n        /* \"contracts/Blacklist.sol\":637:646  _evilUser */\n      dup4\n        /* \"contracts/Blacklist.sol\":623:647  isBlackListed[_evilUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/Blacklist.sol\":623:654  isBlackListed[_evilUser] = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Blacklist.sol\":664:689  AddedBlackList(_evilUser) */\n      0x42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc\n        /* \"contracts/Blacklist.sol\":679:688  _evilUser */\n      dup2\n        /* \"contracts/Blacklist.sol\":664:689  AddedBlackList(_evilUser) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Blacklist.sol\":554:696  function addBlackList (address _evilUser) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":3142:3354  function totalSupply() public constant returns (uint) {... */\n    tag_56:\n        /* \"contracts/DiverseTetherToken.sol\":3190:3194  uint */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":3210:3220  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":3206:3348  if (deprecated) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"contracts/DiverseTetherToken.sol\":3257:3272  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":3243:3285  StandardToken(upgradedAddress).totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/DiverseTetherToken.sol\":3243:3287  StandardToken(upgradedAddress).totalSupply() */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_162\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_162:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_163\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_163:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":3236:3287  return StandardToken(upgradedAddress).totalSupply() */\n      swap1\n      pop\n      jump(tag_160)\n        /* \"contracts/DiverseTetherToken.sol\":3206:3348  if (deprecated) {... */\n    tag_161:\n        /* \"contracts/DiverseTetherToken.sol\":3325:3337  _totalSupply */\n      sload(0x1)\n        /* \"contracts/DiverseTetherToken.sol\":3318:3337  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":3142:3354  function totalSupply() public constant returns (uint) {... */\n    tag_160:\n      swap1\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":1418:1772  function transferFrom(address _from, address _to, uint _value) public whenNotPaused{... */\n    tag_59:\n        /* \"contracts/Pausable.sol\":435:441  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":434:441  !paused */\n      iszero\n        /* \"contracts/Pausable.sol\":426:442  require(!paused) */\n      iszero\n      iszero\n      tag_166\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_166:\n        /* \"contracts/DiverseTetherToken.sol\":1520:1533  isBlackListed */\n      0x6\n        /* \"contracts/DiverseTetherToken.sol\":1520:1540  isBlackListed[_from] */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":1534:1539  _from */\n      dup5\n        /* \"contracts/DiverseTetherToken.sol\":1520:1540  isBlackListed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":1519:1540  !isBlackListed[_from] */\n      iszero\n        /* \"contracts/DiverseTetherToken.sol\":1511:1541  require(!isBlackListed[_from]) */\n      iszero\n      iszero\n      tag_168\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_168:\n        /* \"contracts/DiverseTetherToken.sol\":1555:1565  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":1551:1766  if (deprecated) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"contracts/DiverseTetherToken.sol\":1610:1625  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":1588:1647  UpgradedStandardToken(upgradedAddress).transferFromByLegacy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8b477adb\n        /* \"contracts/DiverseTetherToken.sol\":1648:1658  msg.sender */\n      caller\n        /* \"contracts/DiverseTetherToken.sol\":1660:1665  _from */\n      dup6\n        /* \"contracts/DiverseTetherToken.sol\":1667:1670  _to */\n      dup6\n        /* \"contracts/DiverseTetherToken.sol\":1672:1678  _value */\n      dup6\n        /* \"contracts/DiverseTetherToken.sol\":1588:1679  UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_170\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_170:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_171\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_171:\n      pop\n      pop\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":1581:1679  return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      jump(tag_167)\n        /* \"contracts/DiverseTetherToken.sol\":1551:1766  if (deprecated) {... */\n    tag_169:\n        /* \"contracts/DiverseTetherToken.sol\":1717:1755  super.transferFrom(_from, _to, _value) */\n      tag_173\n        /* \"contracts/DiverseTetherToken.sol\":1736:1741  _from */\n      dup4\n        /* \"contracts/DiverseTetherToken.sol\":1743:1746  _to */\n      dup4\n        /* \"contracts/DiverseTetherToken.sol\":1748:1754  _value */\n      dup4\n        /* \"contracts/DiverseTetherToken.sol\":1717:1735  super.transferFrom */\n      tag_174\n        /* \"contracts/DiverseTetherToken.sol\":1717:1755  super.transferFrom(_from, _to, _value) */\n      jump\t// in\n    tag_173:\n        /* \"contracts/Pausable.sol\":448:449  _ */\n    tag_167:\n        /* \"contracts/DiverseTetherToken.sol\":1418:1772  function transferFrom(address _from, address _to, uint _value) public whenNotPaused{... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":327:357  address public upgradedAddress */\n    tag_62:\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/BasicToken.sol\":304:344  mapping(address => uint) public balances */\n    tag_65:\n      mstore(0x20, 0x2)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":301:321  uint public decimals */\n    tag_68:\n      sload(0x9)\n      dup2\n      jump\t// out\n        /* \"contracts/BasicToken.sol\":466:492  uint public maximumFee = 0 */\n    tag_71:\n      sload(0x4)\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20Basic.sol\":211:235  uint public _totalSupply */\n    tag_74:\n      sload(0x1)\n      dup2\n      jump\t// out\n        /* \"contracts/Pausable.sol\":852:939  function unpause() onlyOwner whenPaused public {... */\n    tag_77:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_176\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_176:\n        /* \"contracts/Pausable.sol\":587:593  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":579:594  require(paused) */\n      iszero\n      iszero\n      tag_178\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_178:\n        /* \"contracts/Pausable.sol\":914:919  false */\n      0x0\n        /* \"contracts/Pausable.sol\":905:911  paused */\n      dup1\n      0x14\n        /* \"contracts/Pausable.sol\":905:919  paused = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pausable.sol\":925:934  Unpause() */\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Pausable.sol\":852:939  function unpause() onlyOwner whenPaused public {... */\n      jump\t// out\n        /* \"contracts/BasicToken.sol\":833:1429  function _transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) returns(bool) {... */\n    tag_80:\n        /* \"contracts/BasicToken.sol\":917:921  bool */\n      0x0\n        /* \"contracts/BasicToken.sol\":933:941  uint fee */\n      dup1\n        /* \"contracts/BasicToken.sol\":1066:1081  uint sendAmount */\n      0x0\n        /* \"contracts/BasicToken.sol\":901:907  2 * 32 */\n      0x40\n        /* \"contracts/BasicToken.sol\":646:647  4 */\n      0x4\n        /* \"contracts/BasicToken.sol\":639:643  size */\n      dup2\n        /* \"contracts/BasicToken.sol\":639:647  size + 4 */\n      add\n        /* \"contracts/BasicToken.sol\":621:629  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/BasicToken.sol\":621:636  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/BasicToken.sol\":621:647  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/BasicToken.sol\":619:648  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/BasicToken.sol\":611:649  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_181\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_181:\n        /* \"contracts/BasicToken.sol\":944:984  (_value.mul(basisPointsRate)).div(10000) */\n      tag_183\n        /* \"contracts/BasicToken.sol\":978:983  10000 */\n      0x2710\n        /* \"contracts/BasicToken.sol\":945:972  _value.mul(basisPointsRate) */\n      tag_184\n        /* \"contracts/BasicToken.sol\":956:971  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/BasicToken.sol\":945:951  _value */\n      dup9\n        /* \"contracts/BasicToken.sol\":945:955  _value.mul */\n      tag_185\n      swap1\n        /* \"contracts/BasicToken.sol\":945:972  _value.mul(basisPointsRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_184:\n        /* \"contracts/BasicToken.sol\":944:977  (_value.mul(basisPointsRate)).div */\n      tag_186\n      swap1\n        /* \"contracts/BasicToken.sol\":944:984  (_value.mul(basisPointsRate)).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"contracts/BasicToken.sol\":933:984  uint fee = (_value.mul(basisPointsRate)).div(10000) */\n      swap3\n      pop\n        /* \"contracts/BasicToken.sol\":1004:1014  maximumFee */\n      sload(0x4)\n        /* \"contracts/BasicToken.sol\":998:1001  fee */\n      dup4\n        /* \"contracts/BasicToken.sol\":998:1014  fee > maximumFee */\n      gt\n        /* \"contracts/BasicToken.sol\":994:1057  if (fee > maximumFee) {... */\n      iszero\n      tag_187\n      jumpi\n        /* \"contracts/BasicToken.sol\":1036:1046  maximumFee */\n      sload(0x4)\n        /* \"contracts/BasicToken.sol\":1030:1046  fee = maximumFee */\n      swap3\n      pop\n        /* \"contracts/BasicToken.sol\":994:1057  if (fee > maximumFee) {... */\n    tag_187:\n        /* \"contracts/BasicToken.sol\":1084:1099  _value.sub(fee) */\n      tag_188\n        /* \"contracts/BasicToken.sol\":1095:1098  fee */\n      dup4\n        /* \"contracts/BasicToken.sol\":1084:1090  _value */\n      dup7\n        /* \"contracts/BasicToken.sol\":1084:1094  _value.sub */\n      tag_189\n      swap1\n        /* \"contracts/BasicToken.sol\":1084:1099  _value.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_188:\n        /* \"contracts/BasicToken.sol\":1066:1099  uint sendAmount = _value.sub(fee) */\n      swap2\n      pop\n        /* \"contracts/BasicToken.sol\":1132:1164  balances[msg.sender].sub(_value) */\n      tag_190\n        /* \"contracts/BasicToken.sol\":1157:1163  _value */\n      dup6\n        /* \"contracts/BasicToken.sol\":1132:1140  balances */\n      0x2\n        /* \"contracts/BasicToken.sol\":1132:1152  balances[msg.sender] */\n      0x0\n        /* \"contracts/BasicToken.sol\":1141:1151  msg.sender */\n      caller\n        /* \"contracts/BasicToken.sol\":1132:1152  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/BasicToken.sol\":1132:1156  balances[msg.sender].sub */\n      tag_189\n      swap1\n        /* \"contracts/BasicToken.sol\":1132:1164  balances[msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"contracts/BasicToken.sol\":1109:1117  balances */\n      0x2\n        /* \"contracts/BasicToken.sol\":1109:1129  balances[msg.sender] */\n      0x0\n        /* \"contracts/BasicToken.sol\":1118:1128  msg.sender */\n      caller\n        /* \"contracts/BasicToken.sol\":1109:1129  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BasicToken.sol\":1109:1164  balances[msg.sender] = balances[msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BasicToken.sol\":1190:1219  balances[_to].add(sendAmount) */\n      tag_191\n        /* \"contracts/BasicToken.sol\":1208:1218  sendAmount */\n      dup3\n        /* \"contracts/BasicToken.sol\":1190:1198  balances */\n      0x2\n        /* \"contracts/BasicToken.sol\":1190:1203  balances[_to] */\n      0x0\n        /* \"contracts/BasicToken.sol\":1199:1202  _to */\n      dup10\n        /* \"contracts/BasicToken.sol\":1190:1203  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/BasicToken.sol\":1190:1207  balances[_to].add */\n      tag_192\n      swap1\n        /* \"contracts/BasicToken.sol\":1190:1219  balances[_to].add(sendAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_191:\n        /* \"contracts/BasicToken.sol\":1174:1182  balances */\n      0x2\n        /* \"contracts/BasicToken.sol\":1174:1187  balances[_to] */\n      0x0\n        /* \"contracts/BasicToken.sol\":1183:1186  _to */\n      dup9\n        /* \"contracts/BasicToken.sol\":1174:1187  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BasicToken.sol\":1174:1219  balances[_to] = balances[_to].add(sendAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BasicToken.sol\":1239:1240  0 */\n      0x0\n        /* \"contracts/BasicToken.sol\":1233:1236  fee */\n      dup4\n        /* \"contracts/BasicToken.sol\":1233:1240  fee > 0 */\n      gt\n        /* \"contracts/BasicToken.sol\":1229:1355  if (fee > 0) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"contracts/BasicToken.sol\":1274:1298  balances[owner].add(fee) */\n      tag_194\n        /* \"contracts/BasicToken.sol\":1294:1297  fee */\n      dup4\n        /* \"contracts/BasicToken.sol\":1274:1282  balances */\n      0x2\n        /* \"contracts/BasicToken.sol\":1274:1289  balances[owner] */\n      0x0\n        /* \"contracts/BasicToken.sol\":1283:1288  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BasicToken.sol\":1274:1289  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/BasicToken.sol\":1274:1293  balances[owner].add */\n      tag_192\n      swap1\n        /* \"contracts/BasicToken.sol\":1274:1298  balances[owner].add(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"contracts/BasicToken.sol\":1256:1264  balances */\n      0x2\n        /* \"contracts/BasicToken.sol\":1256:1271  balances[owner] */\n      0x0\n        /* \"contracts/BasicToken.sol\":1265:1270  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BasicToken.sol\":1256:1271  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BasicToken.sol\":1256:1298  balances[owner] = balances[owner].add(fee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BasicToken.sol\":1333:1338  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BasicToken.sol\":1312:1344  Transfer(msg.sender, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BasicToken.sol\":1321:1331  msg.sender */\n      caller\n        /* \"contracts/BasicToken.sol\":1312:1344  Transfer(msg.sender, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BasicToken.sol\":1340:1343  fee */\n      dup6\n        /* \"contracts/BasicToken.sol\":1312:1344  Transfer(msg.sender, owner, fee) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BasicToken.sol\":1229:1355  if (fee > 0) {... */\n    tag_193:\n        /* \"contracts/BasicToken.sol\":1385:1388  _to */\n      dup6\n        /* \"contracts/BasicToken.sol\":1364:1401  Transfer(msg.sender, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BasicToken.sol\":1373:1383  msg.sender */\n      caller\n        /* \"contracts/BasicToken.sol\":1364:1401  Transfer(msg.sender, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BasicToken.sol\":1390:1400  sendAmount */\n      dup5\n        /* \"contracts/BasicToken.sol\":1364:1401  Transfer(msg.sender, _to, sendAmount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BasicToken.sol\":1418:1422  true */\n      0x1\n        /* \"contracts/BasicToken.sol\":1411:1422  return true */\n      swap4\n      pop\n        /* \"contracts/BasicToken.sol\":833:1429  function _transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) returns(bool) {... */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Blacklist.sol\":278:400  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n    tag_83:\n        /* \"contracts/Blacklist.sol\":349:353  bool */\n      0x0\n        /* \"contracts/Blacklist.sol\":372:385  isBlackListed */\n      0x6\n        /* \"contracts/Blacklist.sol\":372:393  isBlackListed[_maker] */\n      0x0\n        /* \"contracts/Blacklist.sol\":386:392  _maker */\n      dup4\n        /* \"contracts/Blacklist.sol\":372:393  isBlackListed[_maker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Blacklist.sol\":365:393  return isBlackListed[_maker] */\n      swap1\n      pop\n        /* \"contracts/Blacklist.sol\":278:400  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StandardToken.sol\":425:486  mapping (address => mapping (address => uint)) public allowed */\n    tag_86:\n      mstore(0x20, 0x5)\n      dup2\n      0x0\n      mstore\n      mstore(0x20, keccak256(0x0, 0x40))\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Pausable.sol\":266:292  bool public paused = false */\n    tag_89:\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":1854:2092  function balanceOf(address who) public constant returns (uint) {... */\n    tag_92:\n        /* \"contracts/DiverseTetherToken.sol\":1911:1915  uint */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":1931:1941  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":1927:2086  if (deprecated) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/DiverseTetherToken.sol\":1986:2001  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":1964:2012  UpgradedStandardToken(upgradedAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/DiverseTetherToken.sol\":2013:2016  who */\n      dup4\n        /* \"contracts/DiverseTetherToken.sol\":1964:2017  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_198\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_198:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_199\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_199:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":1957:2017  return UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      swap1\n      pop\n      jump(tag_196)\n        /* \"contracts/DiverseTetherToken.sol\":1927:2086  if (deprecated) {... */\n    tag_197:\n        /* \"contracts/DiverseTetherToken.sol\":2055:2075  super.balanceOf(who) */\n      tag_201\n        /* \"contracts/DiverseTetherToken.sol\":2071:2074  who */\n      dup3\n        /* \"contracts/DiverseTetherToken.sol\":2055:2070  super.balanceOf */\n      tag_202\n        /* \"contracts/DiverseTetherToken.sol\":2055:2075  super.balanceOf(who) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/DiverseTetherToken.sol\":2048:2075  return super.balanceOf(who) */\n      swap1\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":1854:2092  function balanceOf(address who) public constant returns (uint) {... */\n    tag_196:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Pausable.sol\":685:770  function pause() onlyOwner whenNotPaused public {... */\n    tag_95:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_204\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_204:\n        /* \"contracts/Pausable.sol\":435:441  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":434:441  !paused */\n      iszero\n        /* \"contracts/Pausable.sol\":426:442  require(!paused) */\n      iszero\n      iszero\n      tag_206\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_206:\n        /* \"contracts/Pausable.sol\":748:752  true */\n      0x1\n        /* \"contracts/Pausable.sol\":739:745  paused */\n      0x0\n      0x14\n        /* \"contracts/Pausable.sol\":739:752  paused = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pausable.sol\":758:765  Pause() */\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Pausable.sol\":685:770  function pause() onlyOwner whenNotPaused public {... */\n      jump\t// out\n        /* \"contracts/Blacklist.sol\":406:491  function getOwner() external constant returns (address) {... */\n    tag_98:\n        /* \"contracts/Blacklist.sol\":453:460  address */\n      0x0\n        /* \"contracts/Blacklist.sol\":479:484  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Blacklist.sol\":472:484  return owner */\n      swap1\n      pop\n        /* \"contracts/Blacklist.sol\":406:491  function getOwner() external constant returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":271:291  address public owner */\n    tag_101:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":275:295  string public symbol */\n    tag_104:\n      0x8\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_209\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_210\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_209)\n    tag_210:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_211:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_211\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_209:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":1007:1336  function transfer(address _to, uint _value) external whenNotPaused returns(bool){... */\n    tag_111:\n        /* \"contracts/DiverseTetherToken.sol\":1082:1086  bool */\n      0x0\n        /* \"contracts/Pausable.sol\":435:441  paused */\n      dup1\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":434:441  !paused */\n      iszero\n        /* \"contracts/Pausable.sol\":426:442  require(!paused) */\n      iszero\n      iszero\n      tag_213\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_213:\n        /* \"contracts/DiverseTetherToken.sol\":1106:1119  isBlackListed */\n      0x6\n        /* \"contracts/DiverseTetherToken.sol\":1106:1131  isBlackListed[msg.sender] */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":1120:1130  msg.sender */\n      caller\n        /* \"contracts/DiverseTetherToken.sol\":1106:1131  isBlackListed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":1105:1131  !isBlackListed[msg.sender] */\n      iszero\n        /* \"contracts/DiverseTetherToken.sol\":1097:1132  require(!isBlackListed[msg.sender]) */\n      iszero\n      iszero\n      tag_215\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_215:\n        /* \"contracts/DiverseTetherToken.sol\":1146:1156  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":1142:1330  if (deprecated) {... */\n      iszero\n      tag_216\n      jumpi\n        /* \"contracts/DiverseTetherToken.sol\":1201:1216  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":1179:1234  UpgradedStandardToken(upgradedAddress).transferByLegacy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6e18980a\n        /* \"contracts/DiverseTetherToken.sol\":1235:1245  msg.sender */\n      caller\n        /* \"contracts/DiverseTetherToken.sol\":1247:1250  _to */\n      dup6\n        /* \"contracts/DiverseTetherToken.sol\":1252:1258  _value */\n      dup6\n        /* \"contracts/DiverseTetherToken.sol\":1179:1259  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_217\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_217:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_218\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_218:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":1172:1259  return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      swap1\n      pop\n      jump(tag_214)\n        /* \"contracts/DiverseTetherToken.sol\":1142:1330  if (deprecated) {... */\n    tag_216:\n        /* \"contracts/DiverseTetherToken.sol\":1297:1319  _transfer(_to, _value) */\n      tag_220\n        /* \"contracts/DiverseTetherToken.sol\":1307:1310  _to */\n      dup4\n        /* \"contracts/DiverseTetherToken.sol\":1312:1318  _value */\n      dup4\n        /* \"contracts/DiverseTetherToken.sol\":1297:1306  _transfer */\n      tag_80\n        /* \"contracts/DiverseTetherToken.sol\":1297:1319  _transfer(_to, _value) */\n      jump\t// in\n    tag_220:\n        /* \"contracts/DiverseTetherToken.sol\":1290:1319  return _transfer(_to, _value) */\n      swap1\n      pop\n        /* \"contracts/Pausable.sol\":448:449  _ */\n    tag_214:\n        /* \"contracts/DiverseTetherToken.sol\":1007:1336  function transfer(address _to, uint _value) external whenNotPaused returns(bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":4231:4609  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n    tag_114:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_222\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_222:\n        /* \"contracts/DiverseTetherToken.sol\":4427:4429  20 */\n      0x14\n        /* \"contracts/DiverseTetherToken.sol\":4410:4424  newBasisPoints */\n      dup3\n        /* \"contracts/DiverseTetherToken.sol\":4410:4429  newBasisPoints < 20 */\n      lt\n        /* \"contracts/DiverseTetherToken.sol\":4402:4430  require(newBasisPoints < 20) */\n      iszero\n      iszero\n      tag_224\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_224:\n        /* \"contracts/DiverseTetherToken.sol\":4460:4462  50 */\n      0x32\n        /* \"contracts/DiverseTetherToken.sol\":4448:4457  newMaxFee */\n      dup2\n        /* \"contracts/DiverseTetherToken.sol\":4448:4462  newMaxFee < 50 */\n      lt\n        /* \"contracts/DiverseTetherToken.sol\":4440:4463  require(newMaxFee < 50) */\n      iszero\n      iszero\n      tag_225\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_225:\n        /* \"contracts/DiverseTetherToken.sol\":4492:4506  newBasisPoints */\n      dup2\n        /* \"contracts/DiverseTetherToken.sol\":4474:4489  basisPointsRate */\n      0x3\n        /* \"contracts/DiverseTetherToken.sol\":4474:4506  basisPointsRate = newBasisPoints */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":4529:4556  newMaxFee.mul(10**decimals) */\n      tag_226\n        /* \"contracts/DiverseTetherToken.sol\":4547:4555  decimals */\n      sload(0x9)\n        /* \"contracts/DiverseTetherToken.sol\":4543:4545  10 */\n      0xa\n        /* \"contracts/DiverseTetherToken.sol\":4543:4555  10**decimals */\n      exp\n        /* \"contracts/DiverseTetherToken.sol\":4529:4538  newMaxFee */\n      dup3\n        /* \"contracts/DiverseTetherToken.sol\":4529:4542  newMaxFee.mul */\n      tag_185\n      swap1\n        /* \"contracts/DiverseTetherToken.sol\":4529:4556  newMaxFee.mul(10**decimals) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_226:\n        /* \"contracts/DiverseTetherToken.sol\":4516:4526  maximumFee */\n      0x4\n        /* \"contracts/DiverseTetherToken.sol\":4516:4556  maximumFee = newMaxFee.mul(10**decimals) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":4567:4602  Params(basisPointsRate, maximumFee) */\n      0xb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e\n        /* \"contracts/DiverseTetherToken.sol\":4574:4589  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/DiverseTetherToken.sol\":4591:4601  maximumFee */\n      sload(0x4)\n        /* \"contracts/DiverseTetherToken.sol\":4567:4602  Params(basisPointsRate, maximumFee) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DiverseTetherToken.sol\":4231:4609  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":3512:3771  function issue(uint amount) public onlyOwner {... */\n    tag_117:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_228\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_228:\n        /* \"contracts/DiverseTetherToken.sol\":3599:3611  _totalSupply */\n      sload(0x1)\n        /* \"contracts/DiverseTetherToken.sol\":3590:3596  amount */\n      dup2\n        /* \"contracts/DiverseTetherToken.sol\":3575:3587  _totalSupply */\n      sload(0x1)\n        /* \"contracts/DiverseTetherToken.sol\":3575:3596  _totalSupply + amount */\n      add\n        /* \"contracts/DiverseTetherToken.sol\":3575:3611  _totalSupply + amount > _totalSupply */\n      gt\n        /* \"contracts/DiverseTetherToken.sol\":3567:3612  require(_totalSupply + amount > _totalSupply) */\n      iszero\n      iszero\n      tag_230\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_230:\n        /* \"contracts/DiverseTetherToken.sol\":3657:3665  balances */\n      0x2\n        /* \"contracts/DiverseTetherToken.sol\":3657:3672  balances[owner] */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":3666:3671  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":3657:3672  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/DiverseTetherToken.sol\":3648:3654  amount */\n      dup2\n        /* \"contracts/DiverseTetherToken.sol\":3630:3638  balances */\n      0x2\n        /* \"contracts/DiverseTetherToken.sol\":3630:3645  balances[owner] */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":3639:3644  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":3630:3645  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/DiverseTetherToken.sol\":3630:3654  balances[owner] + amount */\n      add\n        /* \"contracts/DiverseTetherToken.sol\":3630:3672  balances[owner] + amount > balances[owner] */\n      gt\n        /* \"contracts/DiverseTetherToken.sol\":3622:3673  require(balances[owner] + amount > balances[owner]) */\n      iszero\n      iszero\n      tag_231\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_231:\n        /* \"contracts/DiverseTetherToken.sol\":3703:3709  amount */\n      dup1\n        /* \"contracts/DiverseTetherToken.sol\":3684:3692  balances */\n      0x2\n        /* \"contracts/DiverseTetherToken.sol\":3684:3699  balances[owner] */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":3693:3698  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":3684:3699  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":3684:3709  balances[owner] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":3735:3741  amount */\n      dup1\n        /* \"contracts/DiverseTetherToken.sol\":3719:3731  _totalSupply */\n      0x1\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":3719:3741  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":3751:3764  Issue(amount) */\n      0xcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a\n        /* \"contracts/DiverseTetherToken.sol\":3757:3763  amount */\n      dup2\n        /* \"contracts/DiverseTetherToken.sol\":3751:3764  Issue(amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DiverseTetherToken.sol\":3512:3771  function issue(uint amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":3995:4225  function redeem(uint amount) public onlyOwner {... */\n    tag_120:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_233\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_233:\n        /* \"contracts/DiverseTetherToken.sol\":4075:4081  amount */\n      dup1\n        /* \"contracts/DiverseTetherToken.sol\":4059:4071  _totalSupply */\n      sload(0x1)\n        /* \"contracts/DiverseTetherToken.sol\":4059:4081  _totalSupply >= amount */\n      lt\n      iszero\n        /* \"contracts/DiverseTetherToken.sol\":4051:4082  require(_totalSupply >= amount) */\n      iszero\n      iszero\n      tag_235\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_235:\n        /* \"contracts/DiverseTetherToken.sol\":4119:4125  amount */\n      dup1\n        /* \"contracts/DiverseTetherToken.sol\":4100:4108  balances */\n      0x2\n        /* \"contracts/DiverseTetherToken.sol\":4100:4115  balances[owner] */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":4109:4114  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":4100:4115  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/DiverseTetherToken.sol\":4100:4125  balances[owner] >= amount */\n      lt\n      iszero\n        /* \"contracts/DiverseTetherToken.sol\":4092:4126  require(balances[owner] >= amount) */\n      iszero\n      iszero\n      tag_236\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_236:\n        /* \"contracts/DiverseTetherToken.sol\":4153:4159  amount */\n      dup1\n        /* \"contracts/DiverseTetherToken.sol\":4137:4149  _totalSupply */\n      0x1\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":4137:4159  _totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":4188:4194  amount */\n      dup1\n        /* \"contracts/DiverseTetherToken.sol\":4169:4177  balances */\n      0x2\n        /* \"contracts/DiverseTetherToken.sol\":4169:4184  balances[owner] */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":4178:4183  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":4169:4184  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":4169:4194  balances[owner] -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":4204:4218  Redeem(amount) */\n      0x702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44\n        /* \"contracts/DiverseTetherToken.sol\":4211:4217  amount */\n      dup2\n        /* \"contracts/DiverseTetherToken.sol\":4204:4218  Redeem(amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DiverseTetherToken.sol\":3995:4225  function redeem(uint amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":2552:2839  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_123:\n        /* \"contracts/DiverseTetherToken.sol\":2630:2644  uint remaining */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":2660:2670  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":2656:2833  if (deprecated) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"contracts/DiverseTetherToken.sol\":2707:2722  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":2693:2733  StandardToken(upgradedAddress).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/DiverseTetherToken.sol\":2734:2740  _owner */\n      dup5\n        /* \"contracts/DiverseTetherToken.sol\":2742:2750  _spender */\n      dup5\n        /* \"contracts/DiverseTetherToken.sol\":2693:2751  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_239\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_239:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_240\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_240:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":2686:2751  return StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      swap1\n      pop\n      jump(tag_237)\n        /* \"contracts/DiverseTetherToken.sol\":2656:2833  if (deprecated) {... */\n    tag_238:\n        /* \"contracts/DiverseTetherToken.sol\":2789:2822  super.allowance(_owner, _spender) */\n      tag_242\n        /* \"contracts/DiverseTetherToken.sol\":2805:2811  _owner */\n      dup4\n        /* \"contracts/DiverseTetherToken.sol\":2813:2821  _spender */\n      dup4\n        /* \"contracts/DiverseTetherToken.sol\":2789:2804  super.allowance */\n      tag_243\n        /* \"contracts/DiverseTetherToken.sol\":2789:2822  super.allowance(_owner, _spender) */\n      jump\t// in\n    tag_242:\n        /* \"contracts/DiverseTetherToken.sol\":2782:2822  return super.allowance(_owner, _spender) */\n      swap1\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":2552:2839  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_237:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BasicToken.sol\":429:460  uint public basisPointsRate = 0 */\n    tag_126:\n      sload(0x3)\n      dup2\n      jump\t// out\n        /* \"contracts/Blacklist.sol\":497:543  mapping (address => bool) public isBlackListed */\n    tag_129:\n      mstore(0x20, 0x6)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Blacklist.sol\":702:859  function removeBlackList (address _clearedUser) public onlyOwner {... */\n    tag_132:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_245\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_245:\n        /* \"contracts/Blacklist.sol\":807:812  false */\n      0x0\n        /* \"contracts/Blacklist.sol\":777:790  isBlackListed */\n      0x6\n        /* \"contracts/Blacklist.sol\":777:804  isBlackListed[_clearedUser] */\n      0x0\n        /* \"contracts/Blacklist.sol\":791:803  _clearedUser */\n      dup4\n        /* \"contracts/Blacklist.sol\":777:804  isBlackListed[_clearedUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/Blacklist.sol\":777:812  isBlackListed[_clearedUser] = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Blacklist.sol\":822:852  RemovedBlackList(_clearedUser) */\n      0xd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c\n        /* \"contracts/Blacklist.sol\":839:851  _clearedUser */\n      dup2\n        /* \"contracts/Blacklist.sol\":822:852  RemovedBlackList(_clearedUser) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Blacklist.sol\":702:859  function removeBlackList (address _clearedUser) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/StandardToken.sol\":493:535  uint public constant MAX_UINT = 2**256 - 1 */\n    tag_135:\n        /* \"contracts/StandardToken.sol\":525:535  2**256 - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/StandardToken.sol\":493:535  uint public constant MAX_UINT = 2**256 - 1 */\n      dup2\n      jump\t// out\n        /* \"contracts/Ownable.sol\":821:968  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_138:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_248\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_248:\n        /* \"contracts/Ownable.sol\":917:918  0 */\n      0x0\n        /* \"contracts/Ownable.sol\":897:919  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":897:905  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":897:919  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Ownable.sol\":893:962  if (newOwner != address(0)) {... */\n      iszero\n      tag_250\n      jumpi\n        /* \"contracts/Ownable.sol\":943:951  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":935:940  owner */\n      0x0\n      dup1\n        /* \"contracts/Ownable.sol\":935:951  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":893:962  if (newOwner != address(0)) {... */\n    tag_250:\n        /* \"contracts/Ownable.sol\":821:968  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Blacklist.sol\":865:1183  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n    tag_141:\n        /* \"contracts/Blacklist.sol\":996:1011  uint dirtyFunds */\n      0x0\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_252\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_252:\n        /* \"contracts/Blacklist.sol\":954:967  isBlackListed */\n      0x6\n        /* \"contracts/Blacklist.sol\":954:985  isBlackListed[_blackListedUser] */\n      0x0\n        /* \"contracts/Blacklist.sol\":968:984  _blackListedUser */\n      dup4\n        /* \"contracts/Blacklist.sol\":954:985  isBlackListed[_blackListedUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Blacklist.sol\":946:986  require(isBlackListed[_blackListedUser]) */\n      iszero\n      iszero\n      tag_254\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_254:\n        /* \"contracts/Blacklist.sol\":1014:1041  balanceOf(_blackListedUser) */\n      tag_255\n        /* \"contracts/Blacklist.sol\":1024:1040  _blackListedUser */\n      dup3\n        /* \"contracts/Blacklist.sol\":1014:1023  balanceOf */\n      tag_92\n        /* \"contracts/Blacklist.sol\":1014:1041  balanceOf(_blackListedUser) */\n      jump\t// in\n    tag_255:\n        /* \"contracts/Blacklist.sol\":996:1041  uint dirtyFunds = balanceOf(_blackListedUser) */\n      swap1\n      pop\n        /* \"contracts/Blacklist.sol\":1080:1081  0 */\n      0x0\n        /* \"contracts/Blacklist.sol\":1051:1059  balances */\n      0x2\n        /* \"contracts/Blacklist.sol\":1051:1077  balances[_blackListedUser] */\n      0x0\n        /* \"contracts/Blacklist.sol\":1060:1076  _blackListedUser */\n      dup5\n        /* \"contracts/Blacklist.sol\":1051:1077  balances[_blackListedUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/Blacklist.sol\":1051:1081  balances[_blackListedUser] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Blacklist.sol\":1107:1117  dirtyFunds */\n      dup1\n        /* \"contracts/Blacklist.sol\":1091:1103  _totalSupply */\n      0x1\n      0x0\n        /* \"contracts/Blacklist.sol\":1091:1117  _totalSupply -= dirtyFunds */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Blacklist.sol\":1127:1176  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      0x61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c6\n        /* \"contracts/Blacklist.sol\":1147:1163  _blackListedUser */\n      dup3\n        /* \"contracts/Blacklist.sol\":1165:1175  dirtyFunds */\n      dup3\n        /* \"contracts/Blacklist.sol\":1127:1176  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Blacklist.sol\":865:1183  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StandardToken.sol\":1937:2500  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_156:\n        /* \"contracts/StandardToken.sol\":2008:2014  2 * 32 */\n      0x40\n        /* \"contracts/BasicToken.sol\":646:647  4 */\n      0x4\n        /* \"contracts/BasicToken.sol\":639:643  size */\n      dup2\n        /* \"contracts/BasicToken.sol\":639:647  size + 4 */\n      add\n        /* \"contracts/BasicToken.sol\":621:629  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/BasicToken.sol\":621:636  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/BasicToken.sol\":621:647  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/BasicToken.sol\":619:648  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/BasicToken.sol\":611:649  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_257\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_257:\n        /* \"contracts/StandardToken.sol\":2352:2353  0 */\n      0x0\n        /* \"contracts/StandardToken.sol\":2342:2348  _value */\n      dup3\n        /* \"contracts/StandardToken.sol\":2342:2353  _value != 0 */\n      eq\n      iszero\n        /* \"contracts/StandardToken.sol\":2341:2394  (_value != 0) && (allowed[msg.sender][_spender] != 0) */\n      dup1\n      iszero\n      tag_259\n      jumpi\n      pop\n        /* \"contracts/StandardToken.sol\":2392:2393  0 */\n      0x0\n        /* \"contracts/StandardToken.sol\":2359:2366  allowed */\n      0x5\n        /* \"contracts/StandardToken.sol\":2359:2378  allowed[msg.sender] */\n      0x0\n        /* \"contracts/StandardToken.sol\":2367:2377  msg.sender */\n      caller\n        /* \"contracts/StandardToken.sol\":2359:2378  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":2359:2388  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/StandardToken.sol\":2379:2387  _spender */\n      dup6\n        /* \"contracts/StandardToken.sol\":2359:2388  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StandardToken.sol\":2359:2393  allowed[msg.sender][_spender] != 0 */\n      eq\n      iszero\n        /* \"contracts/StandardToken.sol\":2341:2394  (_value != 0) && (allowed[msg.sender][_spender] != 0) */\n    tag_259:\n        /* \"contracts/StandardToken.sol\":2339:2395  !((_value != 0) && (allowed[msg.sender][_spender] != 0)) */\n      iszero\n        /* \"contracts/StandardToken.sol\":2331:2396  require(!((_value != 0) && (allowed[msg.sender][_spender] != 0))) */\n      iszero\n      iszero\n      tag_260\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_260:\n        /* \"contracts/StandardToken.sol\":2439:2445  _value */\n      dup2\n        /* \"contracts/StandardToken.sol\":2407:2414  allowed */\n      0x5\n        /* \"contracts/StandardToken.sol\":2407:2426  allowed[msg.sender] */\n      0x0\n        /* \"contracts/StandardToken.sol\":2415:2425  msg.sender */\n      caller\n        /* \"contracts/StandardToken.sol\":2407:2426  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":2407:2436  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/StandardToken.sol\":2427:2435  _spender */\n      dup6\n        /* \"contracts/StandardToken.sol\":2407:2436  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":2407:2445  allowed[msg.sender][_spender] = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StandardToken.sol\":2476:2484  _spender */\n      dup3\n        /* \"contracts/StandardToken.sol\":2455:2493  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StandardToken.sol\":2464:2474  msg.sender */\n      caller\n        /* \"contracts/StandardToken.sol\":2455:2493  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/StandardToken.sol\":2486:2492  _value */\n      dup5\n        /* \"contracts/StandardToken.sol\":2455:2493  Approval(msg.sender, _spender, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/StandardToken.sol\":1937:2500  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StandardToken.sol\":817:1697  function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {... */\n    tag_174:\n        /* \"contracts/StandardToken.sol\":921:935  var _allowance */\n      0x0\n        /* \"contracts/StandardToken.sol\":1130:1138  uint fee */\n      dup1\n        /* \"contracts/StandardToken.sol\":1375:1390  uint sendAmount */\n      0x0\n        /* \"contracts/StandardToken.sol\":903:909  3 * 32 */\n      0x60\n        /* \"contracts/BasicToken.sol\":646:647  4 */\n      0x4\n        /* \"contracts/BasicToken.sol\":639:643  size */\n      dup2\n        /* \"contracts/BasicToken.sol\":639:647  size + 4 */\n      add\n        /* \"contracts/BasicToken.sol\":621:629  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/BasicToken.sol\":621:636  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/BasicToken.sol\":621:647  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/BasicToken.sol\":619:648  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/BasicToken.sol\":611:649  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_262\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_262:\n        /* \"contracts/StandardToken.sol\":938:945  allowed */\n      0x5\n        /* \"contracts/StandardToken.sol\":938:952  allowed[_from] */\n      0x0\n        /* \"contracts/StandardToken.sol\":946:951  _from */\n      dup9\n        /* \"contracts/StandardToken.sol\":938:952  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":938:964  allowed[_from][msg.sender] */\n      0x0\n        /* \"contracts/StandardToken.sol\":953:963  msg.sender */\n      caller\n        /* \"contracts/StandardToken.sol\":938:964  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StandardToken.sol\":921:964  var _allowance = allowed[_from][msg.sender] */\n      swap4\n      pop\n        /* \"contracts/StandardToken.sol\":1141:1181  (_value.mul(basisPointsRate)).div(10000) */\n      tag_264\n        /* \"contracts/StandardToken.sol\":1175:1180  10000 */\n      0x2710\n        /* \"contracts/StandardToken.sol\":1142:1169  _value.mul(basisPointsRate) */\n      tag_265\n        /* \"contracts/StandardToken.sol\":1153:1168  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/StandardToken.sol\":1142:1148  _value */\n      dup9\n        /* \"contracts/StandardToken.sol\":1142:1152  _value.mul */\n      tag_185\n      swap1\n        /* \"contracts/StandardToken.sol\":1142:1169  _value.mul(basisPointsRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_265:\n        /* \"contracts/StandardToken.sol\":1141:1174  (_value.mul(basisPointsRate)).div */\n      tag_186\n      swap1\n        /* \"contracts/StandardToken.sol\":1141:1181  (_value.mul(basisPointsRate)).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_264:\n        /* \"contracts/StandardToken.sol\":1130:1181  uint fee = (_value.mul(basisPointsRate)).div(10000) */\n      swap3\n      pop\n        /* \"contracts/StandardToken.sol\":1201:1211  maximumFee */\n      sload(0x4)\n        /* \"contracts/StandardToken.sol\":1195:1198  fee */\n      dup4\n        /* \"contracts/StandardToken.sol\":1195:1211  fee > maximumFee */\n      gt\n        /* \"contracts/StandardToken.sol\":1191:1254  if (fee > maximumFee) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"contracts/StandardToken.sol\":1233:1243  maximumFee */\n      sload(0x4)\n        /* \"contracts/StandardToken.sol\":1227:1243  fee = maximumFee */\n      swap3\n      pop\n        /* \"contracts/StandardToken.sol\":1191:1254  if (fee > maximumFee) {... */\n    tag_266:\n        /* \"contracts/StandardToken.sol\":525:535  2**256 - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/StandardToken.sol\":1267:1277  _allowance */\n      dup5\n        /* \"contracts/StandardToken.sol\":1267:1288  _allowance < MAX_UINT */\n      lt\n        /* \"contracts/StandardToken.sol\":1263:1366  if (_allowance < MAX_UINT) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"contracts/StandardToken.sol\":1333:1355  _allowance.sub(_value) */\n      tag_268\n        /* \"contracts/StandardToken.sol\":1348:1354  _value */\n      dup6\n        /* \"contracts/StandardToken.sol\":1333:1343  _allowance */\n      dup6\n        /* \"contracts/StandardToken.sol\":1333:1347  _allowance.sub */\n      tag_189\n      swap1\n        /* \"contracts/StandardToken.sol\":1333:1355  _allowance.sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_268:\n        /* \"contracts/StandardToken.sol\":1304:1311  allowed */\n      0x5\n        /* \"contracts/StandardToken.sol\":1304:1318  allowed[_from] */\n      0x0\n        /* \"contracts/StandardToken.sol\":1312:1317  _from */\n      dup10\n        /* \"contracts/StandardToken.sol\":1304:1318  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":1304:1330  allowed[_from][msg.sender] */\n      0x0\n        /* \"contracts/StandardToken.sol\":1319:1329  msg.sender */\n      caller\n        /* \"contracts/StandardToken.sol\":1304:1330  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":1304:1355  allowed[_from][msg.sender] = _allowance.sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StandardToken.sol\":1263:1366  if (_allowance < MAX_UINT) {... */\n    tag_267:\n        /* \"contracts/StandardToken.sol\":1393:1408  _value.sub(fee) */\n      tag_269\n        /* \"contracts/StandardToken.sol\":1404:1407  fee */\n      dup4\n        /* \"contracts/StandardToken.sol\":1393:1399  _value */\n      dup7\n        /* \"contracts/StandardToken.sol\":1393:1403  _value.sub */\n      tag_189\n      swap1\n        /* \"contracts/StandardToken.sol\":1393:1408  _value.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_269:\n        /* \"contracts/StandardToken.sol\":1375:1408  uint sendAmount = _value.sub(fee) */\n      swap2\n      pop\n        /* \"contracts/StandardToken.sol\":1436:1463  balances[_from].sub(_value) */\n      tag_270\n        /* \"contracts/StandardToken.sol\":1456:1462  _value */\n      dup6\n        /* \"contracts/StandardToken.sol\":1436:1444  balances */\n      0x2\n        /* \"contracts/StandardToken.sol\":1436:1451  balances[_from] */\n      0x0\n        /* \"contracts/StandardToken.sol\":1445:1450  _from */\n      dup11\n        /* \"contracts/StandardToken.sol\":1436:1451  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StandardToken.sol\":1436:1455  balances[_from].sub */\n      tag_189\n      swap1\n        /* \"contracts/StandardToken.sol\":1436:1463  balances[_from].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_270:\n        /* \"contracts/StandardToken.sol\":1418:1426  balances */\n      0x2\n        /* \"contracts/StandardToken.sol\":1418:1433  balances[_from] */\n      0x0\n        /* \"contracts/StandardToken.sol\":1427:1432  _from */\n      dup10\n        /* \"contracts/StandardToken.sol\":1418:1433  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":1418:1463  balances[_from] = balances[_from].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StandardToken.sol\":1489:1518  balances[_to].add(sendAmount) */\n      tag_271\n        /* \"contracts/StandardToken.sol\":1507:1517  sendAmount */\n      dup3\n        /* \"contracts/StandardToken.sol\":1489:1497  balances */\n      0x2\n        /* \"contracts/StandardToken.sol\":1489:1502  balances[_to] */\n      0x0\n        /* \"contracts/StandardToken.sol\":1498:1501  _to */\n      dup10\n        /* \"contracts/StandardToken.sol\":1489:1502  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StandardToken.sol\":1489:1506  balances[_to].add */\n      tag_192\n      swap1\n        /* \"contracts/StandardToken.sol\":1489:1518  balances[_to].add(sendAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_271:\n        /* \"contracts/StandardToken.sol\":1473:1481  balances */\n      0x2\n        /* \"contracts/StandardToken.sol\":1473:1486  balances[_to] */\n      0x0\n        /* \"contracts/StandardToken.sol\":1482:1485  _to */\n      dup9\n        /* \"contracts/StandardToken.sol\":1473:1486  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":1473:1518  balances[_to] = balances[_to].add(sendAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StandardToken.sol\":1538:1539  0 */\n      0x0\n        /* \"contracts/StandardToken.sol\":1532:1535  fee */\n      dup4\n        /* \"contracts/StandardToken.sol\":1532:1539  fee > 0 */\n      gt\n        /* \"contracts/StandardToken.sol\":1528:1649  if (fee > 0) {... */\n      iszero\n      tag_272\n      jumpi\n        /* \"contracts/StandardToken.sol\":1573:1597  balances[owner].add(fee) */\n      tag_273\n        /* \"contracts/StandardToken.sol\":1593:1596  fee */\n      dup4\n        /* \"contracts/StandardToken.sol\":1573:1581  balances */\n      0x2\n        /* \"contracts/StandardToken.sol\":1573:1588  balances[owner] */\n      0x0\n        /* \"contracts/StandardToken.sol\":1582:1587  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StandardToken.sol\":1573:1588  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StandardToken.sol\":1573:1592  balances[owner].add */\n      tag_192\n      swap1\n        /* \"contracts/StandardToken.sol\":1573:1597  balances[owner].add(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_273:\n        /* \"contracts/StandardToken.sol\":1555:1563  balances */\n      0x2\n        /* \"contracts/StandardToken.sol\":1555:1570  balances[owner] */\n      0x0\n        /* \"contracts/StandardToken.sol\":1564:1569  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StandardToken.sol\":1555:1570  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":1555:1597  balances[owner] = balances[owner].add(fee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StandardToken.sol\":1627:1632  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StandardToken.sol\":1611:1638  Transfer(_from, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StandardToken.sol\":1620:1625  _from */\n      dup8\n        /* \"contracts/StandardToken.sol\":1611:1638  Transfer(_from, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/StandardToken.sol\":1634:1637  fee */\n      dup6\n        /* \"contracts/StandardToken.sol\":1611:1638  Transfer(_from, owner, fee) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/StandardToken.sol\":1528:1649  if (fee > 0) {... */\n    tag_272:\n        /* \"contracts/StandardToken.sol\":1674:1677  _to */\n      dup6\n        /* \"contracts/StandardToken.sol\":1658:1690  Transfer(_from, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StandardToken.sol\":1667:1672  _from */\n      dup8\n        /* \"contracts/StandardToken.sol\":1658:1690  Transfer(_from, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/StandardToken.sol\":1679:1689  sendAmount */\n      dup5\n        /* \"contracts/StandardToken.sol\":1658:1690  Transfer(_from, _to, sendAmount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/StandardToken.sol\":817:1697  function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":171:372  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_185:\n        /* \"contracts/SafeMath.sol\":229:236  uint256 */\n      0x0\n        /* \"contracts/SafeMath.sol\":302:311  uint256 c */\n      dup1\n        /* \"contracts/SafeMath.sol\":257:258  0 */\n      0x0\n        /* \"contracts/SafeMath.sol\":252:253  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":252:258  a == 0 */\n      eq\n        /* \"contracts/SafeMath.sol\":248:293  if (a == 0) {... */\n      iszero\n      tag_275\n      jumpi\n        /* \"contracts/SafeMath.sol\":281:282  0 */\n      0x0\n        /* \"contracts/SafeMath.sol\":274:282  return 0 */\n      swap2\n      pop\n      jump(tag_274)\n        /* \"contracts/SafeMath.sol\":248:293  if (a == 0) {... */\n    tag_275:\n        /* \"contracts/SafeMath.sol\":318:319  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":314:315  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":314:319  a * b */\n      mul\n        /* \"contracts/SafeMath.sol\":302:319  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":345:346  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":340:341  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":336:337  c */\n      dup3\n        /* \"contracts/SafeMath.sol\":336:341  c / a */\n      dup2\n      iszero\n      iszero\n      tag_276\n      jumpi\n      invalid\n    tag_276:\n      div\n        /* \"contracts/SafeMath.sol\":336:346  c / a == b */\n      eq\n        /* \"contracts/SafeMath.sol\":329:347  assert(c / a == b) */\n      iszero\n      iszero\n      tag_277\n      jumpi\n      invalid\n    tag_277:\n        /* \"contracts/SafeMath.sol\":364:365  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":357:365  return c */\n      swap2\n      pop\n        /* \"contracts/SafeMath.sol\":171:372  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_274:\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":378:661  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_186:\n        /* \"contracts/SafeMath.sol\":436:443  uint256 */\n      0x0\n        /* \"contracts/SafeMath.sol\":533:542  uint256 c */\n      dup1\n        /* \"contracts/SafeMath.sol\":549:550  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":545:546  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":545:550  a / b */\n      dup2\n      iszero\n      iszero\n      tag_279\n      jumpi\n      invalid\n    tag_279:\n      div\n        /* \"contracts/SafeMath.sol\":533:550  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":653:654  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":646:654  return c */\n      swap2\n      pop\n        /* \"contracts/SafeMath.sol\":378:661  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":667:787  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_189:\n        /* \"contracts/SafeMath.sol\":725:732  uint256 */\n      0x0\n        /* \"contracts/SafeMath.sol\":756:757  a */\n      dup3\n        /* \"contracts/SafeMath.sol\":751:752  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":751:757  b <= a */\n      gt\n      iszero\n        /* \"contracts/SafeMath.sol\":744:758  assert(b <= a) */\n      iszero\n      iszero\n      tag_281\n      jumpi\n      invalid\n    tag_281:\n        /* \"contracts/SafeMath.sol\":779:780  b */\n      dup2\n        /* \"contracts/SafeMath.sol\":775:776  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":775:780  a - b */\n      sub\n        /* \"contracts/SafeMath.sol\":768:780  return a - b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":667:787  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":793:936  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_192:\n        /* \"contracts/SafeMath.sol\":851:858  uint256 */\n      0x0\n        /* \"contracts/SafeMath.sol\":870:879  uint256 c */\n      dup1\n        /* \"contracts/SafeMath.sol\":886:887  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":882:883  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":882:887  a + b */\n      add\n        /* \"contracts/SafeMath.sol\":870:887  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":909:910  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":904:905  c */\n      dup2\n        /* \"contracts/SafeMath.sol\":904:910  c >= a */\n      lt\n      iszero\n        /* \"contracts/SafeMath.sol\":897:911  assert(c >= a) */\n      iszero\n      iszero\n      tag_283\n      jumpi\n      invalid\n    tag_283:\n        /* \"contracts/SafeMath.sol\":928:929  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":921:929  return c */\n      swap2\n      pop\n        /* \"contracts/SafeMath.sol\":793:936  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BasicToken.sol\":1640:1754  function balanceOf(address _owner) public constant returns (uint balance) {... */\n    tag_202:\n        /* \"contracts/BasicToken.sol\":1700:1712  uint balance */\n      0x0\n        /* \"contracts/BasicToken.sol\":1731:1739  balances */\n      0x2\n        /* \"contracts/BasicToken.sol\":1731:1747  balances[_owner] */\n      0x0\n        /* \"contracts/BasicToken.sol\":1740:1746  _owner */\n      dup4\n        /* \"contracts/BasicToken.sol\":1731:1747  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/BasicToken.sol\":1724:1747  return balances[_owner] */\n      swap1\n      pop\n        /* \"contracts/BasicToken.sol\":1640:1754  function balanceOf(address _owner) public constant returns (uint balance) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StandardToken.sol\":2825:2968  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_243:\n        /* \"contracts/StandardToken.sol\":2903:2917  uint remaining */\n      0x0\n        /* \"contracts/StandardToken.sol\":2936:2943  allowed */\n      0x5\n        /* \"contracts/StandardToken.sol\":2936:2951  allowed[_owner] */\n      0x0\n        /* \"contracts/StandardToken.sol\":2944:2950  _owner */\n      dup5\n        /* \"contracts/StandardToken.sol\":2936:2951  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":2936:2961  allowed[_owner][_spender] */\n      0x0\n        /* \"contracts/StandardToken.sol\":2952:2960  _spender */\n      dup4\n        /* \"contracts/StandardToken.sol\":2936:2961  allowed[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StandardToken.sol\":2929:2961  return allowed[_owner][_spender] */\n      swap1\n      pop\n        /* \"contracts/StandardToken.sol\":2825:2968  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058203ae633900ad7a5a0dbd007f5fcad96c2f1d42f20d9e34a87d37fc28240c9238c0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "606060405260008060146101000a81548160ff0219169083151502179055506000600355600060045534156200003457600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550662386f26fc100006001819055506040805190810160405280600b81526020017f645465746865722055534400000000000000000000000000000000000000000081525060079080519060200190620000cf929190620001b3565b506040805190810160405280600581526020017f6455534454000000000000000000000000000000000000000000000000000000815250600890805190602001906200011d929190620001b3565b506006600981905550662386f26fc10000600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600a60146101000a81548160ff02191690831515021790555062000262565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001f657805160ff191683800117855562000227565b8280016001018555821562000227579182015b828111156200022657825182559160200191906001019062000209565b5b5090506200023691906200023a565b5090565b6200025f91905b808211156200025b57600081600090555060010162000241565b5090565b90565b612bdd80620002726000396000f3006060604052361561019f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101a45780630753c30c14610232578063095ea7b31461026b5780630e136b19146102ad5780630ecb93c0146102da57806318160ddd1461031357806323b872dd1461033c57806326976e3f1461039d57806327e235e3146103f2578063313ce5671461043f57806335390714146104685780633eaaf86b146104915780633f4ba83a146104ba5780634847a79c146104cf57806359bf1abe146105295780635c6581651461057a5780635c975abb146105e657806370a08231146106135780638456cb5914610660578063893d20e8146106755780638da5cb5b146106ca57806395d89b411461071f578063a9059cbb146107ad578063c0324c7714610807578063cc872b6614610833578063db006a7514610856578063dd62ed3e14610879578063dd644f72146108e5578063e47d60601461090e578063e4997dc51461095f578063e5b5019a14610998578063f2fde38b146109c1578063f3bdc228146109fa575b600080fd5b34156101af57600080fd5b6101b7610a33565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101f75780820151818401526020810190506101dc565b50505050905090810190601f1680156102245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561023d57600080fd5b610269600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610ad1565b005b341561027657600080fd5b6102ab600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610bee565b005b34156102b857600080fd5b6102c0610d3c565b604051808215151515815260200191505060405180910390f35b34156102e557600080fd5b610311600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610d4f565b005b341561031e57600080fd5b610326610e68565b6040518082815260200191505060405180910390f35b341561034757600080fd5b61039b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610f38565b005b34156103a857600080fd5b6103b0611118565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103fd57600080fd5b610429600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061113e565b6040518082815260200191505060405180910390f35b341561044a57600080fd5b610452611156565b6040518082815260200191505060405180910390f35b341561047357600080fd5b61047b61115c565b6040518082815260200191505060405180910390f35b341561049c57600080fd5b6104a4611162565b6040518082815260200191505060405180910390f35b34156104c557600080fd5b6104cd611168565b005b34156104da57600080fd5b61050f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611226565b604051808215151515815260200191505060405180910390f35b341561053457600080fd5b610560600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611596565b604051808215151515815260200191505060405180910390f35b341561058557600080fd5b6105d0600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506115ec565b6040518082815260200191505060405180910390f35b34156105f157600080fd5b6105f9611611565b604051808215151515815260200191505060405180910390f35b341561061e57600080fd5b61064a600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611624565b6040518082815260200191505060405180910390f35b341561066b57600080fd5b610673611733565b005b341561068057600080fd5b6106886117f3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106d557600080fd5b6106dd61181c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561072a57600080fd5b610732611841565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610772578082015181840152602081019050610757565b50505050905090810190601f16801561079f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156107b857600080fd5b6107ed600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506118df565b604051808215151515815260200191505060405180910390f35b341561081257600080fd5b6108316004808035906020019091908035906020019091905050611aa0565b005b341561083e57600080fd5b6108546004808035906020019091905050611b85565b005b341561086157600080fd5b6108776004808035906020019091905050611d7c565b005b341561088457600080fd5b6108cf600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611f0f565b6040518082815260200191505060405180910390f35b34156108f057600080fd5b6108f8612054565b6040518082815260200191505060405180910390f35b341561091957600080fd5b610945600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061205a565b604051808215151515815260200191505060405180910390f35b341561096a57600080fd5b610996600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061207a565b005b34156109a357600080fd5b6109ab612193565b6040518082815260200191505060405180910390f35b34156109cc57600080fd5b6109f8600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506121b7565b005b3415610a0557600080fd5b610a31600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061228c565b005b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ac95780601f10610a9e57610100808354040283529160200191610ac9565b820191906000526020600020905b815481529060010190602001808311610aac57829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b2c57600080fd5b6001600a60146101000a81548160ff02191690831515021790555080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b604060048101600036905010151515610c0657600080fd5b600a60149054906101000a900460ff1615610d2c57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aee92d333385856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1515610d1357600080fd5b6102c65a03f11515610d2457600080fd5b505050610d37565b610d368383612410565b5b505050565b600a60149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610daa57600080fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615610f2f57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610f0d57600080fd5b6102c65a03f11515610f1e57600080fd5b505050604051805190509050610f35565b60015490505b90565b600060149054906101000a900460ff16151515610f5457600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610fad57600080fd5b600a60149054906101000a900460ff161561110757600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b477adb338585856040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050600060405180830381600087803b15156110ee57600080fd5b6102c65a03f115156110ff57600080fd5b505050611113565b6111128383836125ad565b5b505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b60095481565b60045481565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111c357600080fd5b600060149054906101000a900460ff1615156111de57600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600080600060406004810160003690501015151561124357600080fd5b61126c61271061125e60035488612a5490919063ffffffff16565b612a8f90919063ffffffff16565b925060045483111561127e5760045492505b6112918386612aaa90919063ffffffff16565b91506112e585600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612aaa90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061137a82600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ac390919063ffffffff16565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008311156115245761143983600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ac390919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001935050505092915050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600060149054906101000a900460ff1681565b6000600a60149054906101000a900460ff161561172257600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561170057600080fd5b6102c65a03f1151561171157600080fd5b50505060405180519050905061172e565b61172b82612ae1565b90505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561178e57600080fd5b600060149054906101000a900460ff161515156117aa57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118d75780601f106118ac576101008083540402835291602001916118d7565b820191906000526020600020905b8154815290600101906020018083116118ba57829003601f168201915b505050505081565b60008060149054906101000a900460ff161515156118fc57600080fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561195557600080fd5b600a60149054906101000a900460ff1615611a8d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e18980a3385856000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1515611a6b57600080fd5b6102c65a03f11515611a7c57600080fd5b505050604051805190509050611a9a565b611a978383611226565b90505b92915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611afb57600080fd5b601482101515611b0a57600080fd5b603281101515611b1957600080fd5b81600381905550611b38600954600a0a82612a5490919063ffffffff16565b6004819055507fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e600354600454604051808381526020018281526020019250505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611be057600080fd5b6001548160015401111515611bf457600080fd5b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401111515611cc457600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550806001600082825401925050819055507fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a816040518082815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611dd757600080fd5b8060015410151515611de857600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515611e5757600080fd5b8060016000828254039250508190555080600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44816040518082815260200191505060405180910390a150565b6000600a60149054906101000a900460ff161561204157600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b151561201f57600080fd5b6102c65a03f1151561203057600080fd5b50505060405180519050905061204e565b61204b8383612b2a565b90505b92915050565b60035481565b60066020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156120d557600080fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561221257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151561228957806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156122e957600080fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561234157600080fd5b61234a82611624565b90506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806001600082825403925050819055507f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c68282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60406004810160003690501015151561242857600080fd5b600082141580156124b657506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b1515156124c257600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3505050565b60008060006060600481016000369050101515156125ca57600080fd5b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054935061267261271061266460035488612a5490919063ffffffff16565b612a8f90919063ffffffff16565b92506004548311156126845760045492505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff841015612740576126bf8585612aaa90919063ffffffff16565b600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6127538386612aaa90919063ffffffff16565b91506127a785600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612aaa90919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061283c82600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ac390919063ffffffff16565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008311156129e6576128fb83600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ac390919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050505050565b6000806000841415612a695760009150612a88565b8284029050828482811515612a7a57fe5b04141515612a8457fe5b8091505b5092915050565b6000808284811515612a9d57fe5b0490508091505092915050565b6000828211151515612ab857fe5b818303905092915050565b6000808284019050838110151515612ad757fe5b8091505092915050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050929150505600a165627a7a723058203ae633900ad7a5a0dbd007f5fcad96c2f1d42f20d9e34a87d37fc28240c9238c0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SSTORE PUSH1 0x0 PUSH1 0x4 SSTORE CALLVALUE ISZERO PUSH3 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x2386F26FC10000 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6454657468657220555344000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xCF SWAP3 SWAP2 SWAP1 PUSH3 0x1B3 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6455534454000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x11D SWAP3 SWAP2 SWAP1 PUSH3 0x1B3 JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH7 0x2386F26FC10000 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x262 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x1F6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x227 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x227 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x226 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x209 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x236 SWAP2 SWAP1 PUSH3 0x23A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x25F SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x25B JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x241 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2BDD DUP1 PUSH3 0x272 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x4847A79C EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x613 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x675 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6CA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x71F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x7AD JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x807 JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x833 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x856 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x879 JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x8E5 JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x90E JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x95F JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x998 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9C1 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x9FA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B7 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x224 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xAD1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xBEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C0 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xD4F JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x326 PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xF38 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B0 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x429 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x113E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x452 PUSH2 0x1156 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x47B PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A4 PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4CD PUSH2 0x1168 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50F PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x560 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1596 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x15EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5F9 PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64A PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x66B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x673 PUSH2 0x1733 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x688 PUSH2 0x17F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x6D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6DD PUSH2 0x181C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x732 PUSH2 0x1841 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x772 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x757 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x79F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7ED PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x18DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x831 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1AA0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x83E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x854 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B85 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x877 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1D7C JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8CF PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1F0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F8 PUSH2 0x2054 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x945 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x96A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x996 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x207A JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9AB PUSH2 0x2193 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x9CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F8 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x21B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xA05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA31 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x228C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xAC9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA9E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAC9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAAC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xB2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0xC06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD2C JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAEE92D33 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xD13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0xD37 JUMP JUMPDEST PUSH2 0xD36 DUP4 DUP4 PUSH2 0x2410 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xDAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF2F JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xF0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xF1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0xF35 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xF54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xFAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1107 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8B477ADB CALLER DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x10EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x10FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1113 JUMP JUMPDEST PUSH2 0x1112 DUP4 DUP4 DUP4 PUSH2 0x25AD JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x11C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x11DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x1243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x126C PUSH2 0x2710 PUSH2 0x125E PUSH1 0x3 SLOAD DUP9 PUSH2 0x2A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2A8F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x127E JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH2 0x1291 DUP4 DUP7 PUSH2 0x2AAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x12E5 DUP6 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x137A DUP3 PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x1524 JUMPI PUSH2 0x1439 DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1722 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x172E JUMP JUMPDEST PUSH2 0x172B DUP3 PUSH2 0x2AE1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x178E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x17AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x18D7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18D7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18BA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x18FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A8D JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E18980A CALLER DUP6 DUP6 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1A6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1A7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1A9A JUMP JUMPDEST PUSH2 0x1A97 DUP4 DUP4 PUSH2 0x1226 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 DUP3 LT ISZERO ISZERO PUSH2 0x1B0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 LT ISZERO ISZERO PUSH2 0x1B19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1B38 PUSH1 0x9 SLOAD PUSH1 0xA EXP DUP3 PUSH2 0x2A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1BE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 PUSH1 0x1 SLOAD ADD GT ISZERO ISZERO PUSH2 0x1BF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD GT ISZERO ISZERO PUSH2 0x1CC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1DD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x1DE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x1E57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2041 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP5 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x201F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x2030 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x204E JUMP JUMPDEST PUSH2 0x204B DUP4 DUP4 PUSH2 0x2B2A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x20D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x2212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x2289 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x22E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x2341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x234A DUP3 PUSH2 0x1624 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x2428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x24B6 JUMPI POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x24C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x25CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP PUSH2 0x2672 PUSH2 0x2710 PUSH2 0x2664 PUSH1 0x3 SLOAD DUP9 PUSH2 0x2A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2A8F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x2684 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 LT ISZERO PUSH2 0x2740 JUMPI PUSH2 0x26BF DUP6 DUP6 PUSH2 0x2AAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x2753 DUP4 DUP7 PUSH2 0x2AAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x27A7 DUP6 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x283C DUP3 PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x29E6 JUMPI PUSH2 0x28FB DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x2A69 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x2A88 JUMP JUMPDEST DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x2A7A JUMPI INVALID JUMPDEST DIV EQ ISZERO ISZERO PUSH2 0x2A84 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x2A9D JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x2AB8 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x2AD7 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 GASPRICE 0xe6 CALLER SWAP1 EXP 0xd7 0xa5 LOG0 0xdb 0xd0 SMOD 0xf5 0xfc 0xad SWAP7 0xc2 CALL 0xd4 0x2f KECCAK256 0xd9 0xe3 0x4a DUP8 0xd3 PUSH32 0xC28240C9238C0029000000000000000000000000000000000000000000000000 ",
							"sourceMap": "178:4753:2:-;;;287:5:6;266:26;;;;;;;;;;;;;;;;;;;;459:1:0;429:31;;491:1;466:26;;680:245:2;;;;;;;;469:10:5;461:5;;:18;;;;;;;;;;;;;;;;;;742:21:2;727:12;:36;;;;773:20;;;;;;;;;;;;;;;;;;:4;:20;;;;;;;;;;;;:::i;:::-;;803:16;;;;;;;;;;;;;;;;;;:6;:16;;;;;;;;;;;;:::i;:::-;;840:1;829:8;:12;;;;869:21;851:8;:15;860:5;;;;;;;;;;;851:15;;;;;;;;;;;;;;;:39;;;;913:5;900:10;;:18;;;;;;;;;;;;;;;;;;178:4753;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052361561019f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101a45780630753c30c14610232578063095ea7b31461026b5780630e136b19146102ad5780630ecb93c0146102da57806318160ddd1461031357806323b872dd1461033c57806326976e3f1461039d57806327e235e3146103f2578063313ce5671461043f57806335390714146104685780633eaaf86b146104915780633f4ba83a146104ba5780634847a79c146104cf57806359bf1abe146105295780635c6581651461057a5780635c975abb146105e657806370a08231146106135780638456cb5914610660578063893d20e8146106755780638da5cb5b146106ca57806395d89b411461071f578063a9059cbb146107ad578063c0324c7714610807578063cc872b6614610833578063db006a7514610856578063dd62ed3e14610879578063dd644f72146108e5578063e47d60601461090e578063e4997dc51461095f578063e5b5019a14610998578063f2fde38b146109c1578063f3bdc228146109fa575b600080fd5b34156101af57600080fd5b6101b7610a33565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101f75780820151818401526020810190506101dc565b50505050905090810190601f1680156102245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561023d57600080fd5b610269600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610ad1565b005b341561027657600080fd5b6102ab600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610bee565b005b34156102b857600080fd5b6102c0610d3c565b604051808215151515815260200191505060405180910390f35b34156102e557600080fd5b610311600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610d4f565b005b341561031e57600080fd5b610326610e68565b6040518082815260200191505060405180910390f35b341561034757600080fd5b61039b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610f38565b005b34156103a857600080fd5b6103b0611118565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103fd57600080fd5b610429600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061113e565b6040518082815260200191505060405180910390f35b341561044a57600080fd5b610452611156565b6040518082815260200191505060405180910390f35b341561047357600080fd5b61047b61115c565b6040518082815260200191505060405180910390f35b341561049c57600080fd5b6104a4611162565b6040518082815260200191505060405180910390f35b34156104c557600080fd5b6104cd611168565b005b34156104da57600080fd5b61050f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611226565b604051808215151515815260200191505060405180910390f35b341561053457600080fd5b610560600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611596565b604051808215151515815260200191505060405180910390f35b341561058557600080fd5b6105d0600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506115ec565b6040518082815260200191505060405180910390f35b34156105f157600080fd5b6105f9611611565b604051808215151515815260200191505060405180910390f35b341561061e57600080fd5b61064a600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611624565b6040518082815260200191505060405180910390f35b341561066b57600080fd5b610673611733565b005b341561068057600080fd5b6106886117f3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106d557600080fd5b6106dd61181c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561072a57600080fd5b610732611841565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610772578082015181840152602081019050610757565b50505050905090810190601f16801561079f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156107b857600080fd5b6107ed600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506118df565b604051808215151515815260200191505060405180910390f35b341561081257600080fd5b6108316004808035906020019091908035906020019091905050611aa0565b005b341561083e57600080fd5b6108546004808035906020019091905050611b85565b005b341561086157600080fd5b6108776004808035906020019091905050611d7c565b005b341561088457600080fd5b6108cf600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611f0f565b6040518082815260200191505060405180910390f35b34156108f057600080fd5b6108f8612054565b6040518082815260200191505060405180910390f35b341561091957600080fd5b610945600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061205a565b604051808215151515815260200191505060405180910390f35b341561096a57600080fd5b610996600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061207a565b005b34156109a357600080fd5b6109ab612193565b6040518082815260200191505060405180910390f35b34156109cc57600080fd5b6109f8600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506121b7565b005b3415610a0557600080fd5b610a31600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061228c565b005b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ac95780601f10610a9e57610100808354040283529160200191610ac9565b820191906000526020600020905b815481529060010190602001808311610aac57829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b2c57600080fd5b6001600a60146101000a81548160ff02191690831515021790555080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b604060048101600036905010151515610c0657600080fd5b600a60149054906101000a900460ff1615610d2c57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aee92d333385856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1515610d1357600080fd5b6102c65a03f11515610d2457600080fd5b505050610d37565b610d368383612410565b5b505050565b600a60149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610daa57600080fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615610f2f57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610f0d57600080fd5b6102c65a03f11515610f1e57600080fd5b505050604051805190509050610f35565b60015490505b90565b600060149054906101000a900460ff16151515610f5457600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610fad57600080fd5b600a60149054906101000a900460ff161561110757600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b477adb338585856040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050600060405180830381600087803b15156110ee57600080fd5b6102c65a03f115156110ff57600080fd5b505050611113565b6111128383836125ad565b5b505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b60095481565b60045481565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111c357600080fd5b600060149054906101000a900460ff1615156111de57600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600080600060406004810160003690501015151561124357600080fd5b61126c61271061125e60035488612a5490919063ffffffff16565b612a8f90919063ffffffff16565b925060045483111561127e5760045492505b6112918386612aaa90919063ffffffff16565b91506112e585600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612aaa90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061137a82600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ac390919063ffffffff16565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008311156115245761143983600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ac390919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001935050505092915050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600060149054906101000a900460ff1681565b6000600a60149054906101000a900460ff161561172257600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561170057600080fd5b6102c65a03f1151561171157600080fd5b50505060405180519050905061172e565b61172b82612ae1565b90505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561178e57600080fd5b600060149054906101000a900460ff161515156117aa57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118d75780601f106118ac576101008083540402835291602001916118d7565b820191906000526020600020905b8154815290600101906020018083116118ba57829003601f168201915b505050505081565b60008060149054906101000a900460ff161515156118fc57600080fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561195557600080fd5b600a60149054906101000a900460ff1615611a8d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e18980a3385856000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1515611a6b57600080fd5b6102c65a03f11515611a7c57600080fd5b505050604051805190509050611a9a565b611a978383611226565b90505b92915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611afb57600080fd5b601482101515611b0a57600080fd5b603281101515611b1957600080fd5b81600381905550611b38600954600a0a82612a5490919063ffffffff16565b6004819055507fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e600354600454604051808381526020018281526020019250505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611be057600080fd5b6001548160015401111515611bf457600080fd5b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401111515611cc457600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550806001600082825401925050819055507fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a816040518082815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611dd757600080fd5b8060015410151515611de857600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515611e5757600080fd5b8060016000828254039250508190555080600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44816040518082815260200191505060405180910390a150565b6000600a60149054906101000a900460ff161561204157600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b151561201f57600080fd5b6102c65a03f1151561203057600080fd5b50505060405180519050905061204e565b61204b8383612b2a565b90505b92915050565b60035481565b60066020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156120d557600080fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561221257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151561228957806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156122e957600080fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561234157600080fd5b61234a82611624565b90506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806001600082825403925050819055507f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c68282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60406004810160003690501015151561242857600080fd5b600082141580156124b657506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b1515156124c257600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3505050565b60008060006060600481016000369050101515156125ca57600080fd5b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054935061267261271061266460035488612a5490919063ffffffff16565b612a8f90919063ffffffff16565b92506004548311156126845760045492505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff841015612740576126bf8585612aaa90919063ffffffff16565b600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6127538386612aaa90919063ffffffff16565b91506127a785600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612aaa90919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061283c82600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ac390919063ffffffff16565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008311156129e6576128fb83600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ac390919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050505050565b6000806000841415612a695760009150612a88565b8284029050828482811515612a7a57fe5b04141515612a8457fe5b8091505b5092915050565b6000808284811515612a9d57fe5b0490508091505092915050565b6000828211151515612ab857fe5b818303905092915050565b6000808284019050838110151515612ad757fe5b8091505092915050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050929150505600a165627a7a723058203ae633900ad7a5a0dbd007f5fcad96c2f1d42f20d9e34a87d37fc28240c9238c0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x4847A79C EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x613 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x675 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6CA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x71F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x7AD JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x807 JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x833 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x856 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x879 JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x8E5 JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x90E JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x95F JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x998 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9C1 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x9FA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B7 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x224 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xAD1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xBEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C0 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xD4F JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x326 PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xF38 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B0 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x429 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x113E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x452 PUSH2 0x1156 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x47B PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A4 PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4CD PUSH2 0x1168 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50F PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x560 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1596 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x15EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5F9 PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64A PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x66B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x673 PUSH2 0x1733 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x688 PUSH2 0x17F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x6D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6DD PUSH2 0x181C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x732 PUSH2 0x1841 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x772 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x757 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x79F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7ED PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x18DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x831 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1AA0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x83E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x854 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B85 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x877 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1D7C JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8CF PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1F0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F8 PUSH2 0x2054 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x945 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x96A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x996 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x207A JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9AB PUSH2 0x2193 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x9CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F8 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x21B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xA05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA31 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x228C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xAC9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA9E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAC9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAAC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xB2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0xC06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD2C JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAEE92D33 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xD13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0xD37 JUMP JUMPDEST PUSH2 0xD36 DUP4 DUP4 PUSH2 0x2410 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xDAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF2F JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xF0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xF1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0xF35 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xF54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xFAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1107 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8B477ADB CALLER DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x10EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x10FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1113 JUMP JUMPDEST PUSH2 0x1112 DUP4 DUP4 DUP4 PUSH2 0x25AD JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x11C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x11DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x1243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x126C PUSH2 0x2710 PUSH2 0x125E PUSH1 0x3 SLOAD DUP9 PUSH2 0x2A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2A8F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x127E JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH2 0x1291 DUP4 DUP7 PUSH2 0x2AAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x12E5 DUP6 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x137A DUP3 PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x1524 JUMPI PUSH2 0x1439 DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1722 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x172E JUMP JUMPDEST PUSH2 0x172B DUP3 PUSH2 0x2AE1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x178E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x17AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x18D7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18D7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18BA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x18FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A8D JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E18980A CALLER DUP6 DUP6 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1A6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1A7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1A9A JUMP JUMPDEST PUSH2 0x1A97 DUP4 DUP4 PUSH2 0x1226 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 DUP3 LT ISZERO ISZERO PUSH2 0x1B0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 LT ISZERO ISZERO PUSH2 0x1B19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1B38 PUSH1 0x9 SLOAD PUSH1 0xA EXP DUP3 PUSH2 0x2A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1BE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 PUSH1 0x1 SLOAD ADD GT ISZERO ISZERO PUSH2 0x1BF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD GT ISZERO ISZERO PUSH2 0x1CC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1DD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x1DE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x1E57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2041 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP5 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x201F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x2030 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x204E JUMP JUMPDEST PUSH2 0x204B DUP4 DUP4 PUSH2 0x2B2A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x20D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x2212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x2289 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x22E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x2341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x234A DUP3 PUSH2 0x1624 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x2428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x24B6 JUMPI POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x24C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x25CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP PUSH2 0x2672 PUSH2 0x2710 PUSH2 0x2664 PUSH1 0x3 SLOAD DUP9 PUSH2 0x2A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2A8F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x2684 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 LT ISZERO PUSH2 0x2740 JUMPI PUSH2 0x26BF DUP6 DUP6 PUSH2 0x2AAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x2753 DUP4 DUP7 PUSH2 0x2AAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x27A7 DUP6 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x283C DUP3 PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x29E6 JUMPI PUSH2 0x28FB DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x2A69 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x2A88 JUMP JUMPDEST DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x2A7A JUMPI INVALID JUMPDEST DIV EQ ISZERO ISZERO PUSH2 0x2A84 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x2A9D JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x2AB8 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x2AD7 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 GASPRICE 0xe6 CALLER SWAP1 EXP 0xd7 0xa5 LOG0 0xdb 0xd0 SMOD 0xf5 0xfc 0xad SWAP7 0xc2 CALL 0xd4 0x2f KECCAK256 0xd9 0xe3 0x4a DUP8 0xd3 PUSH32 0xC28240C9238C0029000000000000000000000000000000000000000000000000 ",
							"sourceMap": "178:4753:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;251:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2902:177:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;2174:296;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;363:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;554:142:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;3142:212:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1418:354;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;301:20:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;466:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;211:24:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;852:87:6;;;;;;;;;;;;;;833:596:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;278:122:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;425:61:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;266:26:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1854:238:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:85:6;;;;;;;;;;;;;;406::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;271:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;275::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1007:329:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4231:378;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3512:259;;;;;;;;;;;;;;;;;;;;;;;;;;3995:230;;;;;;;;;;;;;;;;;;;;;;;;;;2552:287;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;429:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;497:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:42:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;821:147:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:318:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;251:18:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2902:177::-;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;2987:4:2;2974:10;;:17;;;;;;;;;;;;;;;;;;3019:16;3001:15;;:34;;;;;;;;;;;;;;;;;;3045:27;3055:16;3045:27;;;;;;;;;;;;;;;;;;;;;;2902:177;:::o;2174:296::-;2245:6;646:1:0;639:4;:8;621;;:15;;:26;619:29;611:38;;;;;;;;2267:10:2;;;;;;;;;;;2263:201;;;2322:15;;;;;;;;;;;2300:54;;;2355:10;2367:8;2377:6;2300:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2293:91;;2263:201;2422:31;2436:8;2446:6;2422:13;:31::i;:::-;659:1:0;2174:296:2;;;:::o;363:22::-;;;;;;;;;;;;;:::o;554:142:1:-;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;650:4:1;623:13;:24;637:9;623:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;664:25;679:9;664:25;;;;;;;;;;;;;;;;;;;;;;554:142;:::o;3142:212:2:-;3190:4;3210:10;;;;;;;;;;;3206:142;;;3257:15;;;;;;;;;;;3243:42;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3236:51;;;;3206:142;3325:12;;3318:19;;3142:212;;:::o;1418:354::-;435:6:6;;;;;;;;;;;434:7;426:16;;;;;;;;1520:13:2;:20;1534:5;1520:20;;;;;;;;;;;;;;;;;;;;;;;;;1519:21;1511:30;;;;;;;;1555:10;;;;;;;;;;;1551:215;;;1610:15;;;;;;;;;;;1588:59;;;1648:10;1660:5;1667:3;1672:6;1588:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1581:98;;1551:215;1717:38;1736:5;1743:3;1748:6;1717:18;:38::i;:::-;448:1:6;1418:354:2;;;:::o;327:30::-;;;;;;;;;;;;;:::o;304:40:0:-;;;;;;;;;;;;;;;;;:::o;301:20:2:-;;;;:::o;466:26:0:-;;;;:::o;211:24:4:-;;;;:::o;852:87:6:-;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;587:6:6;;;;;;;;;;;579:15;;;;;;;;914:5;905:6;;:14;;;;;;;;;;;;;;;;;;925:9;;;;;;;;;;852:87::o;833:596:0:-;917:4;933:8;1066:15;901:6;646:1;639:4;:8;621;;:15;;:26;619:29;611:38;;;;;;;;944:40;978:5;945:27;956:15;;945:6;:10;;:27;;;;:::i;:::-;944:33;;:40;;;;:::i;:::-;933:51;;1004:10;;998:3;:16;994:63;;;1036:10;;1030:16;;994:63;1084:15;1095:3;1084:6;:10;;:15;;;;:::i;:::-;1066:33;;1132:32;1157:6;1132:8;:20;1141:10;1132:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;1109:8;:20;1118:10;1109:20;;;;;;;;;;;;;;;:55;;;;1190:29;1208:10;1190:8;:13;1199:3;1190:13;;;;;;;;;;;;;;;;:17;;:29;;;;:::i;:::-;1174:8;:13;1183:3;1174:13;;;;;;;;;;;;;;;:45;;;;1239:1;1233:3;:7;1229:126;;;1274:24;1294:3;1274:8;:15;1283:5;;;;;;;;;;;1274:15;;;;;;;;;;;;;;;;:19;;:24;;;;:::i;:::-;1256:8;:15;1265:5;;;;;;;;;;;1256:15;;;;;;;;;;;;;;;:42;;;;1333:5;;;;;;;;;;;1312:32;;1321:10;1312:32;;;1340:3;1312:32;;;;;;;;;;;;;;;;;;1229:126;1385:3;1364:37;;1373:10;1364:37;;;1390:10;1364:37;;;;;;;;;;;;;;;;;;1418:4;1411:11;;833:596;;;;;;;:::o;278:122:1:-;349:4;372:13;:21;386:6;372:21;;;;;;;;;;;;;;;;;;;;;;;;;365:28;;278:122;;;:::o;425:61:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;266:26:6:-;;;;;;;;;;;;;:::o;1854:238:2:-;1911:4;1931:10;;;;;;;;;;;1927:159;;;1986:15;;;;;;;;;;;1964:48;;;2013:3;1964:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:60;;;;1927:159;2055:20;2071:3;2055:15;:20::i;:::-;2048:27;;1854:238;;;;:::o;685:85:6:-;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;435:6:6;;;;;;;;;;;434:7;426:16;;;;;;;;748:4;739:6;;:13;;;;;;;;;;;;;;;;;;758:7;;;;;;;;;;685:85::o;406::1:-;453:7;479:5;;;;;;;;;;;472:12;;406:85;:::o;271:20:5:-;;;;;;;;;;;;;:::o;275::2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1007:329::-;1082:4;435:6:6;;;;;;;;;;;434:7;426:16;;;;;;;;1106:13:2;:25;1120:10;1106:25;;;;;;;;;;;;;;;;;;;;;;;;;1105:26;1097:35;;;;;;;;1146:10;;;;;;;;;;;1142:188;;;1201:15;;;;;;;;;;;1179:55;;;1235:10;1247:3;1252:6;1179:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1172:87;;;;1142:188;1297:22;1307:3;1312:6;1297:9;:22::i;:::-;1290:29;;448:1:6;1007:329:2;;;;:::o;4231:378::-;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;4427:2:2;4410:14;:19;4402:28;;;;;;;;4460:2;4448:9;:14;4440:23;;;;;;;;4492:14;4474:15;:32;;;;4529:27;4547:8;;4543:2;:12;4529:9;:13;;:27;;;;:::i;:::-;4516:10;:40;;;;4567:35;4574:15;;4591:10;;4567:35;;;;;;;;;;;;;;;;;;;;;;;;4231:378;;:::o;3512:259::-;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;3599:12:2;;3590:6;3575:12;;:21;:36;3567:45;;;;;;;;3657:8;:15;3666:5;;;;;;;;;;;3657:15;;;;;;;;;;;;;;;;3648:6;3630:8;:15;3639:5;;;;;;;;;;;3630:15;;;;;;;;;;;;;;;;:24;:42;3622:51;;;;;;;;3703:6;3684:8;:15;3693:5;;;;;;;;;;;3684:15;;;;;;;;;;;;;;;;:25;;;;;;;;;;;3735:6;3719:12;;:22;;;;;;;;;;;3751:13;3757:6;3751:13;;;;;;;;;;;;;;;;;;3512:259;:::o;3995:230::-;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;4075:6:2;4059:12;;:22;;4051:31;;;;;;;;4119:6;4100:8;:15;4109:5;;;;;;;;;;;4100:15;;;;;;;;;;;;;;;;:25;;4092:34;;;;;;;;4153:6;4137:12;;:22;;;;;;;;;;;4188:6;4169:8;:15;4178:5;;;;;;;;;;;4169:15;;;;;;;;;;;;;;;;:25;;;;;;;;;;;4204:14;4211:6;4204:14;;;;;;;;;;;;;;;;;;3995:230;:::o;2552:287::-;2630:14;2660:10;;;;;;;;;;;2656:177;;;2707:15;;;;;;;;;;;2693:40;;;2734:6;2742:8;2693:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2686:65;;;;2656:177;2789:33;2805:6;2813:8;2789:15;:33::i;:::-;2782:40;;2552:287;;;;;:::o;429:31:0:-;;;;:::o;497:46:1:-;;;;;;;;;;;;;;;;;;;;;;:::o;702:157::-;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;807:5:1;777:13;:27;791:12;777:27;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;822:30;839:12;822:30;;;;;;;;;;;;;;;;;;;;;;702:157;:::o;493:42:8:-;525:10;493:42;:::o;821:147:5:-;629:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;917:1;897:22;;:8;:22;;;;893:69;;;943:8;935:5;;:16;;;;;;;;;;;;;;;;;;893:69;821:147;:::o;865:318:1:-;996:15;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;954:13:1;:31;968:16;954:31;;;;;;;;;;;;;;;;;;;;;;;;;946:40;;;;;;;;1014:27;1024:16;1014:9;:27::i;:::-;996:45;;1080:1;1051:8;:26;1060:16;1051:26;;;;;;;;;;;;;;;:30;;;;1107:10;1091:12;;:26;;;;;;;;;;;1127:49;1147:16;1165:10;1127:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:318;;:::o;1937:563:8:-;2008:6;646:1:0;639:4;:8;621;;:15;;:26;619:29;611:38;;;;;;;;2352:1:8;2342:6;:11;;2341:53;;;;;2392:1;2359:7;:19;2367:10;2359:19;;;;;;;;;;;;;;;:29;2379:8;2359:29;;;;;;;;;;;;;;;;:34;;2341:53;2339:56;2331:65;;;;;;;;2439:6;2407:7;:19;2415:10;2407:19;;;;;;;;;;;;;;;:29;2427:8;2407:29;;;;;;;;;;;;;;;:38;;;;2476:8;2455:38;;2464:10;2455:38;;;2486:6;2455:38;;;;;;;;;;;;;;;;;;1937:563;;;:::o;817:880::-;921:14;1130:8;1375:15;903:6;646:1:0;639:4;:8;621;;:15;;:26;619:29;611:38;;;;;;;;938:7:8;:14;946:5;938:14;;;;;;;;;;;;;;;:26;953:10;938:26;;;;;;;;;;;;;;;;921:43;;1141:40;1175:5;1142:27;1153:15;;1142:6;:10;;:27;;;;:::i;:::-;1141:33;;:40;;;;:::i;:::-;1130:51;;1201:10;;1195:3;:16;1191:63;;;1233:10;;1227:16;;1191:63;525:10;1267;:21;1263:103;;;1333:22;1348:6;1333:10;:14;;:22;;;;:::i;:::-;1304:7;:14;1312:5;1304:14;;;;;;;;;;;;;;;:26;1319:10;1304:26;;;;;;;;;;;;;;;:51;;;;1263:103;1393:15;1404:3;1393:6;:10;;:15;;;;:::i;:::-;1375:33;;1436:27;1456:6;1436:8;:15;1445:5;1436:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;1418:8;:15;1427:5;1418:15;;;;;;;;;;;;;;;:45;;;;1489:29;1507:10;1489:8;:13;1498:3;1489:13;;;;;;;;;;;;;;;;:17;;:29;;;;:::i;:::-;1473:8;:13;1482:3;1473:13;;;;;;;;;;;;;;;:45;;;;1538:1;1532:3;:7;1528:121;;;1573:24;1593:3;1573:8;:15;1582:5;;;;;;;;;;;1573:15;;;;;;;;;;;;;;;;:19;;:24;;;;:::i;:::-;1555:8;:15;1564:5;;;;;;;;;;;1555:15;;;;;;;;;;;;;;;:42;;;;1627:5;;;;;;;;;;;1611:27;;1620:5;1611:27;;;1634:3;1611:27;;;;;;;;;;;;;;;;;;1528:121;1674:3;1658:32;;1667:5;1658:32;;;1679:10;1658:32;;;;;;;;;;;;;;;;;;817:880;;;;;;;:::o;171:201:7:-;229:7;302:9;257:1;252;:6;248:45;;;281:1;274:8;;;;248:45;318:1;314;:5;302:17;;345:1;340;336;:5;;;;;;;;:10;329:18;;;;;;364:1;357:8;;171:201;;;;;;:::o;378:283::-;436:7;533:9;549:1;545;:5;;;;;;;;533:17;;653:1;646:8;;378:283;;;;;:::o;667:120::-;725:7;756:1;751;:6;;744:14;;;;;;779:1;775;:5;768:12;;667:120;;;;:::o;793:143::-;851:7;870:9;886:1;882;:5;870:17;;909:1;904;:6;;897:14;;;;;;928:1;921:8;;793:143;;;;;:::o;1640:114:0:-;1700:12;1731:8;:16;1740:6;1731:16;;;;;;;;;;;;;;;;1724:23;;1640:114;;;:::o;2825:143:8:-;2903:14;2936:7;:15;2944:6;2936:15;;;;;;;;;;;;;;;:25;2952:8;2936:25;;;;;;;;;;;;;;;;2929:32;;2825:143;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2245800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_UINT()": "843",
								"_totalSupply()": "625",
								"_transfer(address,uint256)": "infinite",
								"addBlackList(address)": "21964",
								"allowance(address,address)": "infinite",
								"allowed(address,address)": "924",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"balances(address)": "675",
								"basisPointsRate()": "977",
								"decimals()": "581",
								"deprecate(address)": "42125",
								"deprecated()": "547",
								"destroyBlackFunds(address)": "infinite",
								"getBlackListStatus(address)": "882",
								"getOwner()": "857",
								"isBlackListed(address)": "1152",
								"issue(uint256)": "44343",
								"maximumFee()": "603",
								"name()": "infinite",
								"owner()": "871",
								"pause()": "22203",
								"paused()": "833",
								"redeem(uint256)": "43633",
								"removeBlackList(address)": "22514",
								"setParams(uint256,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "21433",
								"unpause()": "22068",
								"upgradedAddress()": "585"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "MSTORE"
								},
								{
									"begin": 287,
									"end": 292,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "DUP1"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "EXP"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "DUP2"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "SLOAD"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "DUP2"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "MUL"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "NOT"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "AND"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "SWAP1"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "DUP4"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "ISZERO"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "ISZERO"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "MUL"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "OR"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "SWAP1"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "SSTORE"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "POP"
								},
								{
									"begin": 459,
									"end": 460,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "SSTORE"
								},
								{
									"begin": 491,
									"end": 492,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 466,
									"end": 492,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 466,
									"end": 492,
									"name": "SSTORE"
								},
								{
									"begin": 680,
									"end": 925,
									"name": "CALLVALUE"
								},
								{
									"begin": 680,
									"end": 925,
									"name": "ISZERO"
								},
								{
									"begin": 680,
									"end": 925,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 680,
									"end": 925,
									"name": "JUMPI"
								},
								{
									"begin": 680,
									"end": 925,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 680,
									"end": 925,
									"name": "DUP1"
								},
								{
									"begin": 680,
									"end": 925,
									"name": "REVERT"
								},
								{
									"begin": 680,
									"end": 925,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 680,
									"end": 925,
									"name": "JUMPDEST"
								},
								{
									"begin": 469,
									"end": 479,
									"name": "CALLER"
								},
								{
									"begin": 461,
									"end": 466,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 461,
									"end": 466,
									"name": "DUP1"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "EXP"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "DUP2"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SLOAD"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "DUP2"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "MUL"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "NOT"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "AND"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SWAP1"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "DUP4"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "AND"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "MUL"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "OR"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SWAP1"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SSTORE"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "POP"
								},
								{
									"begin": 742,
									"end": 763,
									"name": "PUSH",
									"value": "2386F26FC10000"
								},
								{
									"begin": 727,
									"end": 739,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 727,
									"end": 763,
									"name": "DUP2"
								},
								{
									"begin": 727,
									"end": 763,
									"name": "SWAP1"
								},
								{
									"begin": 727,
									"end": 763,
									"name": "SSTORE"
								},
								{
									"begin": 727,
									"end": 763,
									"name": "POP"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "DUP1"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "MLOAD"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "DUP2"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "ADD"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "MSTORE"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "DUP1"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "DUP2"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "MSTORE"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "ADD"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "PUSH",
									"value": "6454657468657220555344000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "DUP2"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "MSTORE"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "POP"
								},
								{
									"begin": 773,
									"end": 777,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "DUP1"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "MLOAD"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "ADD"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "SWAP3"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "SWAP2"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "JUMPDEST"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "POP"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "DUP1"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "MLOAD"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "SWAP1"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "DUP2"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "ADD"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "MSTORE"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "DUP1"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "DUP2"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "MSTORE"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "ADD"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "PUSH",
									"value": "6455534454000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "DUP2"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "MSTORE"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "POP"
								},
								{
									"begin": 803,
									"end": 809,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "SWAP1"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "DUP1"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "MLOAD"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "SWAP1"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "ADD"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "SWAP1"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "SWAP3"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "SWAP2"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "SWAP1"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "JUMPDEST"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "POP"
								},
								{
									"begin": 840,
									"end": 841,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 829,
									"end": 837,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 829,
									"end": 841,
									"name": "DUP2"
								},
								{
									"begin": 829,
									"end": 841,
									"name": "SWAP1"
								},
								{
									"begin": 829,
									"end": 841,
									"name": "SSTORE"
								},
								{
									"begin": 829,
									"end": 841,
									"name": "POP"
								},
								{
									"begin": 869,
									"end": 890,
									"name": "PUSH",
									"value": "2386F26FC10000"
								},
								{
									"begin": 851,
									"end": 859,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "DUP1"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "SWAP1"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "SLOAD"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "SWAP1"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "EXP"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "SWAP1"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "DIV"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "AND"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "AND"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "AND"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "DUP2"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "MSTORE"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "ADD"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "SWAP1"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "DUP2"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "MSTORE"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "ADD"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "KECCAK256"
								},
								{
									"begin": 851,
									"end": 890,
									"name": "DUP2"
								},
								{
									"begin": 851,
									"end": 890,
									"name": "SWAP1"
								},
								{
									"begin": 851,
									"end": 890,
									"name": "SSTORE"
								},
								{
									"begin": 851,
									"end": 890,
									"name": "POP"
								},
								{
									"begin": 913,
									"end": 918,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 900,
									"end": 910,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 900,
									"end": 910,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "EXP"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "DUP2"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "SLOAD"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "DUP2"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "MUL"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "NOT"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "AND"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "SWAP1"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "DUP4"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "ISZERO"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "ISZERO"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "MUL"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "OR"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "SWAP1"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "SSTORE"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "POP"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMP"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP3"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SLOAD"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP2"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "AND"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "ISZERO"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "MUL"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SUB"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "AND"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DIV"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "MSTORE"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "KECCAK256"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DIV"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP2"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP3"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP3"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "LT"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMPI"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "MLOAD"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "NOT"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "AND"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP4"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "OR"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP6"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SSTORE"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMP"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP3"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP6"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SSTORE"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP3"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "ISZERO"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMPI"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP2"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP3"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP3"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP2"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "GT"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "ISZERO"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMPI"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP3"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "MLOAD"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP3"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SSTORE"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP2"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP2"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMP"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "POP"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "POP"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP2"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "POP"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP2"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP3"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "GT"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "ISZERO"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMPI"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP2"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SSTORE"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "POP"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMP"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "POP"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMP"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "DUP1"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "CODECOPY"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4931,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058203ae633900ad7a5a0dbd007f5fcad96c2f1d42f20d9e34a87d37fc28240c9238c0029",
									".code": [
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "MSTORE"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "ISZERO"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "SWAP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DIV"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "AND"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "753C30C"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "E136B19"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "ECB93C0"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "26976E3F"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "27E235E3"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "35390714"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "3EAAF86B"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "3F4BA83A"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "4847A79C"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "59BF1ABE"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "5C658165"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "5C975ABB"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "8456CB59"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "C0324C77"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "CC872B66"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "DB006A75"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "DD644F72"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "E47D6060"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "E4997DC5"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "E5B5019A"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "F3BDC228"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "JUMPDEST"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4931,
											"name": "REVERT"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "CALLVALUE"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ISZERO"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPI"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "REVERT"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMP"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MLOAD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP3"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SUB"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP3"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MSTORE"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP4"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MLOAD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MSTORE"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MLOAD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP4"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 29,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 70,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 48,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ISZERO"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPI"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP4"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "EXP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "NOT"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPDEST"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "RETURN"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "JUMPDEST"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "CALLVALUE"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "ISZERO"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "JUMPI"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "DUP1"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "REVERT"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "JUMPDEST"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "DUP1"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "DUP1"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "AND"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "SWAP1"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "ADD"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "SWAP1"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "SWAP2"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "SWAP1"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "POP"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "POP"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "JUMP"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "JUMPDEST"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "STOP"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "JUMPDEST"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "CALLVALUE"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "ISZERO"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "JUMPI"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "DUP1"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "REVERT"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "JUMPDEST"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "DUP1"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "DUP1"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "AND"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "SWAP1"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "ADD"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "SWAP1"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "SWAP2"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "SWAP1"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "DUP1"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "SWAP1"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "ADD"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "SWAP1"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "SWAP2"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "SWAP1"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "POP"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "POP"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "JUMP"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "JUMPDEST"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "STOP"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMPDEST"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "CALLVALUE"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ISZERO"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMPI"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP1"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "REVERT"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMPDEST"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMP"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMPDEST"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "MLOAD"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP1"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP3"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ISZERO"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ISZERO"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ISZERO"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ISZERO"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP2"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "MSTORE"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ADD"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SWAP2"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "POP"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "POP"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "MLOAD"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP1"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SWAP2"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SUB"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "RETURN"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "JUMPDEST"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "CALLVALUE"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "ISZERO"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "JUMPI"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "DUP1"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "REVERT"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "JUMPDEST"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "DUP1"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "DUP1"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "AND"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "SWAP1"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "ADD"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "SWAP1"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "SWAP2"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "SWAP1"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "POP"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "POP"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "JUMP"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "JUMPDEST"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "STOP"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "JUMPDEST"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "CALLVALUE"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "ISZERO"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "JUMPI"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "DUP1"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "REVERT"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "JUMPDEST"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "JUMP"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "JUMPDEST"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "MLOAD"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "DUP1"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "DUP3"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "DUP2"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "MSTORE"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "ADD"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "SWAP2"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "POP"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "POP"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "MLOAD"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "DUP1"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "SWAP2"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "SUB"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "SWAP1"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "RETURN"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "JUMPDEST"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "CALLVALUE"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "ISZERO"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "JUMPI"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "REVERT"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "JUMPDEST"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "AND"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "ADD"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "SWAP2"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "AND"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "ADD"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "SWAP2"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "DUP1"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "ADD"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "SWAP2"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "POP"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "POP"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "JUMP"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "JUMPDEST"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "STOP"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "CALLVALUE"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "ISZERO"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPI"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP1"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "REVERT"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMP"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "MLOAD"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP1"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP3"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "AND"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "AND"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "MSTORE"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "ADD"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP2"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "POP"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "POP"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "MLOAD"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP1"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP2"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SUB"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP1"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "RETURN"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "JUMPDEST"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "CALLVALUE"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "ISZERO"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "JUMPI"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "REVERT"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "JUMPDEST"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "AND"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "ADD"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SWAP2"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "JUMP"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "JUMPDEST"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "MLOAD"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "DUP3"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "DUP2"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "MSTORE"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "ADD"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SWAP2"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "MLOAD"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SWAP2"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SUB"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "RETURN"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "CALLVALUE"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "ISZERO"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "REVERT"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "JUMP"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "MLOAD"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "DUP3"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "DUP2"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "MSTORE"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "ADD"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "SWAP2"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "POP"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "POP"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "MLOAD"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "SWAP2"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "SUB"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "SWAP1"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "RETURN"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMPDEST"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "CALLVALUE"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "ISZERO"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMPI"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "DUP1"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "REVERT"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMPDEST"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMP"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMPDEST"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "MLOAD"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "DUP1"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "DUP3"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "DUP2"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "MSTORE"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "ADD"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "SWAP2"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "POP"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "POP"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "MLOAD"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "DUP1"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "SWAP2"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "SUB"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "SWAP1"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "RETURN"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "CALLVALUE"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "ISZERO"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "JUMPI"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "REVERT"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "JUMP"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "DUP3"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "SWAP2"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "SWAP2"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "RETURN"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "CALLVALUE"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "ISZERO"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPI"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "DUP1"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "REVERT"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMP"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "STOP"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "JUMPDEST"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "CALLVALUE"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "ISZERO"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "JUMPI"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "DUP1"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "REVERT"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "JUMPDEST"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "DUP1"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "DUP1"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "AND"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "SWAP1"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "ADD"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "SWAP1"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "SWAP2"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "SWAP1"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "DUP1"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "SWAP1"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "ADD"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "SWAP1"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "SWAP2"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "SWAP1"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "POP"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "POP"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "JUMP"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "JUMPDEST"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "MLOAD"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "DUP1"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "DUP3"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "ISZERO"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "ISZERO"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "ISZERO"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "ISZERO"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "DUP2"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "MSTORE"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "ADD"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "SWAP2"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "POP"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "POP"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "MLOAD"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "DUP1"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "SWAP2"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "SUB"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "SWAP1"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "RETURN"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "CALLVALUE"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "ISZERO"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "JUMPI"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "DUP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "REVERT"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "DUP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "DUP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "AND"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "ADD"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SWAP2"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "POP"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "POP"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "JUMP"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "MLOAD"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "DUP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "DUP3"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "ISZERO"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "ISZERO"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "ISZERO"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "ISZERO"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "DUP2"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "MSTORE"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "ADD"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SWAP2"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "POP"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "POP"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "MLOAD"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "DUP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SWAP2"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SUB"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "RETURN"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "JUMPDEST"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "CALLVALUE"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "ISZERO"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "JUMPI"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "REVERT"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "JUMPDEST"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "AND"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "ADD"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP2"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "AND"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "ADD"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP2"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "JUMP"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "JUMPDEST"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "MLOAD"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP3"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP2"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "MSTORE"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "ADD"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP2"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "MLOAD"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP2"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SUB"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "RETURN"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "CALLVALUE"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPI"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "REVERT"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMP"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "RETURN"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "JUMPDEST"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "CALLVALUE"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "ISZERO"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "JUMPI"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "DUP1"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "REVERT"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "JUMPDEST"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "DUP1"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "DUP1"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "AND"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "SWAP1"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "ADD"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "SWAP1"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "SWAP2"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "SWAP1"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "POP"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "POP"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "JUMP"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "JUMPDEST"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "MLOAD"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "DUP1"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "DUP3"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "DUP2"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "MSTORE"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "ADD"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "SWAP2"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "POP"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "POP"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "MLOAD"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "DUP1"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "SWAP2"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "SUB"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "SWAP1"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "RETURN"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "CALLVALUE"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "ISZERO"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPI"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "DUP1"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "REVERT"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMP"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "STOP"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "JUMPDEST"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "CALLVALUE"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "ISZERO"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "JUMPI"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "DUP1"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "REVERT"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "JUMPDEST"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "JUMP"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "JUMPDEST"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "MLOAD"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "DUP1"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "DUP3"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "AND"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "AND"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "DUP2"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "MSTORE"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "ADD"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "SWAP2"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "POP"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "POP"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "MLOAD"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "DUP1"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "SWAP2"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "SUB"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "SWAP1"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "RETURN"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "CALLVALUE"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "ISZERO"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPI"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "REVERT"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP3"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MSTORE"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "ADD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SUB"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "RETURN"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "CALLVALUE"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ISZERO"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPI"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "REVERT"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMP"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MLOAD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SUB"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MSTORE"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP4"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MLOAD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MSTORE"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MLOAD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP4"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 29,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 70,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 48,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ISZERO"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPI"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP4"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "EXP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "NOT"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPDEST"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "RETURN"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "JUMPDEST"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "CALLVALUE"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "ISZERO"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "JUMPI"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "DUP1"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "REVERT"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "JUMPDEST"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "DUP1"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "DUP1"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "AND"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "SWAP1"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "ADD"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "SWAP1"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "SWAP2"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "SWAP1"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "DUP1"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "SWAP1"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "ADD"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "SWAP1"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "SWAP2"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "SWAP1"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "POP"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "POP"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "JUMP"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "JUMPDEST"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "MLOAD"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "DUP1"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "DUP3"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "ISZERO"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "ISZERO"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "ISZERO"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "ISZERO"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "DUP2"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "MSTORE"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "ADD"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "SWAP2"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "POP"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "POP"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "MLOAD"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "DUP1"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "SWAP2"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "SUB"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "SWAP1"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "RETURN"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "JUMPDEST"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "CALLVALUE"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "ISZERO"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "JUMPI"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "DUP1"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "REVERT"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "JUMPDEST"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "DUP1"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "DUP1"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "SWAP1"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "ADD"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "SWAP1"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "SWAP2"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "SWAP1"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "DUP1"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "SWAP1"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "ADD"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "SWAP1"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "SWAP2"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "SWAP1"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "POP"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "POP"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "JUMP"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "JUMPDEST"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "STOP"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "JUMPDEST"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "CALLVALUE"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "ISZERO"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "JUMPI"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "DUP1"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "REVERT"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "JUMPDEST"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "DUP1"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "DUP1"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "SWAP1"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "ADD"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "SWAP1"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "SWAP2"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "SWAP1"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "POP"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "POP"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "JUMP"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "JUMPDEST"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "STOP"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "JUMPDEST"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "CALLVALUE"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "ISZERO"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "JUMPI"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "DUP1"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "REVERT"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "JUMPDEST"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "DUP1"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "DUP1"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "SWAP1"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "ADD"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "SWAP1"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "SWAP2"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "SWAP1"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "POP"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "POP"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "JUMP"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "JUMPDEST"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "STOP"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "JUMPDEST"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "CALLVALUE"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "ISZERO"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "JUMPI"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "DUP1"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "REVERT"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "JUMPDEST"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "DUP1"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "DUP1"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "AND"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "SWAP1"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "ADD"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "SWAP1"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "SWAP2"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "SWAP1"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "DUP1"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "AND"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "SWAP1"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "ADD"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "SWAP1"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "SWAP2"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "SWAP1"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "POP"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "POP"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "JUMP"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "JUMPDEST"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "MLOAD"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "DUP1"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "DUP3"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "DUP2"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "MSTORE"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "ADD"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "SWAP2"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "POP"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "POP"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "MLOAD"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "DUP1"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "SWAP2"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "SUB"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "SWAP1"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "RETURN"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "CALLVALUE"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "ISZERO"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "JUMPI"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "DUP1"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "REVERT"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "JUMP"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "MLOAD"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "DUP1"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "DUP3"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "DUP2"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "MSTORE"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "ADD"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "SWAP2"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "POP"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "POP"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "MLOAD"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "DUP1"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "SWAP2"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "SUB"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "SWAP1"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "RETURN"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "JUMPDEST"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "CALLVALUE"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "ISZERO"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "JUMPI"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DUP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "REVERT"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "JUMPDEST"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DUP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DUP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "AND"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "ADD"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP2"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "JUMP"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "JUMPDEST"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "MLOAD"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DUP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DUP3"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "ISZERO"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "ISZERO"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "ISZERO"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "ISZERO"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DUP2"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "MSTORE"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "ADD"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP2"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "MLOAD"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DUP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP2"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SUB"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "RETURN"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "JUMPDEST"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "CALLVALUE"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "ISZERO"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "JUMPI"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "DUP1"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "REVERT"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "JUMPDEST"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "DUP1"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "DUP1"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "AND"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "SWAP1"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "ADD"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "SWAP1"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "SWAP2"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "SWAP1"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "POP"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "POP"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "JUMP"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "JUMPDEST"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "STOP"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "JUMPDEST"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "CALLVALUE"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "ISZERO"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "JUMPI"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "DUP1"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "REVERT"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "JUMPDEST"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "JUMP"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "JUMPDEST"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "MLOAD"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "DUP1"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "DUP3"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "DUP2"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "MSTORE"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "ADD"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "SWAP2"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "POP"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "POP"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "MLOAD"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "DUP1"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "SWAP2"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "SUB"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "SWAP1"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "RETURN"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "CALLVALUE"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "ISZERO"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPI"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "REVERT"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "AND"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "ADD"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP2"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "STOP"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "JUMPDEST"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "CALLVALUE"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "ISZERO"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "JUMPI"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "DUP1"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "REVERT"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "JUMPDEST"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "DUP1"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "DUP1"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "AND"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "SWAP1"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "ADD"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "SWAP1"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "SWAP2"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "SWAP1"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "JUMP"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "JUMPDEST"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "STOP"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SLOAD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "AND"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ISZERO"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MUL"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SUB"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "AND"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DIV"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DIV"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MUL"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MLOAD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MSTORE"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP3"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MSTORE"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP3"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SLOAD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "AND"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ISZERO"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MUL"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SUB"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "AND"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DIV"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ISZERO"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPI"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "LT"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPI"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP4"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SLOAD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DIV"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MUL"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP4"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MSTORE"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMP"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP3"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MSTORE"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "KECCAK256"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SLOAD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MSTORE"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP4"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "GT"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPI"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP3"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SUB"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "AND"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP3"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 2987,
											"end": 2991,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2974,
											"end": 2984,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2974,
											"end": 2984,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "EXP"
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "DUP2"
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "SLOAD"
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "DUP2"
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "MUL"
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "NOT"
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "AND"
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "SWAP1"
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "DUP4"
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "ISZERO"
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "ISZERO"
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "MUL"
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "OR"
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "SWAP1"
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "SSTORE"
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "POP"
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "DUP1"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "EXP"
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "DUP2"
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "SLOAD"
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "DUP2"
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "MUL"
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "NOT"
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "AND"
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "SWAP1"
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "DUP4"
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "AND"
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "MUL"
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "OR"
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "SWAP1"
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "SSTORE"
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "POP"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "PUSH",
											"value": "CC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E"
										},
										{
											"begin": 3055,
											"end": 3071,
											"name": "DUP2"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "MLOAD"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "DUP1"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "DUP3"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "AND"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "AND"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "DUP2"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "MSTORE"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "ADD"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "SWAP2"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "POP"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "POP"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "MLOAD"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "DUP1"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "SWAP2"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "SUB"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "SWAP1"
										},
										{
											"begin": 3045,
											"end": 3072,
											"name": "LOG1"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "POP"
										},
										{
											"begin": 2902,
											"end": 3079,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "JUMPDEST"
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 646,
											"end": 647,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 639,
											"end": 643,
											"name": "DUP2"
										},
										{
											"begin": 639,
											"end": 647,
											"name": "ADD"
										},
										{
											"begin": 621,
											"end": 629,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 621,
											"end": 629,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 621,
											"end": 636,
											"name": "SWAP1"
										},
										{
											"begin": 621,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 621,
											"end": 647,
											"name": "LT"
										},
										{
											"begin": 619,
											"end": 648,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "JUMPI"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "DUP1"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "REVERT"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "JUMPDEST"
										},
										{
											"begin": 2267,
											"end": 2277,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2267,
											"end": 2277,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 2267,
											"end": 2277,
											"name": "SWAP1"
										},
										{
											"begin": 2267,
											"end": 2277,
											"name": "SLOAD"
										},
										{
											"begin": 2267,
											"end": 2277,
											"name": "SWAP1"
										},
										{
											"begin": 2267,
											"end": 2277,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2267,
											"end": 2277,
											"name": "EXP"
										},
										{
											"begin": 2267,
											"end": 2277,
											"name": "SWAP1"
										},
										{
											"begin": 2267,
											"end": 2277,
											"name": "DIV"
										},
										{
											"begin": 2267,
											"end": 2277,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2267,
											"end": 2277,
											"name": "AND"
										},
										{
											"begin": 2263,
											"end": 2464,
											"name": "ISZERO"
										},
										{
											"begin": 2263,
											"end": 2464,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 2263,
											"end": 2464,
											"name": "JUMPI"
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "SWAP1"
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "SLOAD"
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "SWAP1"
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "EXP"
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "SWAP1"
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "DIV"
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "AND"
										},
										{
											"begin": 2300,
											"end": 2354,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2300,
											"end": 2354,
											"name": "AND"
										},
										{
											"begin": 2300,
											"end": 2354,
											"name": "PUSH",
											"value": "AEE92D33"
										},
										{
											"begin": 2355,
											"end": 2365,
											"name": "CALLER"
										},
										{
											"begin": 2367,
											"end": 2375,
											"name": "DUP6"
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "DUP6"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "MLOAD"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "DUP5"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "AND"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "MUL"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "DUP2"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "MSTORE"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "ADD"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "DUP1"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "DUP5"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "AND"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "AND"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "DUP2"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "MSTORE"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "ADD"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "DUP4"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "AND"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "AND"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "DUP2"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "MSTORE"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "ADD"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "DUP3"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "DUP2"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "MSTORE"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "ADD"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "SWAP4"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "POP"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "POP"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "POP"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "POP"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "MLOAD"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "DUP1"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "DUP4"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "SUB"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "DUP2"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "DUP8"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "DUP1"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "ISZERO"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "ISZERO"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "JUMPI"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "DUP1"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "REVERT"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "JUMPDEST"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "GAS"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "SUB"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "CALL"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "ISZERO"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "ISZERO"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "JUMPI"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "DUP1"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "REVERT"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "JUMPDEST"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "POP"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "POP"
										},
										{
											"begin": 2300,
											"end": 2384,
											"name": "POP"
										},
										{
											"begin": 2293,
											"end": 2384,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 2293,
											"end": 2384,
											"name": "JUMP"
										},
										{
											"begin": 2263,
											"end": 2464,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 2263,
											"end": 2464,
											"name": "JUMPDEST"
										},
										{
											"begin": 2422,
											"end": 2453,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 2436,
											"end": 2444,
											"name": "DUP4"
										},
										{
											"begin": 2446,
											"end": 2452,
											"name": "DUP4"
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 2422,
											"end": 2453,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2422,
											"end": 2453,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 2422,
											"end": 2453,
											"name": "JUMPDEST"
										},
										{
											"begin": 659,
											"end": 660,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 659,
											"end": 660,
											"name": "JUMPDEST"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "POP"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "POP"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "POP"
										},
										{
											"begin": 2174,
											"end": 2470,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMPDEST"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SLOAD"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "EXP"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DIV"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "AND"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP2"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 650,
											"end": 654,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 623,
											"end": 636,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "DUP4"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "AND"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "AND"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "DUP2"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "MSTORE"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "ADD"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "SWAP1"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "DUP2"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "MSTORE"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "ADD"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "KECCAK256"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "EXP"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "DUP2"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "SLOAD"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "DUP2"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "MUL"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "NOT"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "AND"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "SWAP1"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "DUP4"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "ISZERO"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "ISZERO"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "MUL"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "OR"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "SWAP1"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "SSTORE"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "POP"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "PUSH",
											"value": "42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC"
										},
										{
											"begin": 679,
											"end": 688,
											"name": "DUP2"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "MLOAD"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "DUP1"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "DUP3"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "AND"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "AND"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "DUP2"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "MSTORE"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "ADD"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "SWAP2"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "POP"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "POP"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "MLOAD"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "DUP1"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "SWAP2"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "SUB"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "SWAP1"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "LOG1"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "POP"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "JUMPDEST"
										},
										{
											"begin": 3190,
											"end": 3194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3220,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3210,
											"end": 3220,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 3210,
											"end": 3220,
											"name": "SWAP1"
										},
										{
											"begin": 3210,
											"end": 3220,
											"name": "SLOAD"
										},
										{
											"begin": 3210,
											"end": 3220,
											"name": "SWAP1"
										},
										{
											"begin": 3210,
											"end": 3220,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3210,
											"end": 3220,
											"name": "EXP"
										},
										{
											"begin": 3210,
											"end": 3220,
											"name": "SWAP1"
										},
										{
											"begin": 3210,
											"end": 3220,
											"name": "DIV"
										},
										{
											"begin": 3210,
											"end": 3220,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3210,
											"end": 3220,
											"name": "AND"
										},
										{
											"begin": 3206,
											"end": 3348,
											"name": "ISZERO"
										},
										{
											"begin": 3206,
											"end": 3348,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 3206,
											"end": 3348,
											"name": "JUMPI"
										},
										{
											"begin": 3257,
											"end": 3272,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3257,
											"end": 3272,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3272,
											"name": "SWAP1"
										},
										{
											"begin": 3257,
											"end": 3272,
											"name": "SLOAD"
										},
										{
											"begin": 3257,
											"end": 3272,
											"name": "SWAP1"
										},
										{
											"begin": 3257,
											"end": 3272,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3257,
											"end": 3272,
											"name": "EXP"
										},
										{
											"begin": 3257,
											"end": 3272,
											"name": "SWAP1"
										},
										{
											"begin": 3257,
											"end": 3272,
											"name": "DIV"
										},
										{
											"begin": 3257,
											"end": 3272,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3257,
											"end": 3272,
											"name": "AND"
										},
										{
											"begin": 3243,
											"end": 3285,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3243,
											"end": 3285,
											"name": "AND"
										},
										{
											"begin": 3243,
											"end": 3285,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "MLOAD"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "ADD"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "MSTORE"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "MLOAD"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "DUP2"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "AND"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "MUL"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "DUP2"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "MSTORE"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "ADD"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "MLOAD"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "DUP1"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "DUP4"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "SUB"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "DUP2"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "DUP8"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "DUP1"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "ISZERO"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "ISZERO"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "JUMPI"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "DUP1"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "REVERT"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "JUMPDEST"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "GAS"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "SUB"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "CALL"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "ISZERO"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "ISZERO"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "JUMPI"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "DUP1"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "REVERT"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "JUMPDEST"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "POP"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "POP"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "POP"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "MLOAD"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "DUP1"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "MLOAD"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "SWAP1"
										},
										{
											"begin": 3243,
											"end": 3287,
											"name": "POP"
										},
										{
											"begin": 3236,
											"end": 3287,
											"name": "SWAP1"
										},
										{
											"begin": 3236,
											"end": 3287,
											"name": "POP"
										},
										{
											"begin": 3236,
											"end": 3287,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 3236,
											"end": 3287,
											"name": "JUMP"
										},
										{
											"begin": 3206,
											"end": 3348,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 3206,
											"end": 3348,
											"name": "JUMPDEST"
										},
										{
											"begin": 3325,
											"end": 3337,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3325,
											"end": 3337,
											"name": "SLOAD"
										},
										{
											"begin": 3318,
											"end": 3337,
											"name": "SWAP1"
										},
										{
											"begin": 3318,
											"end": 3337,
											"name": "POP"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "JUMPDEST"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "SWAP1"
										},
										{
											"begin": 3142,
											"end": 3354,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "JUMPDEST"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SLOAD"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "EXP"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "DIV"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "AND"
										},
										{
											"begin": 434,
											"end": 441,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "JUMPI"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP1"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "REVERT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "JUMPDEST"
										},
										{
											"begin": 1520,
											"end": 1533,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DUP5"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "DUP2"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "MSTORE"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "ADD"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "SWAP1"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "DUP2"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "MSTORE"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "ADD"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "KECCAK256"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "SWAP1"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "SLOAD"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "SWAP1"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "EXP"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "SWAP1"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "DIV"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "AND"
										},
										{
											"begin": 1519,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1511,
											"end": 1541,
											"name": "ISZERO"
										},
										{
											"begin": 1511,
											"end": 1541,
											"name": "ISZERO"
										},
										{
											"begin": 1511,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 1511,
											"end": 1541,
											"name": "JUMPI"
										},
										{
											"begin": 1511,
											"end": 1541,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 1541,
											"name": "DUP1"
										},
										{
											"begin": 1511,
											"end": 1541,
											"name": "REVERT"
										},
										{
											"begin": 1511,
											"end": 1541,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 1511,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1555,
											"end": 1565,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1555,
											"end": 1565,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1555,
											"end": 1565,
											"name": "SWAP1"
										},
										{
											"begin": 1555,
											"end": 1565,
											"name": "SLOAD"
										},
										{
											"begin": 1555,
											"end": 1565,
											"name": "SWAP1"
										},
										{
											"begin": 1555,
											"end": 1565,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1555,
											"end": 1565,
											"name": "EXP"
										},
										{
											"begin": 1555,
											"end": 1565,
											"name": "SWAP1"
										},
										{
											"begin": 1555,
											"end": 1565,
											"name": "DIV"
										},
										{
											"begin": 1555,
											"end": 1565,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1555,
											"end": 1565,
											"name": "AND"
										},
										{
											"begin": 1551,
											"end": 1766,
											"name": "ISZERO"
										},
										{
											"begin": 1551,
											"end": 1766,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 1551,
											"end": 1766,
											"name": "JUMPI"
										},
										{
											"begin": 1610,
											"end": 1625,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1610,
											"end": 1625,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1610,
											"end": 1625,
											"name": "SWAP1"
										},
										{
											"begin": 1610,
											"end": 1625,
											"name": "SLOAD"
										},
										{
											"begin": 1610,
											"end": 1625,
											"name": "SWAP1"
										},
										{
											"begin": 1610,
											"end": 1625,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1610,
											"end": 1625,
											"name": "EXP"
										},
										{
											"begin": 1610,
											"end": 1625,
											"name": "SWAP1"
										},
										{
											"begin": 1610,
											"end": 1625,
											"name": "DIV"
										},
										{
											"begin": 1610,
											"end": 1625,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1610,
											"end": 1625,
											"name": "AND"
										},
										{
											"begin": 1588,
											"end": 1647,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1647,
											"name": "AND"
										},
										{
											"begin": 1588,
											"end": 1647,
											"name": "PUSH",
											"value": "8B477ADB"
										},
										{
											"begin": 1648,
											"end": 1658,
											"name": "CALLER"
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "DUP6"
										},
										{
											"begin": 1667,
											"end": 1670,
											"name": "DUP6"
										},
										{
											"begin": 1672,
											"end": 1678,
											"name": "DUP6"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "MLOAD"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "DUP6"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "AND"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "MUL"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "DUP2"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "MSTORE"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "ADD"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "DUP1"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "DUP6"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "AND"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "AND"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "DUP2"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "MSTORE"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "ADD"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "DUP5"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "AND"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "AND"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "DUP2"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "MSTORE"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "ADD"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "DUP4"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "AND"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "AND"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "DUP2"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "MSTORE"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "ADD"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "DUP3"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "DUP2"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "MSTORE"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "ADD"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "SWAP5"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "POP"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "POP"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "POP"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "POP"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "POP"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "MLOAD"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "DUP1"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "DUP4"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "SUB"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "DUP2"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "DUP8"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "DUP1"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "ISZERO"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "ISZERO"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "JUMPI"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "DUP1"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "REVERT"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "JUMPDEST"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "GAS"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "SUB"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "CALL"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "ISZERO"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "ISZERO"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "JUMPI"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "DUP1"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "REVERT"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "JUMPDEST"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "POP"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "POP"
										},
										{
											"begin": 1588,
											"end": 1679,
											"name": "POP"
										},
										{
											"begin": 1581,
											"end": 1679,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 1581,
											"end": 1679,
											"name": "JUMP"
										},
										{
											"begin": 1551,
											"end": 1766,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 1551,
											"end": 1766,
											"name": "JUMPDEST"
										},
										{
											"begin": 1717,
											"end": 1755,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 1736,
											"end": 1741,
											"name": "DUP4"
										},
										{
											"begin": 1743,
											"end": 1746,
											"name": "DUP4"
										},
										{
											"begin": 1748,
											"end": 1754,
											"name": "DUP4"
										},
										{
											"begin": 1717,
											"end": 1735,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 1717,
											"end": 1755,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1717,
											"end": 1755,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 1717,
											"end": 1755,
											"name": "JUMPDEST"
										},
										{
											"begin": 448,
											"end": 449,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 448,
											"end": 449,
											"name": "JUMPDEST"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "POP"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "POP"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "POP"
										},
										{
											"begin": 1418,
											"end": 1772,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP1"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SLOAD"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP1"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "EXP"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP1"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DIV"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "AND"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "JUMPDEST"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "MSTORE"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "MSTORE"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "KECCAK256"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SWAP2"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SLOAD"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "DUP2"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "SLOAD"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "DUP2"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMPDEST"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "SLOAD"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "DUP2"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "SLOAD"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "SLOAD"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "EXP"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "DIV"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "AND"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "ISZERO"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "ISZERO"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "JUMPI"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "REVERT"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "JUMPDEST"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 905,
											"end": 911,
											"name": "DUP1"
										},
										{
											"begin": 905,
											"end": 911,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "EXP"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "DUP2"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "SLOAD"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "DUP2"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "MUL"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "NOT"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "AND"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "DUP4"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "ISZERO"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "ISZERO"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "MUL"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "OR"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "SSTORE"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "POP"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "PUSH",
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "MLOAD"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "MLOAD"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "DUP1"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "SWAP2"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "SUB"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "SWAP1"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "LOG1"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "JUMPDEST"
										},
										{
											"begin": 917,
											"end": 921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 933,
											"end": 941,
											"name": "DUP1"
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 901,
											"end": 907,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 646,
											"end": 647,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 639,
											"end": 643,
											"name": "DUP2"
										},
										{
											"begin": 639,
											"end": 647,
											"name": "ADD"
										},
										{
											"begin": 621,
											"end": 629,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 621,
											"end": 629,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 621,
											"end": 636,
											"name": "SWAP1"
										},
										{
											"begin": 621,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 621,
											"end": 647,
											"name": "LT"
										},
										{
											"begin": 619,
											"end": 648,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "JUMPI"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "DUP1"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "REVERT"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "JUMPDEST"
										},
										{
											"begin": 944,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 945,
											"end": 972,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 956,
											"end": 971,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 956,
											"end": 971,
											"name": "SLOAD"
										},
										{
											"begin": 945,
											"end": 951,
											"name": "DUP9"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "SWAP1"
										},
										{
											"begin": 945,
											"end": 972,
											"name": "SWAP2"
										},
										{
											"begin": 945,
											"end": 972,
											"name": "SWAP1"
										},
										{
											"begin": 945,
											"end": 972,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 945,
											"end": 972,
											"name": "AND"
										},
										{
											"begin": 945,
											"end": 972,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 972,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 945,
											"end": 972,
											"name": "JUMPDEST"
										},
										{
											"begin": 944,
											"end": 977,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 944,
											"end": 977,
											"name": "SWAP1"
										},
										{
											"begin": 944,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 944,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 944,
											"end": 984,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 944,
											"end": 984,
											"name": "AND"
										},
										{
											"begin": 944,
											"end": 984,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 944,
											"end": 984,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 944,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 933,
											"end": 984,
											"name": "SWAP3"
										},
										{
											"begin": 933,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 1004,
											"end": 1014,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1004,
											"end": 1014,
											"name": "SLOAD"
										},
										{
											"begin": 998,
											"end": 1001,
											"name": "DUP4"
										},
										{
											"begin": 998,
											"end": 1014,
											"name": "GT"
										},
										{
											"begin": 994,
											"end": 1057,
											"name": "ISZERO"
										},
										{
											"begin": 994,
											"end": 1057,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 994,
											"end": 1057,
											"name": "JUMPI"
										},
										{
											"begin": 1036,
											"end": 1046,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1036,
											"end": 1046,
											"name": "SLOAD"
										},
										{
											"begin": 1030,
											"end": 1046,
											"name": "SWAP3"
										},
										{
											"begin": 1030,
											"end": 1046,
											"name": "POP"
										},
										{
											"begin": 994,
											"end": 1057,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 994,
											"end": 1057,
											"name": "JUMPDEST"
										},
										{
											"begin": 1084,
											"end": 1099,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 1095,
											"end": 1098,
											"name": "DUP4"
										},
										{
											"begin": 1084,
											"end": 1090,
											"name": "DUP7"
										},
										{
											"begin": 1084,
											"end": 1094,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 1084,
											"end": 1094,
											"name": "SWAP1"
										},
										{
											"begin": 1084,
											"end": 1099,
											"name": "SWAP2"
										},
										{
											"begin": 1084,
											"end": 1099,
											"name": "SWAP1"
										},
										{
											"begin": 1084,
											"end": 1099,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1084,
											"end": 1099,
											"name": "AND"
										},
										{
											"begin": 1084,
											"end": 1099,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1084,
											"end": 1099,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 1084,
											"end": 1099,
											"name": "JUMPDEST"
										},
										{
											"begin": 1066,
											"end": 1099,
											"name": "SWAP2"
										},
										{
											"begin": 1066,
											"end": 1099,
											"name": "POP"
										},
										{
											"begin": 1132,
											"end": 1164,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "DUP6"
										},
										{
											"begin": 1132,
											"end": 1140,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1151,
											"name": "CALLER"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "AND"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "AND"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "DUP2"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "MSTORE"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "ADD"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "SWAP1"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "DUP2"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "MSTORE"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "ADD"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "KECCAK256"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "SLOAD"
										},
										{
											"begin": 1132,
											"end": 1156,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 1132,
											"end": 1156,
											"name": "SWAP1"
										},
										{
											"begin": 1132,
											"end": 1164,
											"name": "SWAP2"
										},
										{
											"begin": 1132,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1132,
											"end": 1164,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1132,
											"end": 1164,
											"name": "AND"
										},
										{
											"begin": 1132,
											"end": 1164,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1132,
											"end": 1164,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 1132,
											"end": 1164,
											"name": "JUMPDEST"
										},
										{
											"begin": 1109,
											"end": 1117,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1109,
											"end": 1129,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1128,
											"name": "CALLER"
										},
										{
											"begin": 1109,
											"end": 1129,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1129,
											"name": "AND"
										},
										{
											"begin": 1109,
											"end": 1129,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1129,
											"name": "AND"
										},
										{
											"begin": 1109,
											"end": 1129,
											"name": "DUP2"
										},
										{
											"begin": 1109,
											"end": 1129,
											"name": "MSTORE"
										},
										{
											"begin": 1109,
											"end": 1129,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1129,
											"name": "ADD"
										},
										{
											"begin": 1109,
											"end": 1129,
											"name": "SWAP1"
										},
										{
											"begin": 1109,
											"end": 1129,
											"name": "DUP2"
										},
										{
											"begin": 1109,
											"end": 1129,
											"name": "MSTORE"
										},
										{
											"begin": 1109,
											"end": 1129,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1129,
											"name": "ADD"
										},
										{
											"begin": 1109,
											"end": 1129,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1129,
											"name": "KECCAK256"
										},
										{
											"begin": 1109,
											"end": 1164,
											"name": "DUP2"
										},
										{
											"begin": 1109,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1109,
											"end": 1164,
											"name": "SSTORE"
										},
										{
											"begin": 1109,
											"end": 1164,
											"name": "POP"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "DUP3"
										},
										{
											"begin": 1190,
											"end": 1198,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1202,
											"name": "DUP10"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "AND"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "AND"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "DUP2"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "MSTORE"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "ADD"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "SWAP1"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "DUP2"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "MSTORE"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "ADD"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "KECCAK256"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "SLOAD"
										},
										{
											"begin": 1190,
											"end": 1207,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 1190,
											"end": 1207,
											"name": "SWAP1"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SWAP2"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SWAP1"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "AND"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "JUMPDEST"
										},
										{
											"begin": 1174,
											"end": 1182,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1186,
											"name": "DUP9"
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "AND"
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "AND"
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "DUP2"
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "MSTORE"
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "ADD"
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "SWAP1"
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "DUP2"
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "MSTORE"
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "ADD"
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "KECCAK256"
										},
										{
											"begin": 1174,
											"end": 1219,
											"name": "DUP2"
										},
										{
											"begin": 1174,
											"end": 1219,
											"name": "SWAP1"
										},
										{
											"begin": 1174,
											"end": 1219,
											"name": "SSTORE"
										},
										{
											"begin": 1174,
											"end": 1219,
											"name": "POP"
										},
										{
											"begin": 1239,
											"end": 1240,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1236,
											"name": "DUP4"
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "GT"
										},
										{
											"begin": 1229,
											"end": 1355,
											"name": "ISZERO"
										},
										{
											"begin": 1229,
											"end": 1355,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 1229,
											"end": 1355,
											"name": "JUMPI"
										},
										{
											"begin": 1274,
											"end": 1298,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 1294,
											"end": 1297,
											"name": "DUP4"
										},
										{
											"begin": 1274,
											"end": 1282,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "SWAP1"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "SLOAD"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "SWAP1"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "EXP"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "SWAP1"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DIV"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "AND"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "AND"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "AND"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "DUP2"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "MSTORE"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "ADD"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "DUP2"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "MSTORE"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "ADD"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "KECCAK256"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "SLOAD"
										},
										{
											"begin": 1274,
											"end": 1293,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 1274,
											"end": 1293,
											"name": "SWAP1"
										},
										{
											"begin": 1274,
											"end": 1298,
											"name": "SWAP2"
										},
										{
											"begin": 1274,
											"end": 1298,
											"name": "SWAP1"
										},
										{
											"begin": 1274,
											"end": 1298,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1274,
											"end": 1298,
											"name": "AND"
										},
										{
											"begin": 1274,
											"end": 1298,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1274,
											"end": 1298,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 1274,
											"end": 1298,
											"name": "JUMPDEST"
										},
										{
											"begin": 1256,
											"end": 1264,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "DUP1"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "SWAP1"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "SLOAD"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "SWAP1"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "EXP"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "SWAP1"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "DIV"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "AND"
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "AND"
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "AND"
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "DUP2"
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "MSTORE"
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "ADD"
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "SWAP1"
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "DUP2"
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "MSTORE"
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "ADD"
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "KECCAK256"
										},
										{
											"begin": 1256,
											"end": 1298,
											"name": "DUP2"
										},
										{
											"begin": 1256,
											"end": 1298,
											"name": "SWAP1"
										},
										{
											"begin": 1256,
											"end": 1298,
											"name": "SSTORE"
										},
										{
											"begin": 1256,
											"end": 1298,
											"name": "POP"
										},
										{
											"begin": 1333,
											"end": 1338,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1338,
											"name": "DUP1"
										},
										{
											"begin": 1333,
											"end": 1338,
											"name": "SWAP1"
										},
										{
											"begin": 1333,
											"end": 1338,
											"name": "SLOAD"
										},
										{
											"begin": 1333,
											"end": 1338,
											"name": "SWAP1"
										},
										{
											"begin": 1333,
											"end": 1338,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1333,
											"end": 1338,
											"name": "EXP"
										},
										{
											"begin": 1333,
											"end": 1338,
											"name": "SWAP1"
										},
										{
											"begin": 1333,
											"end": 1338,
											"name": "DIV"
										},
										{
											"begin": 1333,
											"end": 1338,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1333,
											"end": 1338,
											"name": "AND"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "AND"
										},
										{
											"begin": 1321,
											"end": 1331,
											"name": "CALLER"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "AND"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1340,
											"end": 1343,
											"name": "DUP6"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "MLOAD"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "DUP1"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "DUP3"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "DUP2"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "MSTORE"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "ADD"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "SWAP2"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "POP"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "POP"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "MLOAD"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "DUP1"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "SWAP2"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "SUB"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "SWAP1"
										},
										{
											"begin": 1312,
											"end": 1344,
											"name": "LOG3"
										},
										{
											"begin": 1229,
											"end": 1355,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 1229,
											"end": 1355,
											"name": "JUMPDEST"
										},
										{
											"begin": 1385,
											"end": 1388,
											"name": "DUP6"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "AND"
										},
										{
											"begin": 1373,
											"end": 1383,
											"name": "CALLER"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "AND"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1390,
											"end": 1400,
											"name": "DUP5"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "MLOAD"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "DUP3"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "SWAP2"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "MLOAD"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "SWAP2"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "SUB"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "SWAP1"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "LOG3"
										},
										{
											"begin": 1418,
											"end": 1422,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1411,
											"end": 1422,
											"name": "SWAP4"
										},
										{
											"begin": 1411,
											"end": 1422,
											"name": "POP"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "POP"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "POP"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "POP"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "SWAP3"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "SWAP2"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "POP"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "POP"
										},
										{
											"begin": 833,
											"end": 1429,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 349,
											"end": 353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 372,
											"end": 385,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 386,
											"end": 392,
											"name": "DUP4"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "AND"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "AND"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "DUP2"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "MSTORE"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "ADD"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "SWAP1"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "DUP2"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "MSTORE"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "ADD"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "KECCAK256"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "SWAP1"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "SLOAD"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "SWAP1"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "EXP"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "SWAP1"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "DIV"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "AND"
										},
										{
											"begin": 365,
											"end": 393,
											"name": "SWAP1"
										},
										{
											"begin": 365,
											"end": 393,
											"name": "POP"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SWAP2"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "POP"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "JUMPDEST"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "MSTORE"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP2"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "MSTORE"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "KECCAK256"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "MSTORE"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "MSTORE"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "KECCAK256"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP2"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP2"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SLOAD"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP2"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SLOAD"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "EXP"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DIV"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "AND"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "JUMPDEST"
										},
										{
											"begin": 1911,
											"end": 1915,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1931,
											"end": 1941,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1931,
											"end": 1941,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1931,
											"end": 1941,
											"name": "SWAP1"
										},
										{
											"begin": 1931,
											"end": 1941,
											"name": "SLOAD"
										},
										{
											"begin": 1931,
											"end": 1941,
											"name": "SWAP1"
										},
										{
											"begin": 1931,
											"end": 1941,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1931,
											"end": 1941,
											"name": "EXP"
										},
										{
											"begin": 1931,
											"end": 1941,
											"name": "SWAP1"
										},
										{
											"begin": 1931,
											"end": 1941,
											"name": "DIV"
										},
										{
											"begin": 1931,
											"end": 1941,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1931,
											"end": 1941,
											"name": "AND"
										},
										{
											"begin": 1927,
											"end": 2086,
											"name": "ISZERO"
										},
										{
											"begin": 1927,
											"end": 2086,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 1927,
											"end": 2086,
											"name": "JUMPI"
										},
										{
											"begin": 1986,
											"end": 2001,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1986,
											"end": 2001,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 2001,
											"name": "SWAP1"
										},
										{
											"begin": 1986,
											"end": 2001,
											"name": "SLOAD"
										},
										{
											"begin": 1986,
											"end": 2001,
											"name": "SWAP1"
										},
										{
											"begin": 1986,
											"end": 2001,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1986,
											"end": 2001,
											"name": "EXP"
										},
										{
											"begin": 1986,
											"end": 2001,
											"name": "SWAP1"
										},
										{
											"begin": 1986,
											"end": 2001,
											"name": "DIV"
										},
										{
											"begin": 1986,
											"end": 2001,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1986,
											"end": 2001,
											"name": "AND"
										},
										{
											"begin": 1964,
											"end": 2012,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1964,
											"end": 2012,
											"name": "AND"
										},
										{
											"begin": 1964,
											"end": 2012,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 2013,
											"end": 2016,
											"name": "DUP4"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "MLOAD"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "ADD"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "MSTORE"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "MLOAD"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "DUP3"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "AND"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "MUL"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "DUP2"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "MSTORE"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "ADD"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "DUP1"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "DUP3"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "AND"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "AND"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "DUP2"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "MSTORE"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "ADD"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "SWAP2"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "POP"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "POP"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "MLOAD"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "DUP1"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "DUP4"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "SUB"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "DUP2"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "DUP8"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "DUP1"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "ISZERO"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "ISZERO"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "JUMPI"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "DUP1"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "REVERT"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "JUMPDEST"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "GAS"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "SUB"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "CALL"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "ISZERO"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "ISZERO"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "JUMPI"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "DUP1"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "REVERT"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "JUMPDEST"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "POP"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "POP"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "POP"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "MLOAD"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "DUP1"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "MLOAD"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "SWAP1"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "POP"
										},
										{
											"begin": 1957,
											"end": 2017,
											"name": "SWAP1"
										},
										{
											"begin": 1957,
											"end": 2017,
											"name": "POP"
										},
										{
											"begin": 1957,
											"end": 2017,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 1957,
											"end": 2017,
											"name": "JUMP"
										},
										{
											"begin": 1927,
											"end": 2086,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 1927,
											"end": 2086,
											"name": "JUMPDEST"
										},
										{
											"begin": 2055,
											"end": 2075,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 2071,
											"end": 2074,
											"name": "DUP3"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 2055,
											"end": 2075,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2055,
											"end": 2075,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 2055,
											"end": 2075,
											"name": "JUMPDEST"
										},
										{
											"begin": 2048,
											"end": 2075,
											"name": "SWAP1"
										},
										{
											"begin": 2048,
											"end": 2075,
											"name": "POP"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "JUMPDEST"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "SWAP2"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "SWAP1"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "POP"
										},
										{
											"begin": 1854,
											"end": 2092,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SLOAD"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "EXP"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "DIV"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "AND"
										},
										{
											"begin": 434,
											"end": 441,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "JUMPI"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP1"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "REVERT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "JUMPDEST"
										},
										{
											"begin": 748,
											"end": 752,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 739,
											"end": 745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 739,
											"end": 745,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "EXP"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "DUP2"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "SLOAD"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "DUP2"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "MUL"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "NOT"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "AND"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "SWAP1"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "DUP4"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "ISZERO"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "ISZERO"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "MUL"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "OR"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "SWAP1"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "SSTORE"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "POP"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "PUSH",
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "MLOAD"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "MLOAD"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "DUP1"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "SWAP2"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "SUB"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "SWAP1"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "LOG1"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "JUMPDEST"
										},
										{
											"begin": 453,
											"end": 460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "DUP1"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "SWAP1"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "SLOAD"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "SWAP1"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "EXP"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "SWAP1"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "DIV"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "AND"
										},
										{
											"begin": 472,
											"end": 484,
											"name": "SWAP1"
										},
										{
											"begin": 472,
											"end": 484,
											"name": "POP"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "SWAP1"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SLOAD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "EXP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DIV"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SLOAD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "AND"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ISZERO"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MUL"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SUB"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "AND"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DIV"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DIV"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MUL"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MLOAD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MSTORE"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP3"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MSTORE"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SLOAD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "AND"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ISZERO"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MUL"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SUB"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "AND"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DIV"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ISZERO"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPI"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "LT"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPI"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP4"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SLOAD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DIV"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MUL"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP4"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MSTORE"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMP"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MSTORE"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "KECCAK256"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SLOAD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MSTORE"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP4"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "GT"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPI"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SUB"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "AND"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "JUMPDEST"
										},
										{
											"begin": 1082,
											"end": 1086,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "DUP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SLOAD"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "EXP"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "DIV"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "AND"
										},
										{
											"begin": 434,
											"end": 441,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "JUMPI"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP1"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "REVERT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "JUMPDEST"
										},
										{
											"begin": 1106,
											"end": 1119,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1130,
											"name": "CALLER"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "AND"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "AND"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "DUP2"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "MSTORE"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "ADD"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "SWAP1"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "DUP2"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "MSTORE"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "ADD"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "KECCAK256"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "SWAP1"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "SLOAD"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "SWAP1"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "EXP"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "SWAP1"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "DIV"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1106,
											"end": 1131,
											"name": "AND"
										},
										{
											"begin": 1105,
											"end": 1131,
											"name": "ISZERO"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "ISZERO"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "ISZERO"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "JUMPI"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "DUP1"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "REVERT"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "JUMPDEST"
										},
										{
											"begin": 1146,
											"end": 1156,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1146,
											"end": 1156,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1146,
											"end": 1156,
											"name": "SWAP1"
										},
										{
											"begin": 1146,
											"end": 1156,
											"name": "SLOAD"
										},
										{
											"begin": 1146,
											"end": 1156,
											"name": "SWAP1"
										},
										{
											"begin": 1146,
											"end": 1156,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1146,
											"end": 1156,
											"name": "EXP"
										},
										{
											"begin": 1146,
											"end": 1156,
											"name": "SWAP1"
										},
										{
											"begin": 1146,
											"end": 1156,
											"name": "DIV"
										},
										{
											"begin": 1146,
											"end": 1156,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1146,
											"end": 1156,
											"name": "AND"
										},
										{
											"begin": 1142,
											"end": 1330,
											"name": "ISZERO"
										},
										{
											"begin": 1142,
											"end": 1330,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 1142,
											"end": 1330,
											"name": "JUMPI"
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "SLOAD"
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "EXP"
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "SWAP1"
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "DIV"
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "AND"
										},
										{
											"begin": 1179,
											"end": 1234,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1179,
											"end": 1234,
											"name": "AND"
										},
										{
											"begin": 1179,
											"end": 1234,
											"name": "PUSH",
											"value": "6E18980A"
										},
										{
											"begin": 1235,
											"end": 1245,
											"name": "CALLER"
										},
										{
											"begin": 1247,
											"end": 1250,
											"name": "DUP6"
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "DUP6"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "MLOAD"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "ADD"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "MSTORE"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "MLOAD"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP5"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "AND"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "MUL"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP2"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "MSTORE"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "ADD"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP1"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP5"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "AND"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "AND"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP2"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "MSTORE"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "ADD"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP4"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "AND"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "AND"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP2"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "MSTORE"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "ADD"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP3"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP2"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "MSTORE"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "ADD"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "SWAP4"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "POP"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "POP"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "POP"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "POP"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "MLOAD"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP1"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP4"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "SUB"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP2"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP8"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP1"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "ISZERO"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "ISZERO"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "JUMPI"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP1"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "REVERT"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "JUMPDEST"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "GAS"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "SUB"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "CALL"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "ISZERO"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "ISZERO"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "JUMPI"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP1"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "REVERT"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "JUMPDEST"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "POP"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "POP"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "POP"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "MLOAD"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "DUP1"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "MLOAD"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "SWAP1"
										},
										{
											"begin": 1179,
											"end": 1259,
											"name": "POP"
										},
										{
											"begin": 1172,
											"end": 1259,
											"name": "SWAP1"
										},
										{
											"begin": 1172,
											"end": 1259,
											"name": "POP"
										},
										{
											"begin": 1172,
											"end": 1259,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 1172,
											"end": 1259,
											"name": "JUMP"
										},
										{
											"begin": 1142,
											"end": 1330,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 1142,
											"end": 1330,
											"name": "JUMPDEST"
										},
										{
											"begin": 1297,
											"end": 1319,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 1307,
											"end": 1310,
											"name": "DUP4"
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP4"
										},
										{
											"begin": 1297,
											"end": 1306,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 1297,
											"end": 1319,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1319,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 1297,
											"end": 1319,
											"name": "JUMPDEST"
										},
										{
											"begin": 1290,
											"end": 1319,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1319,
											"name": "POP"
										},
										{
											"begin": 448,
											"end": 449,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 448,
											"end": 449,
											"name": "JUMPDEST"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "SWAP3"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "SWAP2"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "POP"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "POP"
										},
										{
											"begin": 1007,
											"end": 1336,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 4427,
											"end": 4429,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 4410,
											"end": 4424,
											"name": "DUP3"
										},
										{
											"begin": 4410,
											"end": 4429,
											"name": "LT"
										},
										{
											"begin": 4402,
											"end": 4430,
											"name": "ISZERO"
										},
										{
											"begin": 4402,
											"end": 4430,
											"name": "ISZERO"
										},
										{
											"begin": 4402,
											"end": 4430,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 4402,
											"end": 4430,
											"name": "JUMPI"
										},
										{
											"begin": 4402,
											"end": 4430,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4402,
											"end": 4430,
											"name": "DUP1"
										},
										{
											"begin": 4402,
											"end": 4430,
											"name": "REVERT"
										},
										{
											"begin": 4402,
											"end": 4430,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 4402,
											"end": 4430,
											"name": "JUMPDEST"
										},
										{
											"begin": 4460,
											"end": 4462,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 4448,
											"end": 4457,
											"name": "DUP2"
										},
										{
											"begin": 4448,
											"end": 4462,
											"name": "LT"
										},
										{
											"begin": 4440,
											"end": 4463,
											"name": "ISZERO"
										},
										{
											"begin": 4440,
											"end": 4463,
											"name": "ISZERO"
										},
										{
											"begin": 4440,
											"end": 4463,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 4440,
											"end": 4463,
											"name": "JUMPI"
										},
										{
											"begin": 4440,
											"end": 4463,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4440,
											"end": 4463,
											"name": "DUP1"
										},
										{
											"begin": 4440,
											"end": 4463,
											"name": "REVERT"
										},
										{
											"begin": 4440,
											"end": 4463,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 4440,
											"end": 4463,
											"name": "JUMPDEST"
										},
										{
											"begin": 4492,
											"end": 4506,
											"name": "DUP2"
										},
										{
											"begin": 4474,
											"end": 4489,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4474,
											"end": 4506,
											"name": "DUP2"
										},
										{
											"begin": 4474,
											"end": 4506,
											"name": "SWAP1"
										},
										{
											"begin": 4474,
											"end": 4506,
											"name": "SSTORE"
										},
										{
											"begin": 4474,
											"end": 4506,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4556,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 4547,
											"end": 4555,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 4547,
											"end": 4555,
											"name": "SLOAD"
										},
										{
											"begin": 4543,
											"end": 4545,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 4543,
											"end": 4555,
											"name": "EXP"
										},
										{
											"begin": 4529,
											"end": 4538,
											"name": "DUP3"
										},
										{
											"begin": 4529,
											"end": 4542,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 4529,
											"end": 4542,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4556,
											"name": "SWAP2"
										},
										{
											"begin": 4529,
											"end": 4556,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4556,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4529,
											"end": 4556,
											"name": "AND"
										},
										{
											"begin": 4529,
											"end": 4556,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4529,
											"end": 4556,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 4529,
											"end": 4556,
											"name": "JUMPDEST"
										},
										{
											"begin": 4516,
											"end": 4526,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4516,
											"end": 4556,
											"name": "DUP2"
										},
										{
											"begin": 4516,
											"end": 4556,
											"name": "SWAP1"
										},
										{
											"begin": 4516,
											"end": 4556,
											"name": "SSTORE"
										},
										{
											"begin": 4516,
											"end": 4556,
											"name": "POP"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "PUSH",
											"value": "B044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E"
										},
										{
											"begin": 4574,
											"end": 4589,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4574,
											"end": 4589,
											"name": "SLOAD"
										},
										{
											"begin": 4591,
											"end": 4601,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4591,
											"end": 4601,
											"name": "SLOAD"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "MLOAD"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "DUP1"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "DUP4"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "DUP2"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "MSTORE"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "ADD"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "DUP3"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "DUP2"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "MSTORE"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "ADD"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "SWAP3"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "POP"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "POP"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "POP"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "MLOAD"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "DUP1"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "SWAP2"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "SUB"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "SWAP1"
										},
										{
											"begin": 4567,
											"end": 4602,
											"name": "LOG1"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "POP"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "POP"
										},
										{
											"begin": 4231,
											"end": 4609,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 3599,
											"end": 3611,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3599,
											"end": 3611,
											"name": "SLOAD"
										},
										{
											"begin": 3590,
											"end": 3596,
											"name": "DUP2"
										},
										{
											"begin": 3575,
											"end": 3587,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3575,
											"end": 3587,
											"name": "SLOAD"
										},
										{
											"begin": 3575,
											"end": 3596,
											"name": "ADD"
										},
										{
											"begin": 3575,
											"end": 3611,
											"name": "GT"
										},
										{
											"begin": 3567,
											"end": 3612,
											"name": "ISZERO"
										},
										{
											"begin": 3567,
											"end": 3612,
											"name": "ISZERO"
										},
										{
											"begin": 3567,
											"end": 3612,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 3567,
											"end": 3612,
											"name": "JUMPI"
										},
										{
											"begin": 3567,
											"end": 3612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3612,
											"name": "DUP1"
										},
										{
											"begin": 3567,
											"end": 3612,
											"name": "REVERT"
										},
										{
											"begin": 3567,
											"end": 3612,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 3567,
											"end": 3612,
											"name": "JUMPDEST"
										},
										{
											"begin": 3657,
											"end": 3665,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "DUP1"
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "SWAP1"
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "SLOAD"
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "SWAP1"
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "EXP"
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "SWAP1"
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "DIV"
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "AND"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "AND"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "AND"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "DUP2"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "MSTORE"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "ADD"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "SWAP1"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "DUP2"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "MSTORE"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "ADD"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "KECCAK256"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "SLOAD"
										},
										{
											"begin": 3648,
											"end": 3654,
											"name": "DUP2"
										},
										{
											"begin": 3630,
											"end": 3638,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3639,
											"end": 3644,
											"name": "DUP1"
										},
										{
											"begin": 3639,
											"end": 3644,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3639,
											"end": 3644,
											"name": "SWAP1"
										},
										{
											"begin": 3639,
											"end": 3644,
											"name": "SLOAD"
										},
										{
											"begin": 3639,
											"end": 3644,
											"name": "SWAP1"
										},
										{
											"begin": 3639,
											"end": 3644,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3639,
											"end": 3644,
											"name": "EXP"
										},
										{
											"begin": 3639,
											"end": 3644,
											"name": "SWAP1"
										},
										{
											"begin": 3639,
											"end": 3644,
											"name": "DIV"
										},
										{
											"begin": 3639,
											"end": 3644,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3639,
											"end": 3644,
											"name": "AND"
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "AND"
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "AND"
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "DUP2"
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "MSTORE"
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "ADD"
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "SWAP1"
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "DUP2"
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "MSTORE"
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "ADD"
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "KECCAK256"
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "SLOAD"
										},
										{
											"begin": 3630,
											"end": 3654,
											"name": "ADD"
										},
										{
											"begin": 3630,
											"end": 3672,
											"name": "GT"
										},
										{
											"begin": 3622,
											"end": 3673,
											"name": "ISZERO"
										},
										{
											"begin": 3622,
											"end": 3673,
											"name": "ISZERO"
										},
										{
											"begin": 3622,
											"end": 3673,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 3622,
											"end": 3673,
											"name": "JUMPI"
										},
										{
											"begin": 3622,
											"end": 3673,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3673,
											"name": "DUP1"
										},
										{
											"begin": 3622,
											"end": 3673,
											"name": "REVERT"
										},
										{
											"begin": 3622,
											"end": 3673,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 3622,
											"end": 3673,
											"name": "JUMPDEST"
										},
										{
											"begin": 3703,
											"end": 3709,
											"name": "DUP1"
										},
										{
											"begin": 3684,
											"end": 3692,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3698,
											"name": "DUP1"
										},
										{
											"begin": 3693,
											"end": 3698,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3698,
											"name": "SWAP1"
										},
										{
											"begin": 3693,
											"end": 3698,
											"name": "SLOAD"
										},
										{
											"begin": 3693,
											"end": 3698,
											"name": "SWAP1"
										},
										{
											"begin": 3693,
											"end": 3698,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3693,
											"end": 3698,
											"name": "EXP"
										},
										{
											"begin": 3693,
											"end": 3698,
											"name": "SWAP1"
										},
										{
											"begin": 3693,
											"end": 3698,
											"name": "DIV"
										},
										{
											"begin": 3693,
											"end": 3698,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3693,
											"end": 3698,
											"name": "AND"
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "AND"
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "AND"
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "DUP2"
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "MSTORE"
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "ADD"
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "SWAP1"
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "DUP2"
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "MSTORE"
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "ADD"
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "KECCAK256"
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3684,
											"end": 3709,
											"name": "DUP3"
										},
										{
											"begin": 3684,
											"end": 3709,
											"name": "DUP3"
										},
										{
											"begin": 3684,
											"end": 3709,
											"name": "SLOAD"
										},
										{
											"begin": 3684,
											"end": 3709,
											"name": "ADD"
										},
										{
											"begin": 3684,
											"end": 3709,
											"name": "SWAP3"
										},
										{
											"begin": 3684,
											"end": 3709,
											"name": "POP"
										},
										{
											"begin": 3684,
											"end": 3709,
											"name": "POP"
										},
										{
											"begin": 3684,
											"end": 3709,
											"name": "DUP2"
										},
										{
											"begin": 3684,
											"end": 3709,
											"name": "SWAP1"
										},
										{
											"begin": 3684,
											"end": 3709,
											"name": "SSTORE"
										},
										{
											"begin": 3684,
											"end": 3709,
											"name": "POP"
										},
										{
											"begin": 3735,
											"end": 3741,
											"name": "DUP1"
										},
										{
											"begin": 3719,
											"end": 3731,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3719,
											"end": 3731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "DUP3"
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "DUP3"
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "SLOAD"
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "ADD"
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "SWAP3"
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "POP"
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "POP"
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "DUP2"
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "SWAP1"
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "SSTORE"
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "POP"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "PUSH",
											"value": "CB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A"
										},
										{
											"begin": 3757,
											"end": 3763,
											"name": "DUP2"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "MLOAD"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "DUP1"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "DUP3"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "DUP2"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "MSTORE"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "ADD"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "SWAP2"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "POP"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "POP"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "MLOAD"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "DUP1"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "SWAP2"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "SUB"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "SWAP1"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "LOG1"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "POP"
										},
										{
											"begin": 3512,
											"end": 3771,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 4075,
											"end": 4081,
											"name": "DUP1"
										},
										{
											"begin": 4059,
											"end": 4071,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4059,
											"end": 4071,
											"name": "SLOAD"
										},
										{
											"begin": 4059,
											"end": 4081,
											"name": "LT"
										},
										{
											"begin": 4059,
											"end": 4081,
											"name": "ISZERO"
										},
										{
											"begin": 4051,
											"end": 4082,
											"name": "ISZERO"
										},
										{
											"begin": 4051,
											"end": 4082,
											"name": "ISZERO"
										},
										{
											"begin": 4051,
											"end": 4082,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 4051,
											"end": 4082,
											"name": "JUMPI"
										},
										{
											"begin": 4051,
											"end": 4082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4082,
											"name": "DUP1"
										},
										{
											"begin": 4051,
											"end": 4082,
											"name": "REVERT"
										},
										{
											"begin": 4051,
											"end": 4082,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 4051,
											"end": 4082,
											"name": "JUMPDEST"
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "DUP1"
										},
										{
											"begin": 4100,
											"end": 4108,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4114,
											"name": "DUP1"
										},
										{
											"begin": 4109,
											"end": 4114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4114,
											"name": "SWAP1"
										},
										{
											"begin": 4109,
											"end": 4114,
											"name": "SLOAD"
										},
										{
											"begin": 4109,
											"end": 4114,
											"name": "SWAP1"
										},
										{
											"begin": 4109,
											"end": 4114,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4109,
											"end": 4114,
											"name": "EXP"
										},
										{
											"begin": 4109,
											"end": 4114,
											"name": "SWAP1"
										},
										{
											"begin": 4109,
											"end": 4114,
											"name": "DIV"
										},
										{
											"begin": 4109,
											"end": 4114,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4109,
											"end": 4114,
											"name": "AND"
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "AND"
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "AND"
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "DUP2"
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "MSTORE"
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "ADD"
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "SWAP1"
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "DUP2"
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "MSTORE"
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "ADD"
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "KECCAK256"
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "SLOAD"
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "LT"
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "ISZERO"
										},
										{
											"begin": 4092,
											"end": 4126,
											"name": "ISZERO"
										},
										{
											"begin": 4092,
											"end": 4126,
											"name": "ISZERO"
										},
										{
											"begin": 4092,
											"end": 4126,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 4092,
											"end": 4126,
											"name": "JUMPI"
										},
										{
											"begin": 4092,
											"end": 4126,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4126,
											"name": "DUP1"
										},
										{
											"begin": 4092,
											"end": 4126,
											"name": "REVERT"
										},
										{
											"begin": 4092,
											"end": 4126,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 4092,
											"end": 4126,
											"name": "JUMPDEST"
										},
										{
											"begin": 4153,
											"end": 4159,
											"name": "DUP1"
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "DUP3"
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "DUP3"
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "SLOAD"
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "SUB"
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "SWAP3"
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "POP"
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "POP"
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "DUP2"
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "SWAP1"
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "SSTORE"
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "POP"
										},
										{
											"begin": 4188,
											"end": 4194,
											"name": "DUP1"
										},
										{
											"begin": 4169,
											"end": 4177,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "DUP1"
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "SWAP1"
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "SLOAD"
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "SWAP1"
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "EXP"
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "SWAP1"
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "DIV"
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "AND"
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "AND"
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "AND"
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "DUP2"
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "MSTORE"
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "ADD"
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "SWAP1"
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "DUP2"
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "MSTORE"
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "ADD"
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "KECCAK256"
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "DUP3"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "DUP3"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "SLOAD"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "SUB"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "SWAP3"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "POP"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "POP"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "DUP2"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "SWAP1"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "SSTORE"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "POP"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "PUSH",
											"value": "702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44"
										},
										{
											"begin": 4211,
											"end": 4217,
											"name": "DUP2"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "MLOAD"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "DUP1"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "DUP3"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "DUP2"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "MSTORE"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "ADD"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "SWAP2"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "POP"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "POP"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "MLOAD"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "DUP1"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "SWAP2"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "SUB"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "SWAP1"
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "LOG1"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "POP"
										},
										{
											"begin": 3995,
											"end": 4225,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "JUMPDEST"
										},
										{
											"begin": 2630,
											"end": 2644,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "SWAP1"
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "SLOAD"
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "SWAP1"
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "EXP"
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "SWAP1"
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "DIV"
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2660,
											"end": 2670,
											"name": "AND"
										},
										{
											"begin": 2656,
											"end": 2833,
											"name": "ISZERO"
										},
										{
											"begin": 2656,
											"end": 2833,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 2656,
											"end": 2833,
											"name": "JUMPI"
										},
										{
											"begin": 2707,
											"end": 2722,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2707,
											"end": 2722,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2722,
											"name": "SWAP1"
										},
										{
											"begin": 2707,
											"end": 2722,
											"name": "SLOAD"
										},
										{
											"begin": 2707,
											"end": 2722,
											"name": "SWAP1"
										},
										{
											"begin": 2707,
											"end": 2722,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2707,
											"end": 2722,
											"name": "EXP"
										},
										{
											"begin": 2707,
											"end": 2722,
											"name": "SWAP1"
										},
										{
											"begin": 2707,
											"end": 2722,
											"name": "DIV"
										},
										{
											"begin": 2707,
											"end": 2722,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2707,
											"end": 2722,
											"name": "AND"
										},
										{
											"begin": 2693,
											"end": 2733,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2733,
											"name": "AND"
										},
										{
											"begin": 2693,
											"end": 2733,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 2734,
											"end": 2740,
											"name": "DUP5"
										},
										{
											"begin": 2742,
											"end": 2750,
											"name": "DUP5"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "MLOAD"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "ADD"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "MSTORE"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "MLOAD"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "DUP4"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "AND"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "MUL"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "DUP2"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "MSTORE"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "ADD"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "DUP1"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "DUP4"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "AND"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "AND"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "DUP2"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "MSTORE"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "ADD"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "DUP3"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "AND"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "AND"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "DUP2"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "MSTORE"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "ADD"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "SWAP3"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "POP"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "POP"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "POP"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "MLOAD"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "DUP1"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "DUP4"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "SUB"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "DUP2"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "DUP8"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "DUP1"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "ISZERO"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "ISZERO"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "JUMPI"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "DUP1"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "REVERT"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "JUMPDEST"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "GAS"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "SUB"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "CALL"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "ISZERO"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "ISZERO"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "JUMPI"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "DUP1"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "REVERT"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "JUMPDEST"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "POP"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "POP"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "POP"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "MLOAD"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "DUP1"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "MLOAD"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "SWAP1"
										},
										{
											"begin": 2693,
											"end": 2751,
											"name": "POP"
										},
										{
											"begin": 2686,
											"end": 2751,
											"name": "SWAP1"
										},
										{
											"begin": 2686,
											"end": 2751,
											"name": "POP"
										},
										{
											"begin": 2686,
											"end": 2751,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 2686,
											"end": 2751,
											"name": "JUMP"
										},
										{
											"begin": 2656,
											"end": 2833,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 2656,
											"end": 2833,
											"name": "JUMPDEST"
										},
										{
											"begin": 2789,
											"end": 2822,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "DUP4"
										},
										{
											"begin": 2813,
											"end": 2821,
											"name": "DUP4"
										},
										{
											"begin": 2789,
											"end": 2804,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 2789,
											"end": 2822,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2789,
											"end": 2822,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 2789,
											"end": 2822,
											"name": "JUMPDEST"
										},
										{
											"begin": 2782,
											"end": 2822,
											"name": "SWAP1"
										},
										{
											"begin": 2782,
											"end": 2822,
											"name": "POP"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "JUMPDEST"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "SWAP3"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "SWAP2"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "POP"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "POP"
										},
										{
											"begin": 2552,
											"end": 2839,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "SLOAD"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "DUP2"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "JUMPDEST"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "MSTORE"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DUP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "MSTORE"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "KECCAK256"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP2"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SLOAD"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "EXP"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DIV"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "AND"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DUP2"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 807,
											"end": 812,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 777,
											"end": 790,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 791,
											"end": 803,
											"name": "DUP4"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "AND"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "AND"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "DUP2"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "MSTORE"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "ADD"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "SWAP1"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "DUP2"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "MSTORE"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "ADD"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "KECCAK256"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "EXP"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "DUP2"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "SLOAD"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "DUP2"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "MUL"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "NOT"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "AND"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "SWAP1"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "DUP4"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "ISZERO"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "ISZERO"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "MUL"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "OR"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "SWAP1"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "SSTORE"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "POP"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "PUSH",
											"value": "D7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C"
										},
										{
											"begin": 839,
											"end": 851,
											"name": "DUP2"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "MLOAD"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "DUP1"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "DUP3"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "AND"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "AND"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "DUP2"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "MSTORE"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "ADD"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "SWAP2"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "POP"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "POP"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "MLOAD"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "DUP1"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "SWAP2"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "SUB"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "SWAP1"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "LOG1"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "POP"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "JUMPDEST"
										},
										{
											"begin": 525,
											"end": 535,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "DUP2"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 917,
											"end": 918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "AND"
										},
										{
											"begin": 897,
											"end": 905,
											"name": "DUP2"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "AND"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "EQ"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "ISZERO"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "ISZERO"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "JUMPI"
										},
										{
											"begin": 943,
											"end": 951,
											"name": "DUP1"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "EXP"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SLOAD"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "MUL"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "NOT"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "AND"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "DUP4"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "AND"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "MUL"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "OR"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SSTORE"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "POP"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "JUMPDEST"
										},
										{
											"begin": 996,
											"end": 1011,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 954,
											"end": 967,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 968,
											"end": 984,
											"name": "DUP4"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "AND"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "AND"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "DUP2"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "MSTORE"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "ADD"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "SWAP1"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "DUP2"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "MSTORE"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "ADD"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "KECCAK256"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "SWAP1"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "SLOAD"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "SWAP1"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "EXP"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "SWAP1"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "DIV"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "AND"
										},
										{
											"begin": 946,
											"end": 986,
											"name": "ISZERO"
										},
										{
											"begin": 946,
											"end": 986,
											"name": "ISZERO"
										},
										{
											"begin": 946,
											"end": 986,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 946,
											"end": 986,
											"name": "JUMPI"
										},
										{
											"begin": 946,
											"end": 986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 946,
											"end": 986,
											"name": "DUP1"
										},
										{
											"begin": 946,
											"end": 986,
											"name": "REVERT"
										},
										{
											"begin": 946,
											"end": 986,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 946,
											"end": 986,
											"name": "JUMPDEST"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 1024,
											"end": 1040,
											"name": "DUP3"
										},
										{
											"begin": 1014,
											"end": 1023,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "JUMPDEST"
										},
										{
											"begin": 996,
											"end": 1041,
											"name": "SWAP1"
										},
										{
											"begin": 996,
											"end": 1041,
											"name": "POP"
										},
										{
											"begin": 1080,
											"end": 1081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1059,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1076,
											"name": "DUP5"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "AND"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "AND"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "DUP2"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "MSTORE"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "ADD"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "DUP2"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "MSTORE"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "ADD"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "KECCAK256"
										},
										{
											"begin": 1051,
											"end": 1081,
											"name": "DUP2"
										},
										{
											"begin": 1051,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1051,
											"end": 1081,
											"name": "SSTORE"
										},
										{
											"begin": 1051,
											"end": 1081,
											"name": "POP"
										},
										{
											"begin": 1107,
											"end": 1117,
											"name": "DUP1"
										},
										{
											"begin": 1091,
											"end": 1103,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1091,
											"end": 1103,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "DUP3"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "DUP3"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "SLOAD"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "SUB"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "SWAP3"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "POP"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "POP"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "DUP2"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "SWAP1"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "SSTORE"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "POP"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "PUSH",
											"value": "61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6"
										},
										{
											"begin": 1147,
											"end": 1163,
											"name": "DUP3"
										},
										{
											"begin": 1165,
											"end": 1175,
											"name": "DUP3"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "MLOAD"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "DUP1"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "DUP4"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "AND"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "AND"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "DUP2"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "MSTORE"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "ADD"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "DUP3"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "DUP2"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "MSTORE"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "ADD"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "SWAP3"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "MLOAD"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "DUP1"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "SWAP2"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "SUB"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "SWAP1"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "LOG1"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1937,
											"end": 2500,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 1937,
											"end": 2500,
											"name": "JUMPDEST"
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 646,
											"end": 647,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 639,
											"end": 643,
											"name": "DUP2"
										},
										{
											"begin": 639,
											"end": 647,
											"name": "ADD"
										},
										{
											"begin": 621,
											"end": 629,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 621,
											"end": 629,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 621,
											"end": 636,
											"name": "SWAP1"
										},
										{
											"begin": 621,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 621,
											"end": 647,
											"name": "LT"
										},
										{
											"begin": 619,
											"end": 648,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "JUMPI"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "DUP1"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "REVERT"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "JUMPDEST"
										},
										{
											"begin": 2352,
											"end": 2353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2342,
											"end": 2348,
											"name": "DUP3"
										},
										{
											"begin": 2342,
											"end": 2353,
											"name": "EQ"
										},
										{
											"begin": 2342,
											"end": 2353,
											"name": "ISZERO"
										},
										{
											"begin": 2341,
											"end": 2394,
											"name": "DUP1"
										},
										{
											"begin": 2341,
											"end": 2394,
											"name": "ISZERO"
										},
										{
											"begin": 2341,
											"end": 2394,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 2341,
											"end": 2394,
											"name": "JUMPI"
										},
										{
											"begin": 2341,
											"end": 2394,
											"name": "POP"
										},
										{
											"begin": 2392,
											"end": 2393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2377,
											"name": "CALLER"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "AND"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "AND"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "DUP2"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "MSTORE"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "ADD"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "SWAP1"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "DUP2"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "MSTORE"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "ADD"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "KECCAK256"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2387,
											"name": "DUP6"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "AND"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "AND"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "DUP2"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "MSTORE"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "ADD"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "SWAP1"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "DUP2"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "MSTORE"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "ADD"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "KECCAK256"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "SLOAD"
										},
										{
											"begin": 2359,
											"end": 2393,
											"name": "EQ"
										},
										{
											"begin": 2359,
											"end": 2393,
											"name": "ISZERO"
										},
										{
											"begin": 2341,
											"end": 2394,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 2341,
											"end": 2394,
											"name": "JUMPDEST"
										},
										{
											"begin": 2339,
											"end": 2395,
											"name": "ISZERO"
										},
										{
											"begin": 2331,
											"end": 2396,
											"name": "ISZERO"
										},
										{
											"begin": 2331,
											"end": 2396,
											"name": "ISZERO"
										},
										{
											"begin": 2331,
											"end": 2396,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 2331,
											"end": 2396,
											"name": "JUMPI"
										},
										{
											"begin": 2331,
											"end": 2396,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2331,
											"end": 2396,
											"name": "DUP1"
										},
										{
											"begin": 2331,
											"end": 2396,
											"name": "REVERT"
										},
										{
											"begin": 2331,
											"end": 2396,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 2331,
											"end": 2396,
											"name": "JUMPDEST"
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "DUP2"
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2425,
											"name": "CALLER"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "AND"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "AND"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "DUP2"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "MSTORE"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "ADD"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "DUP2"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "MSTORE"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "ADD"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "KECCAK256"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2435,
											"name": "DUP6"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "AND"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "AND"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "DUP2"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "MSTORE"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "ADD"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "SWAP1"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "DUP2"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "MSTORE"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "ADD"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "KECCAK256"
										},
										{
											"begin": 2407,
											"end": 2445,
											"name": "DUP2"
										},
										{
											"begin": 2407,
											"end": 2445,
											"name": "SWAP1"
										},
										{
											"begin": 2407,
											"end": 2445,
											"name": "SSTORE"
										},
										{
											"begin": 2407,
											"end": 2445,
											"name": "POP"
										},
										{
											"begin": 2476,
											"end": 2484,
											"name": "DUP3"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "AND"
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "CALLER"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "AND"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2486,
											"end": 2492,
											"name": "DUP5"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "MLOAD"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "DUP1"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "DUP3"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "DUP2"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "MSTORE"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "ADD"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "SWAP2"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "POP"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "POP"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "MLOAD"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "DUP1"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "SWAP2"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "SUB"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "SWAP1"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "LOG3"
										},
										{
											"begin": 1937,
											"end": 2500,
											"name": "POP"
										},
										{
											"begin": 1937,
											"end": 2500,
											"name": "POP"
										},
										{
											"begin": 1937,
											"end": 2500,
											"name": "POP"
										},
										{
											"begin": 1937,
											"end": 2500,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "JUMPDEST"
										},
										{
											"begin": 921,
											"end": 935,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1138,
											"name": "DUP1"
										},
										{
											"begin": 1375,
											"end": 1390,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 646,
											"end": 647,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 639,
											"end": 643,
											"name": "DUP2"
										},
										{
											"begin": 639,
											"end": 647,
											"name": "ADD"
										},
										{
											"begin": 621,
											"end": 629,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 621,
											"end": 629,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 621,
											"end": 636,
											"name": "SWAP1"
										},
										{
											"begin": 621,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 621,
											"end": 647,
											"name": "LT"
										},
										{
											"begin": 619,
											"end": 648,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "JUMPI"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "DUP1"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "REVERT"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "JUMPDEST"
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 946,
											"end": 951,
											"name": "DUP9"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "AND"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "AND"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "KECCAK256"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 953,
											"end": 963,
											"name": "CALLER"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "AND"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "AND"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "KECCAK256"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "SLOAD"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP4"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "POP"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 1153,
											"end": 1168,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1153,
											"end": 1168,
											"name": "SLOAD"
										},
										{
											"begin": 1142,
											"end": 1148,
											"name": "DUP9"
										},
										{
											"begin": 1142,
											"end": 1152,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 1142,
											"end": 1152,
											"name": "SWAP1"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "SWAP2"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "SWAP1"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "AND"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "JUMPDEST"
										},
										{
											"begin": 1141,
											"end": 1174,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 1141,
											"end": 1174,
											"name": "SWAP1"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "SWAP2"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "SWAP1"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "AND"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "JUMPDEST"
										},
										{
											"begin": 1130,
											"end": 1181,
											"name": "SWAP3"
										},
										{
											"begin": 1130,
											"end": 1181,
											"name": "POP"
										},
										{
											"begin": 1201,
											"end": 1211,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1211,
											"name": "SLOAD"
										},
										{
											"begin": 1195,
											"end": 1198,
											"name": "DUP4"
										},
										{
											"begin": 1195,
											"end": 1211,
											"name": "GT"
										},
										{
											"begin": 1191,
											"end": 1254,
											"name": "ISZERO"
										},
										{
											"begin": 1191,
											"end": 1254,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 1191,
											"end": 1254,
											"name": "JUMPI"
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "SLOAD"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "SWAP3"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1254,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 1191,
											"end": 1254,
											"name": "JUMPDEST"
										},
										{
											"begin": 525,
											"end": 535,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1267,
											"end": 1277,
											"name": "DUP5"
										},
										{
											"begin": 1267,
											"end": 1288,
											"name": "LT"
										},
										{
											"begin": 1263,
											"end": 1366,
											"name": "ISZERO"
										},
										{
											"begin": 1263,
											"end": 1366,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 1263,
											"end": 1366,
											"name": "JUMPI"
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "DUP6"
										},
										{
											"begin": 1333,
											"end": 1343,
											"name": "DUP6"
										},
										{
											"begin": 1333,
											"end": 1347,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 1333,
											"end": 1347,
											"name": "SWAP1"
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "SWAP2"
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "SWAP1"
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "AND"
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "JUMPDEST"
										},
										{
											"begin": 1304,
											"end": 1311,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1317,
											"name": "DUP10"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "AND"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "AND"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "DUP2"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "MSTORE"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "ADD"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "SWAP1"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "DUP2"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "MSTORE"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "ADD"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "KECCAK256"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1329,
											"name": "CALLER"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "AND"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "AND"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "DUP2"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "MSTORE"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "ADD"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "SWAP1"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "DUP2"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "MSTORE"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "ADD"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "KECCAK256"
										},
										{
											"begin": 1304,
											"end": 1355,
											"name": "DUP2"
										},
										{
											"begin": 1304,
											"end": 1355,
											"name": "SWAP1"
										},
										{
											"begin": 1304,
											"end": 1355,
											"name": "SSTORE"
										},
										{
											"begin": 1304,
											"end": 1355,
											"name": "POP"
										},
										{
											"begin": 1263,
											"end": 1366,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 1263,
											"end": 1366,
											"name": "JUMPDEST"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 1404,
											"end": 1407,
											"name": "DUP4"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DUP7"
										},
										{
											"begin": 1393,
											"end": 1403,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 1393,
											"end": 1403,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "SWAP2"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "AND"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "JUMPDEST"
										},
										{
											"begin": 1375,
											"end": 1408,
											"name": "SWAP2"
										},
										{
											"begin": 1375,
											"end": 1408,
											"name": "POP"
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 1456,
											"end": 1462,
											"name": "DUP6"
										},
										{
											"begin": 1436,
											"end": 1444,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "DUP11"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "AND"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "AND"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "DUP2"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "MSTORE"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "ADD"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "SWAP1"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "DUP2"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "MSTORE"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "ADD"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "KECCAK256"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "SLOAD"
										},
										{
											"begin": 1436,
											"end": 1455,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 1436,
											"end": 1455,
											"name": "SWAP1"
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "SWAP2"
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "SWAP1"
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "AND"
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "JUMPDEST"
										},
										{
											"begin": 1418,
											"end": 1426,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP10"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "AND"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "AND"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "DUP2"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "MSTORE"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "ADD"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "SWAP1"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "DUP2"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "MSTORE"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "ADD"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "KECCAK256"
										},
										{
											"begin": 1418,
											"end": 1463,
											"name": "DUP2"
										},
										{
											"begin": 1418,
											"end": 1463,
											"name": "SWAP1"
										},
										{
											"begin": 1418,
											"end": 1463,
											"name": "SSTORE"
										},
										{
											"begin": 1418,
											"end": 1463,
											"name": "POP"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 1507,
											"end": 1517,
											"name": "DUP3"
										},
										{
											"begin": 1489,
											"end": 1497,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP10"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "AND"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "AND"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "DUP2"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "MSTORE"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "ADD"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "SWAP1"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "DUP2"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "MSTORE"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "ADD"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "KECCAK256"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "SLOAD"
										},
										{
											"begin": 1489,
											"end": 1506,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 1489,
											"end": 1506,
											"name": "SWAP1"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "SWAP2"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "SWAP1"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "AND"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "JUMPDEST"
										},
										{
											"begin": 1473,
											"end": 1481,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1485,
											"name": "DUP9"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "AND"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "AND"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "DUP2"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "MSTORE"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "ADD"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "SWAP1"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "DUP2"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "MSTORE"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "ADD"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "KECCAK256"
										},
										{
											"begin": 1473,
											"end": 1518,
											"name": "DUP2"
										},
										{
											"begin": 1473,
											"end": 1518,
											"name": "SWAP1"
										},
										{
											"begin": 1473,
											"end": 1518,
											"name": "SSTORE"
										},
										{
											"begin": 1473,
											"end": 1518,
											"name": "POP"
										},
										{
											"begin": 1538,
											"end": 1539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1535,
											"name": "DUP4"
										},
										{
											"begin": 1532,
											"end": 1539,
											"name": "GT"
										},
										{
											"begin": 1528,
											"end": 1649,
											"name": "ISZERO"
										},
										{
											"begin": 1528,
											"end": 1649,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 1528,
											"end": 1649,
											"name": "JUMPI"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 1593,
											"end": 1596,
											"name": "DUP4"
										},
										{
											"begin": 1573,
											"end": 1581,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "DUP1"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "SWAP1"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "SLOAD"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "SWAP1"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "EXP"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "SWAP1"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "DIV"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "AND"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "AND"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "AND"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "DUP2"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "MSTORE"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "ADD"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "SWAP1"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "DUP2"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "MSTORE"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "ADD"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "KECCAK256"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "SLOAD"
										},
										{
											"begin": 1573,
											"end": 1592,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 1573,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "SWAP2"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "SWAP1"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "AND"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "JUMPDEST"
										},
										{
											"begin": 1555,
											"end": 1563,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "DUP1"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "SWAP1"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "SLOAD"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "SWAP1"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "EXP"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "SWAP1"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "DIV"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "AND"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "DUP2"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "MSTORE"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "ADD"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "SWAP1"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "DUP2"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "MSTORE"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "ADD"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "KECCAK256"
										},
										{
											"begin": 1555,
											"end": 1597,
											"name": "DUP2"
										},
										{
											"begin": 1555,
											"end": 1597,
											"name": "SWAP1"
										},
										{
											"begin": 1555,
											"end": 1597,
											"name": "SSTORE"
										},
										{
											"begin": 1555,
											"end": 1597,
											"name": "POP"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "DUP1"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "SWAP1"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "SLOAD"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "SWAP1"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "EXP"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "SWAP1"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "DIV"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "AND"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "AND"
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "DUP8"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "AND"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1634,
											"end": 1637,
											"name": "DUP6"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "MLOAD"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "DUP1"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "DUP3"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "DUP2"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "MSTORE"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "ADD"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "SWAP2"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "POP"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "POP"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "MLOAD"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "DUP1"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "SWAP2"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "SUB"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "SWAP1"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "LOG3"
										},
										{
											"begin": 1528,
											"end": 1649,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 1528,
											"end": 1649,
											"name": "JUMPDEST"
										},
										{
											"begin": 1674,
											"end": 1677,
											"name": "DUP6"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "AND"
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP8"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "AND"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1679,
											"end": 1689,
											"name": "DUP5"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "MLOAD"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "DUP3"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "DUP2"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "MSTORE"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "ADD"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "SWAP2"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "POP"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "POP"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "MLOAD"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "SWAP2"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "SUB"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "SWAP1"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "LOG3"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "JUMPDEST"
										},
										{
											"begin": 229,
											"end": 236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 302,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 257,
											"end": 258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 252,
											"end": 253,
											"name": "DUP5"
										},
										{
											"begin": 252,
											"end": 258,
											"name": "EQ"
										},
										{
											"begin": 248,
											"end": 293,
											"name": "ISZERO"
										},
										{
											"begin": 248,
											"end": 293,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 248,
											"end": 293,
											"name": "JUMPI"
										},
										{
											"begin": 281,
											"end": 282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 274,
											"end": 282,
											"name": "SWAP2"
										},
										{
											"begin": 274,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 274,
											"end": 282,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 274,
											"end": 282,
											"name": "JUMP"
										},
										{
											"begin": 248,
											"end": 293,
											"name": "tag",
											"value": "275"
										},
										{
											"begin": 248,
											"end": 293,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "DUP3"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP5"
										},
										{
											"begin": 314,
											"end": 319,
											"name": "MUL"
										},
										{
											"begin": 302,
											"end": 319,
											"name": "SWAP1"
										},
										{
											"begin": 302,
											"end": 319,
											"name": "POP"
										},
										{
											"begin": 345,
											"end": 346,
											"name": "DUP3"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP5"
										},
										{
											"begin": 336,
											"end": 337,
											"name": "DUP3"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "DUP2"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "ISZERO"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "ISZERO"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "PUSH [tag]",
											"value": "276"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "JUMPI"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "INVALID"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "tag",
											"value": "276"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "DIV"
										},
										{
											"begin": 336,
											"end": 346,
											"name": "EQ"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "ISZERO"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "ISZERO"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "PUSH [tag]",
											"value": "277"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "JUMPI"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "INVALID"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "tag",
											"value": "277"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "JUMPDEST"
										},
										{
											"begin": 364,
											"end": 365,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 365,
											"name": "SWAP2"
										},
										{
											"begin": 357,
											"end": 365,
											"name": "POP"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "JUMPDEST"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "POP"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "SWAP3"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "SWAP2"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "POP"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "POP"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 378,
											"end": 661,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 378,
											"end": 661,
											"name": "JUMPDEST"
										},
										{
											"begin": 436,
											"end": 443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 533,
											"end": 542,
											"name": "DUP1"
										},
										{
											"begin": 549,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 545,
											"end": 546,
											"name": "DUP5"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "ISZERO"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "ISZERO"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "JUMPI"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "INVALID"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "DIV"
										},
										{
											"begin": 533,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 533,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 653,
											"end": 654,
											"name": "DUP1"
										},
										{
											"begin": 646,
											"end": 654,
											"name": "SWAP2"
										},
										{
											"begin": 646,
											"end": 654,
											"name": "POP"
										},
										{
											"begin": 378,
											"end": 661,
											"name": "POP"
										},
										{
											"begin": 378,
											"end": 661,
											"name": "SWAP3"
										},
										{
											"begin": 378,
											"end": 661,
											"name": "SWAP2"
										},
										{
											"begin": 378,
											"end": 661,
											"name": "POP"
										},
										{
											"begin": 378,
											"end": 661,
											"name": "POP"
										},
										{
											"begin": 378,
											"end": 661,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 667,
											"end": 787,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 667,
											"end": 787,
											"name": "JUMPDEST"
										},
										{
											"begin": 725,
											"end": 732,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 756,
											"end": 757,
											"name": "DUP3"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP3"
										},
										{
											"begin": 751,
											"end": 757,
											"name": "GT"
										},
										{
											"begin": 751,
											"end": 757,
											"name": "ISZERO"
										},
										{
											"begin": 744,
											"end": 758,
											"name": "ISZERO"
										},
										{
											"begin": 744,
											"end": 758,
											"name": "ISZERO"
										},
										{
											"begin": 744,
											"end": 758,
											"name": "PUSH [tag]",
											"value": "281"
										},
										{
											"begin": 744,
											"end": 758,
											"name": "JUMPI"
										},
										{
											"begin": 744,
											"end": 758,
											"name": "INVALID"
										},
										{
											"begin": 744,
											"end": 758,
											"name": "tag",
											"value": "281"
										},
										{
											"begin": 744,
											"end": 758,
											"name": "JUMPDEST"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "DUP2"
										},
										{
											"begin": 775,
											"end": 776,
											"name": "DUP4"
										},
										{
											"begin": 775,
											"end": 780,
											"name": "SUB"
										},
										{
											"begin": 768,
											"end": 780,
											"name": "SWAP1"
										},
										{
											"begin": 768,
											"end": 780,
											"name": "POP"
										},
										{
											"begin": 667,
											"end": 787,
											"name": "SWAP3"
										},
										{
											"begin": 667,
											"end": 787,
											"name": "SWAP2"
										},
										{
											"begin": 667,
											"end": 787,
											"name": "POP"
										},
										{
											"begin": 667,
											"end": 787,
											"name": "POP"
										},
										{
											"begin": 667,
											"end": 787,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 793,
											"end": 936,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 793,
											"end": 936,
											"name": "JUMPDEST"
										},
										{
											"begin": 851,
											"end": 858,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 870,
											"end": 879,
											"name": "DUP1"
										},
										{
											"begin": 886,
											"end": 887,
											"name": "DUP3"
										},
										{
											"begin": 882,
											"end": 883,
											"name": "DUP5"
										},
										{
											"begin": 882,
											"end": 887,
											"name": "ADD"
										},
										{
											"begin": 870,
											"end": 887,
											"name": "SWAP1"
										},
										{
											"begin": 870,
											"end": 887,
											"name": "POP"
										},
										{
											"begin": 909,
											"end": 910,
											"name": "DUP4"
										},
										{
											"begin": 904,
											"end": 905,
											"name": "DUP2"
										},
										{
											"begin": 904,
											"end": 910,
											"name": "LT"
										},
										{
											"begin": 904,
											"end": 910,
											"name": "ISZERO"
										},
										{
											"begin": 897,
											"end": 911,
											"name": "ISZERO"
										},
										{
											"begin": 897,
											"end": 911,
											"name": "ISZERO"
										},
										{
											"begin": 897,
											"end": 911,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 897,
											"end": 911,
											"name": "JUMPI"
										},
										{
											"begin": 897,
											"end": 911,
											"name": "INVALID"
										},
										{
											"begin": 897,
											"end": 911,
											"name": "tag",
											"value": "283"
										},
										{
											"begin": 897,
											"end": 911,
											"name": "JUMPDEST"
										},
										{
											"begin": 928,
											"end": 929,
											"name": "DUP1"
										},
										{
											"begin": 921,
											"end": 929,
											"name": "SWAP2"
										},
										{
											"begin": 921,
											"end": 929,
											"name": "POP"
										},
										{
											"begin": 793,
											"end": 936,
											"name": "POP"
										},
										{
											"begin": 793,
											"end": 936,
											"name": "SWAP3"
										},
										{
											"begin": 793,
											"end": 936,
											"name": "SWAP2"
										},
										{
											"begin": 793,
											"end": 936,
											"name": "POP"
										},
										{
											"begin": 793,
											"end": 936,
											"name": "POP"
										},
										{
											"begin": 793,
											"end": 936,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1640,
											"end": 1754,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 1640,
											"end": 1754,
											"name": "JUMPDEST"
										},
										{
											"begin": 1700,
											"end": 1712,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1739,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1746,
											"name": "DUP4"
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "AND"
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "AND"
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "DUP2"
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "MSTORE"
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "ADD"
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "SWAP1"
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "DUP2"
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "MSTORE"
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "ADD"
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "KECCAK256"
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "SLOAD"
										},
										{
											"begin": 1724,
											"end": 1747,
											"name": "SWAP1"
										},
										{
											"begin": 1724,
											"end": 1747,
											"name": "POP"
										},
										{
											"begin": 1640,
											"end": 1754,
											"name": "SWAP2"
										},
										{
											"begin": 1640,
											"end": 1754,
											"name": "SWAP1"
										},
										{
											"begin": 1640,
											"end": 1754,
											"name": "POP"
										},
										{
											"begin": 1640,
											"end": 1754,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2825,
											"end": 2968,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 2825,
											"end": 2968,
											"name": "JUMPDEST"
										},
										{
											"begin": 2903,
											"end": 2917,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2943,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "DUP5"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "AND"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "AND"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "DUP2"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "MSTORE"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "ADD"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "SWAP1"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "DUP2"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "MSTORE"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "ADD"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "KECCAK256"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2960,
											"name": "DUP4"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "AND"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "AND"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "DUP2"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "MSTORE"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "ADD"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "SWAP1"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "DUP2"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "MSTORE"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "ADD"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "KECCAK256"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "SLOAD"
										},
										{
											"begin": 2929,
											"end": 2961,
											"name": "SWAP1"
										},
										{
											"begin": 2929,
											"end": 2961,
											"name": "POP"
										},
										{
											"begin": 2825,
											"end": 2968,
											"name": "SWAP3"
										},
										{
											"begin": 2825,
											"end": 2968,
											"name": "SWAP2"
										},
										{
											"begin": 2825,
											"end": 2968,
											"name": "POP"
										},
										{
											"begin": 2825,
											"end": 2968,
											"name": "POP"
										},
										{
											"begin": 2825,
											"end": 2968,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"_transfer(address,uint256)": "4847a79c",
							"addBlackList(address)": "0ecb93c0",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"decimals()": "313ce567",
							"deprecate(address)": "0753c30c",
							"deprecated()": "0e136b19",
							"destroyBlackFunds(address)": "f3bdc228",
							"getBlackListStatus(address)": "59bf1abe",
							"getOwner()": "893d20e8",
							"isBlackListed(address)": "e47d6060",
							"issue(uint256)": "cc872b66",
							"maximumFee()": "35390714",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"redeem(uint256)": "db006a75",
							"removeBlackList(address)": "e4997dc5",
							"setParams(uint256,uint256)": "c0324c77",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"upgradedAddress()": "26976e3f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"_transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"_transfer(address,uint256)\":{\"details\":\"transfer token for a specified address\",\"params\":{\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}}},\"userdoc\":{\"methods\":{\"getBlackListStatus(address)\":{\"notice\":\"//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/DiverseTetherToken.sol\":\"DiverseTetherToken\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BasicToken.sol\":{\"keccak256\":\"0x88895cddaeb060e69a44bee71e4e518bbb8bcbc959aaa28185e3caa883c16cc8\",\"urls\":[\"bzzr://276605cb1a76de0c9c8d528e9a56005c64fb89b8eea55aa7a1db7bd35da3818d\"]},\"contracts/Blacklist.sol\":{\"keccak256\":\"0x3ab486dedb5258d5583efc6e5f28e06529aef8b19aa87f33e6914c4a56bbbdbe\",\"urls\":[\"bzzr://8a8f803851561dc25fccf7651601e0fdccef6eb2efd30f9235491c5e6837cdea\"]},\"contracts/DiverseTetherToken.sol\":{\"keccak256\":\"0x7664f8ccf8812d7110372217b349f57b51cdad9a5e8e33d5ff3a3ee302b4d99e\",\"urls\":[\"bzzr://e6adcc27c3e541dcd99424c887b68b7ea0ecf7a3a5eb6e95866e56f8eef1fa68\"]},\"contracts/ERC20.sol\":{\"keccak256\":\"0x16910dc42c30d5797ccb5b273912cbaab03040f9a8407e482eaf63ecfd69c947\",\"urls\":[\"bzzr://017b64a28aff668f70a50ed0e374b1d5c9d8af28bdbb589c576baf000a8345a6\"]},\"contracts/ERC20Basic.sol\":{\"keccak256\":\"0x226edc185910f3e694d995393ae9110b541a73d0e8a52a338a61194559f83d9b\",\"urls\":[\"bzzr://165d063320ed122782ad71f517a8642c5afc6c0048418225abd983382068f1b2\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xd8ff01a131dd831a1928520837f7746f3413cc988cbcc9d417dfa25d5a49b845\",\"urls\":[\"bzzr://ebe1a444b59337e6095a07de0059fa74a9f77c6ce74162d132640fcc95961a21\"]},\"contracts/Pausable.sol\":{\"keccak256\":\"0x65bddf7b56a18baa300d9b47c834e63f5a93cbfa512b4350018eb70ed21b04c9\",\"urls\":[\"bzzr://b7c533c5f29443c7ac2add40a51fb82d623bb7f19bde95c8a13f8518326cc190\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0xbf8b5c77e4288c9d77aa5d186ccb9ebce8d66aee043166416a743e88ac605cf5\",\"urls\":[\"bzzr://56a16e47ba4f5bdc8e02d8966b571f7e5055ebcabadaee9876948229d610fb62\"]},\"contracts/StandardToken.sol\":{\"keccak256\":\"0x22dc3a71dc0fc87aef89af4b5138f6e663e5097affc8facc0361a89916c8803b\",\"urls\":[\"bzzr://229967701889ffd1036124883671205ecca6cea9a94c74861351784f9c2e7922\"]},\"contracts/UpgradedStandardToken.sol\":{\"keccak256\":\"0x81a5889148ddb39e91013205601e4feda4789773e08cb585e0b136fa5b62e98c\",\"urls\":[\"bzzr://7cc58e92cdfa0f22ebc02133d5be86e8ebb0a2a758edb8d15ccb409cd58a94e4\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"getBlackListStatus(address)": {
								"notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////"
							}
						}
					}
				}
			},
			"contracts/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "ERC20 interface"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/ERC20Basic.sol": {
				"ERC20Basic": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "ERC20Basic"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						},
						"title": "Ownable"
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":248:971  contract Ownable {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/Ownable.sol\":425:486  function Ownable() public {... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n    /* \"contracts/Ownable.sol\":469:479  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":461:466  owner */\n  0x0\n  dup1\n    /* \"contracts/Ownable.sol\":461:479  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":248:971  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":248:971  contract Ownable {... */\n      mstore(0x40, 0x60)\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x8da5cb5b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_3\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"contracts/Ownable.sol\":271:291  address public owner */\n    tag_2:\n      jumpi(tag_4, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_4:\n      tag_5\n      jump(tag_6)\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":821:968  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_3:\n      jumpi(tag_7, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_7:\n      tag_8\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"contracts/Ownable.sol\":271:291  address public owner */\n    tag_6:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Ownable.sol\":821:968  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_9:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_11\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_11:\n        /* \"contracts/Ownable.sol\":917:918  0 */\n      0x0\n        /* \"contracts/Ownable.sol\":897:919  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":897:905  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":897:919  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Ownable.sol\":893:962  if (newOwner != address(0)) {... */\n      iszero\n      tag_13\n      jumpi\n        /* \"contracts/Ownable.sol\":943:951  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":935:940  owner */\n      0x0\n      dup1\n        /* \"contracts/Ownable.sol\":935:951  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":893:962  if (newOwner != address(0)) {... */\n    tag_13:\n        /* \"contracts/Ownable.sol\":821:968  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820cfafcef0df4a67b015f2fd789613b8f0cf5fedad6852b92ed7a3ca9108027f930029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6060604052341561000f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101fc8061005e6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610048578063f2fde38b1461009d57600080fd5b341561005357600080fd5b61005b6100d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100a857600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506100fb565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156101cd57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a72305820cfafcef0df4a67b015f2fd789613b8f0cf5fedad6852b92ed7a3ca9108027f930029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1FC DUP1 PUSH2 0x5E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xFB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xcf 0xaf 0xce CREATE 0xdf 0x4a PUSH8 0xB015F2FD789613B8 CREATE 0xcf 0x5f 0xed 0xad PUSH9 0x52B92ED7A3CA910802 PUSH32 0x9300290000000000000000000000000000000000000000000000000000000000 ",
							"sourceMap": "248:723:5:-;;;425:61;;;;;;;;469:10;461:5;;:18;;;;;;;;;;;;;;;;;;248:723;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610048578063f2fde38b1461009d57600080fd5b341561005357600080fd5b61005b6100d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100a857600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506100fb565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156101cd57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a72305820cfafcef0df4a67b015f2fd789613b8f0cf5fedad6852b92ed7a3ca9108027f930029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xFB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xcf 0xaf 0xce CREATE 0xdf 0x4a PUSH8 0xB015F2FD789613B8 CREATE 0xcf 0x5f 0xed 0xad PUSH9 0x52B92ED7A3CA910802 PUSH32 0x9300290000000000000000000000000000000000000000000000000000000000 ",
							"sourceMap": "248:723:5:-;;;;;;;;;;;;;;;;;;;;;;;271:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;821:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;271:20;;;;;;;;;;;;;:::o;821:147::-;629:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;917:1;897:22;;:8;:22;;;;893:69;;;943:8;935:5;;:16;;;;;;;;;;;;;;;;;;893:69;821:147;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "101600",
								"executionCost": "20408",
								"totalCost": "122008"
							},
							"external": {
								"owner()": "413",
								"transferOwnership(address)": "20755"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 248,
									"end": 971,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 248,
									"end": 971,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 248,
									"end": 971,
									"name": "MSTORE"
								},
								{
									"begin": 425,
									"end": 486,
									"name": "CALLVALUE"
								},
								{
									"begin": 425,
									"end": 486,
									"name": "ISZERO"
								},
								{
									"begin": 425,
									"end": 486,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 425,
									"end": 486,
									"name": "JUMPI"
								},
								{
									"begin": 425,
									"end": 486,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 425,
									"end": 486,
									"name": "DUP1"
								},
								{
									"begin": 425,
									"end": 486,
									"name": "REVERT"
								},
								{
									"begin": 425,
									"end": 486,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 425,
									"end": 486,
									"name": "JUMPDEST"
								},
								{
									"begin": 469,
									"end": 479,
									"name": "CALLER"
								},
								{
									"begin": 461,
									"end": 466,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 461,
									"end": 466,
									"name": "DUP1"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "EXP"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "DUP2"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SLOAD"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "DUP2"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "MUL"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "NOT"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "AND"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SWAP1"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "DUP4"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "AND"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "MUL"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "OR"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SWAP1"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SSTORE"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "POP"
								},
								{
									"begin": 248,
									"end": 971,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 248,
									"end": 971,
									"name": "DUP1"
								},
								{
									"begin": 248,
									"end": 971,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 248,
									"end": 971,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 248,
									"end": 971,
									"name": "CODECOPY"
								},
								{
									"begin": 248,
									"end": 971,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 248,
									"end": 971,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820cfafcef0df4a67b015f2fd789613b8f0cf5fedad6852b92ed7a3ca9108027f930029",
									".code": [
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "MSTORE"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "SWAP1"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "DIV"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "AND"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "DUP1"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "EQ"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "JUMPI"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "DUP1"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "EQ"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "JUMPI"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "DUP1"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "REVERT"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "CALLVALUE"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "ISZERO"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPI"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "REVERT"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP3"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MSTORE"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "ADD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SUB"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "RETURN"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "CALLVALUE"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "ISZERO"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPI"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "REVERT"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "AND"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "ADD"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP2"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "STOP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SLOAD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "EXP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DIV"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 917,
											"end": 918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "AND"
										},
										{
											"begin": 897,
											"end": 905,
											"name": "DUP2"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "AND"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "EQ"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "ISZERO"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "ISZERO"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "JUMPI"
										},
										{
											"begin": 943,
											"end": 951,
											"name": "DUP1"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "EXP"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SLOAD"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "MUL"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "NOT"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "AND"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "DUP4"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "AND"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "MUL"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "OR"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SSTORE"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "POP"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Ownable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xd8ff01a131dd831a1928520837f7746f3413cc988cbcc9d417dfa25d5a49b845\",\"urls\":[\"bzzr://ebe1a444b59337e6095a07de0059fa74a9f77c6ce74162d132640fcc95961a21\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state"
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state"
							}
						},
						"title": "Pausable"
					},
					"evm": {
						"assembly": "    /* \"contracts/Pausable.sol\":196:941  contract Pausable is Ownable {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/Pausable.sol\":287:292  false */\n  0x0\n    /* \"contracts/Pausable.sol\":266:292  bool public paused = false */\n  dup1\n  exp(0x100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":469:479  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":461:466  owner */\n  0x0\n  dup1\n    /* \"contracts/Ownable.sol\":461:479  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Pausable.sol\":196:941  contract Pausable is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Pausable.sol\":196:941  contract Pausable is Ownable {... */\n      mstore(0x40, 0x60)\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x3f4ba83a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"contracts/Pausable.sol\":852:939  function unpause() onlyOwner whenPaused public {... */\n    tag_2:\n      jumpi(tag_7, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_7:\n      tag_8\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"contracts/Pausable.sol\":266:292  bool public paused = false */\n    tag_3:\n      jumpi(tag_10, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_10:\n      tag_11\n      jump(tag_12)\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pausable.sol\":685:770  function pause() onlyOwner whenNotPaused public {... */\n    tag_4:\n      jumpi(tag_13, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_13:\n      tag_14\n      jump(tag_15)\n    tag_14:\n      stop\n        /* \"contracts/Ownable.sol\":271:291  address public owner */\n    tag_5:\n      jumpi(tag_16, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_16:\n      tag_17\n      jump(tag_18)\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":821:968  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_6:\n      jumpi(tag_19, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_19:\n      tag_20\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_21)\n    tag_20:\n      stop\n        /* \"contracts/Pausable.sol\":852:939  function unpause() onlyOwner whenPaused public {... */\n    tag_9:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_23\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_23:\n        /* \"contracts/Pausable.sol\":587:593  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":579:594  require(paused) */\n      iszero\n      iszero\n      tag_25\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_25:\n        /* \"contracts/Pausable.sol\":914:919  false */\n      0x0\n        /* \"contracts/Pausable.sol\":905:911  paused */\n      dup1\n      0x14\n        /* \"contracts/Pausable.sol\":905:919  paused = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pausable.sol\":925:934  Unpause() */\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Pausable.sol\":852:939  function unpause() onlyOwner whenPaused public {... */\n      jump\t// out\n        /* \"contracts/Pausable.sol\":266:292  bool public paused = false */\n    tag_12:\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Pausable.sol\":685:770  function pause() onlyOwner whenNotPaused public {... */\n    tag_15:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_28\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_28:\n        /* \"contracts/Pausable.sol\":435:441  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":434:441  !paused */\n      iszero\n        /* \"contracts/Pausable.sol\":426:442  require(!paused) */\n      iszero\n      iszero\n      tag_30\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_30:\n        /* \"contracts/Pausable.sol\":748:752  true */\n      0x1\n        /* \"contracts/Pausable.sol\":739:745  paused */\n      0x0\n      0x14\n        /* \"contracts/Pausable.sol\":739:752  paused = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pausable.sol\":758:765  Pause() */\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Pausable.sol\":685:770  function pause() onlyOwner whenNotPaused public {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":271:291  address public owner */\n    tag_18:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Ownable.sol\":821:968  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_21:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_33\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_33:\n        /* \"contracts/Ownable.sol\":917:918  0 */\n      0x0\n        /* \"contracts/Ownable.sol\":897:919  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":897:905  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":897:919  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Ownable.sol\":893:962  if (newOwner != address(0)) {... */\n      iszero\n      tag_35\n      jumpi\n        /* \"contracts/Ownable.sol\":943:951  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":935:940  owner */\n      0x0\n      dup1\n        /* \"contracts/Ownable.sol\":935:951  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":893:962  if (newOwner != address(0)) {... */\n    tag_35:\n        /* \"contracts/Ownable.sol\":821:968  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820c6671fc6101a33d350474494c60d58d6ab8c7280ff1c12a0a8635a3a12d8ba970029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "606060405260008060146101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104058061006d6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633f4ba83a146100695780635c975abb1461007e5780638456cb59146100ab5780638da5cb5b146100c0578063f2fde38b1461011557600080fd5b341561007457600080fd5b61007c61014e565b005b341561008957600080fd5b61009161020c565b604051808215151515815260200191505060405180910390f35b34156100b657600080fd5b6100be61021f565b005b34156100cb57600080fd5b6100d36102df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561012057600080fd5b61014c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610304565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101a957600080fd5b600060149054906101000a900460ff1615156101c457600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561027a57600080fd5b600060149054906101000a900460ff1615151561029657600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561035f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156103d657806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a72305820c6671fc6101a33d350474494c60d58d6ab8c7280ff1c12a0a8635a3a12d8ba970029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x405 DUP1 PUSH2 0x6D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x69 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C PUSH2 0x14E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x21F JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x304 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3D6 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc6 PUSH8 0x1FC6101A33D35047 DIFFICULTY SWAP5 0xc6 0xd PC 0xd6 0xab DUP13 PUSH19 0x80FF1C12A0A8635A3A12D8BA97002900000000 ",
							"sourceMap": "196:745:6:-;;;287:5;266:26;;;;;;;;;;;;;;;;;;;;469:10:5;461:5;;:18;;;;;;;;;;;;;;;;;;196:745:6;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633f4ba83a146100695780635c975abb1461007e5780638456cb59146100ab5780638da5cb5b146100c0578063f2fde38b1461011557600080fd5b341561007457600080fd5b61007c61014e565b005b341561008957600080fd5b61009161020c565b604051808215151515815260200191505060405180910390f35b34156100b657600080fd5b6100be61021f565b005b34156100cb57600080fd5b6100d36102df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561012057600080fd5b61014c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610304565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101a957600080fd5b600060149054906101000a900460ff1615156101c457600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561027a57600080fd5b600060149054906101000a900460ff1615151561029657600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561035f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156103d657806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a72305820c6671fc6101a33d350474494c60d58d6ab8c7280ff1c12a0a8635a3a12d8ba970029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x69 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C PUSH2 0x14E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x21F JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x304 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3D6 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc6 PUSH8 0x1FC6101A33D35047 DIFFICULTY SWAP5 0xc6 0xd PC 0xd6 0xab DUP13 PUSH19 0x80FF1C12A0A8635A3A12D8BA97002900000000 ",
							"sourceMap": "196:745:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;852:87;;;;;;;;;;;;;;266:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:85;;;;;;;;;;;;;;271:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;821:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;852:87:6;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;587:6:6;;;;;;;;;;;579:15;;;;;;;;914:5;905:6;;:14;;;;;;;;;;;;;;;;;;925:9;;;;;;;;;;852:87::o;266:26::-;;;;;;;;;;;;;:::o;685:85::-;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;435:6:6;;;;;;;;;;;434:7;426:16;;;;;;;;748:4;739:6;;:13;;;;;;;;;;;;;;;;;;758:7;;;;;;;;;;685:85::o;271:20:5:-;;;;;;;;;;;;;:::o;821:147::-;629:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;917:1;897:22;;:8;:22;;;;893:69;;;943:8;935:5;;:16;;;;;;;;;;;;;;;;;;893:69;821:147;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "205800",
								"executionCost": "40810",
								"totalCost": "246610"
							},
							"external": {
								"owner()": "479",
								"pause()": "21833",
								"paused()": "485",
								"transferOwnership(address)": "20821",
								"unpause()": "21786"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 196,
									"end": 941,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 196,
									"end": 941,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 196,
									"end": 941,
									"name": "MSTORE"
								},
								{
									"begin": 287,
									"end": 292,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "DUP1"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "EXP"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "DUP2"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "SLOAD"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "DUP2"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "MUL"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "NOT"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "AND"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "SWAP1"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "DUP4"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "ISZERO"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "ISZERO"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "MUL"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "OR"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "SWAP1"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "SSTORE"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "POP"
								},
								{
									"begin": 469,
									"end": 479,
									"name": "CALLER"
								},
								{
									"begin": 461,
									"end": 466,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 461,
									"end": 466,
									"name": "DUP1"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "EXP"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "DUP2"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SLOAD"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "DUP2"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "MUL"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "NOT"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "AND"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SWAP1"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "DUP4"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "AND"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "MUL"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "OR"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SWAP1"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SSTORE"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "POP"
								},
								{
									"begin": 196,
									"end": 941,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 196,
									"end": 941,
									"name": "DUP1"
								},
								{
									"begin": 196,
									"end": 941,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 196,
									"end": 941,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 196,
									"end": 941,
									"name": "CODECOPY"
								},
								{
									"begin": 196,
									"end": 941,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 196,
									"end": 941,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820c6671fc6101a33d350474494c60d58d6ab8c7280ff1c12a0a8635a3a12d8ba970029",
									".code": [
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "MSTORE"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "DIV"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "AND"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "3F4BA83A"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "EQ"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "JUMPI"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "5C975ABB"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "EQ"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "JUMPI"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "8456CB59"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "EQ"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "JUMPI"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "EQ"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "JUMPI"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "EQ"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "JUMPI"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "REVERT"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "CALLVALUE"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "ISZERO"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPI"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "DUP1"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "REVERT"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMP"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "STOP"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "CALLVALUE"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPI"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "REVERT"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMP"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "RETURN"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "CALLVALUE"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "ISZERO"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPI"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "DUP1"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "REVERT"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMP"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "STOP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "CALLVALUE"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "ISZERO"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPI"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "REVERT"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP3"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MSTORE"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "ADD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SUB"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "RETURN"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "CALLVALUE"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "ISZERO"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPI"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "REVERT"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "AND"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "ADD"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP2"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "STOP"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "SLOAD"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "EXP"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "DIV"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "AND"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "ISZERO"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "ISZERO"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "JUMPI"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "REVERT"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "JUMPDEST"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 905,
											"end": 911,
											"name": "DUP1"
										},
										{
											"begin": 905,
											"end": 911,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "EXP"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "DUP2"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "SLOAD"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "DUP2"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "MUL"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "NOT"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "AND"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "DUP4"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "ISZERO"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "ISZERO"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "MUL"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "OR"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "SSTORE"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "POP"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "PUSH",
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "MLOAD"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "MLOAD"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "DUP1"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "SWAP2"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "SUB"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "SWAP1"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "LOG1"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SLOAD"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "EXP"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DIV"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "AND"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SLOAD"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "EXP"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "DIV"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "AND"
										},
										{
											"begin": 434,
											"end": 441,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "JUMPI"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP1"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "REVERT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "JUMPDEST"
										},
										{
											"begin": 748,
											"end": 752,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 739,
											"end": 745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 739,
											"end": 745,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "EXP"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "DUP2"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "SLOAD"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "DUP2"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "MUL"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "NOT"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "AND"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "SWAP1"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "DUP4"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "ISZERO"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "ISZERO"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "MUL"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "OR"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "SWAP1"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "SSTORE"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "POP"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "PUSH",
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "MLOAD"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "MLOAD"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "DUP1"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "SWAP2"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "SUB"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "SWAP1"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "LOG1"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SLOAD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "EXP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DIV"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 917,
											"end": 918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "AND"
										},
										{
											"begin": 897,
											"end": 905,
											"name": "DUP2"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "AND"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "EQ"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "ISZERO"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "ISZERO"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "JUMPI"
										},
										{
											"begin": 943,
											"end": 951,
											"name": "DUP1"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "EXP"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SLOAD"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "MUL"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "NOT"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "AND"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "DUP4"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "AND"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "MUL"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "OR"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SSTORE"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "POP"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Pausable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Pausable.sol\":\"Pausable\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xd8ff01a131dd831a1928520837f7746f3413cc988cbcc9d417dfa25d5a49b845\",\"urls\":[\"bzzr://ebe1a444b59337e6095a07de0059fa74a9f77c6ce74162d132640fcc95961a21\"]},\"contracts/Pausable.sol\":{\"keccak256\":\"0x65bddf7b56a18baa300d9b47c834e63f5a93cbfa512b4350018eb70ed21b04c9\",\"urls\":[\"bzzr://b7c533c5f29443c7ac2add40a51fb82d623bb7f19bde95c8a13f8518326cc190\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "SafeMath"
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeMath.sol\":148:938  library SafeMath {... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeMath.sol\":148:938  library SafeMath {... */\n      mstore(0x40, 0x60)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a7230582060773a2049b6023c04ffa6a604501ad97450b24804458b0b1899c69f998106e50029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a7230582060773a2049b6023c04ffa6a604501ad97450b24804458b0b1899c69f998106e50029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x1B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH1 0x77 GASPRICE KECCAK256 0x49 0xb6 MUL EXTCODECOPY DIV SELFDESTRUCT 0xa6 0xa6 DIV POP BYTE 0xd9 PUSH21 0x50B24804458B0B1899C69F998106E5002900000000 ",
							"sourceMap": "148:790:7:-;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052600080fd00a165627a7a7230582060773a2049b6023c04ffa6a604501ad97450b24804458b0b1899c69f998106e50029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH1 0x77 GASPRICE KECCAK256 0x49 0xb6 MUL EXTCODECOPY DIV SELFDESTRUCT 0xa6 0xa6 DIV POP BYTE 0xd9 PUSH21 0x50B24804458B0B1899C69F998106E5002900000000 ",
							"sourceMap": "148:790:7:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "61",
								"totalCost": "10661"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 148,
									"end": 938,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "MSTORE"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "CALLVALUE"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "ISZERO"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "JUMPI"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "DUP1"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "REVERT"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "JUMPDEST"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "DUP1"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "CODECOPY"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582060773a2049b6023c04ffa6a604501ad97450b24804458b0b1899c69f998106e50029",
									".code": [
										{
											"begin": 148,
											"end": 938,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 148,
											"end": 938,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 148,
											"end": 938,
											"name": "MSTORE"
										},
										{
											"begin": 148,
											"end": 938,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 148,
											"end": 938,
											"name": "DUP1"
										},
										{
											"begin": 148,
											"end": 938,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/SafeMath.sol\":\"SafeMath\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeMath.sol\":{\"keccak256\":\"0xbf8b5c77e4288c9d77aa5d186ccb9ebce8d66aee043166416a743e88ac605cf5\",\"urls\":[\"bzzr://56a16e47ba4f5bdc8e02d8966b571f7e5055ebcabadaee9876948229d610fb62\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/StandardToken.sol": {
				"StandardToken": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "_transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"_transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens than an owner allowed to a spender.",
								"params": {
									"_owner": "address The address which owns the funds.",
									"_spender": "address The address which will spend the funds."
								},
								"return": "A uint specifying the amount of tokens still available for the spender."
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.",
								"params": {
									"_spender": "The address which will spend the funds.",
									"_value": "The amount of tokens to be spent."
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint representing the amount owned by the passed address."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another",
								"params": {
									"_from": "address The address which you want to send tokens from",
									"_to": "address The address which you want to transfer to",
									"_value": "uint the amount of tokens to be transferred"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						},
						"title": "Standard ERC20 token"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"_transfer(address,uint256)": "4847a79c",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/UpgradedStandardToken.sol": {
				"UpgradedStandardToken": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "_transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferByLegacy",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"_transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens than an owner allowed to a spender.",
								"params": {
									"_owner": "address The address which owns the funds.",
									"_spender": "address The address which will spend the funds."
								},
								"return": "A uint specifying the amount of tokens still available for the spender."
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.",
								"params": {
									"_spender": "The address which will spend the funds.",
									"_value": "The amount of tokens to be spent."
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint representing the amount owned by the passed address."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another",
								"params": {
									"_from": "address The address which you want to send tokens from",
									"_to": "address The address which you want to transfer to",
									"_value": "uint the amount of tokens to be transferred"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"_transfer(address,uint256)": "4847a79c",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"approveByLegacy(address,address,uint256)": "aee92d33",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferByLegacy(address,address,uint256)": "6e18980a",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromByLegacy(address,address,address,uint256)": "8b477adb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/BasicToken.sol": {
				"ast": {
					"absolutePath": "contracts/BasicToken.sol",
					"exportedSymbols": {
						"BasicToken": [
							150
						]
					},
					"id": 151,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 151,
							"sourceUnit": 786,
							"src": "58:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ERC20Basic.sol",
							"file": "./ERC20Basic.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 151,
							"sourceUnit": 742,
							"src": "82:26:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 151,
							"sourceUnit": 944,
							"src": "109:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 5,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 785,
										"src": "248:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$785",
											"typeString": "contract Ownable"
										}
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "248:7:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 7,
										"name": "ERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 741,
										"src": "257:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$741",
											"typeString": "contract ERC20Basic"
										}
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "257:10:0"
								}
							],
							"contractDependencies": [
								741,
								785
							],
							"contractKind": "contract",
							"documentation": "@title Basic token\n@dev Basic version of StandardToken, with no allowances.",
							"fullyImplemented": false,
							"id": 150,
							"linearizedBaseContracts": [
								150,
								741,
								785
							],
							"name": "BasicToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 11,
									"libraryName": {
										"contractScope": null,
										"id": 9,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 943,
										"src": "280:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$943",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "274:24:0",
									"typeName": {
										"id": 10,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "293:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 15,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "304:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "312:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "304:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 13,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "323:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 18,
									"name": "basisPointsRate",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "429:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 16,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "429:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 17,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "459:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 21,
									"name": "maximumFee",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "466:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 19,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "466:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 20,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "491:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "601:66:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "619:29:0",
															"subExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 32,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 26,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1186,
																					"src": "621:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 27,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "data",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "621:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_calldata_ptr",
																					"typeString": "bytes calldata"
																				}
																			},
																			"id": 28,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "621:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 31,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 29,
																				"name": "size",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 23,
																				"src": "639:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "34",
																				"id": 30,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "646:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "639:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "621:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 33,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "620:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "611:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "611:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "611:38:0"
											},
											{
												"id": 37,
												"nodeType": "PlaceholderStatement",
												"src": "659:1:0"
											}
										]
									},
									"id": 39,
									"name": "onlyPayloadSize",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"name": "size",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "590:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "590:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "589:11:0"
									},
									"src": "565:102:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "923:506:0",
										"statements": [
											{
												"assignments": [
													54
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "933:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 53,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "933:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "978:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 57,
																			"name": "basisPointsRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 18,
																			"src": "956:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 55,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 43,
																			"src": "945:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 56,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 880,
																		"src": "945:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "945:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 59,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "944:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 898,
														"src": "944:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "944:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "933:51:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 64,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "998:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 65,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1004:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "998:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 72,
												"nodeType": "IfStatement",
												"src": "994:63:0",
												"trueBody": {
													"id": 71,
													"nodeType": "Block",
													"src": "1016:41:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 67,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "1030:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 68,
																	"name": "maximumFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "1036:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1030:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 70,
															"nodeType": "ExpressionStatement",
															"src": "1030:16:0"
														}
													]
												}
											},
											{
												"assignments": [
													74
												],
												"declarations": [
													{
														"constant": false,
														"id": 74,
														"name": "sendAmount",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "1066:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 73,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1066:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 79,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 77,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "1095:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 75,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "1084:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 918,
														"src": "1084:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1084:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1066:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 80,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1109:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 83,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 81,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "1118:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1118:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1109:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 89,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "1157:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 84,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "1132:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 87,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 85,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1186,
																		"src": "1141:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1141:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1132:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 918,
															"src": "1132:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1132:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1109:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "1109:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 93,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1174:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 95,
														"indexExpression": {
															"argumentTypes": null,
															"id": 94,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1183:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1174:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 100,
																"name": "sendAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "1208:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 96,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "1190:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 98,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 97,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "1199:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1190:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 942,
															"src": "1190:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1190:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1174:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "1174:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 104,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1233:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1239:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 126,
												"nodeType": "IfStatement",
												"src": "1229:126:0",
												"trueBody": {
													"id": 125,
													"nodeType": "Block",
													"src": "1242:113:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 107,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "1256:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 109,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 108,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "1265:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1256:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 114,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 54,
																			"src": "1294:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 110,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 15,
																				"src": "1274:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 112,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 111,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 745,
																				"src": "1283:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1274:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 942,
																		"src": "1274:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1274:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1256:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 117,
															"nodeType": "ExpressionStatement",
															"src": "1256:42:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 119,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1186,
																			"src": "1321:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1321:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 121,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "1333:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 122,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "1340:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 118,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "1312:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1312:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 124,
															"nodeType": "ExpressionStatement",
															"src": "1312:32:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 128,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "1373:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1373:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 130,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1385:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 131,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "1390:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 127,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "1364:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1364:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "1364:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1418:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 52,
												"id": 135,
												"nodeType": "Return",
												"src": "1411:11:0"
											}
										]
									},
									"id": 137,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "901:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "905:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "901:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 49,
											"modifierName": {
												"argumentTypes": null,
												"id": 45,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "885:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "885:23:0"
										}
									],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "852:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "865:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "865:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "851:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "917:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 50,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "917:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "916:6:0"
									},
									"scope": 150,
									"src": "833:596:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "1714:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 144,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1731:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 146,
													"indexExpression": {
														"argumentTypes": null,
														"id": 145,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "1740:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1731:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 143,
												"id": 147,
												"nodeType": "Return",
												"src": "1724:23:0"
											}
										]
									},
									"id": 149,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1659:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1658:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1700:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1700:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1699:14:0"
									},
									"scope": 150,
									"src": "1640:114:0",
									"stateMutability": "view",
									"superFunction": 723,
									"visibility": "public"
								}
							],
							"scope": 151,
							"src": "225:1532:0"
						}
					],
					"src": "32:1726:0"
				},
				"id": 0,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/BasicToken.sol",
						"exportedSymbols": {
							"BasicToken": [
								150
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 1,
							"name": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"attributes": {
								"SourceUnit": 786,
								"absolutePath": "contracts/Ownable.sol",
								"file": "./Ownable.sol",
								"scope": 151,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 2,
							"name": "ImportDirective",
							"src": "58:23:0"
						},
						{
							"attributes": {
								"SourceUnit": 742,
								"absolutePath": "contracts/ERC20Basic.sol",
								"file": "./ERC20Basic.sol",
								"scope": 151,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 3,
							"name": "ImportDirective",
							"src": "82:26:0"
						},
						{
							"attributes": {
								"SourceUnit": 944,
								"absolutePath": "contracts/SafeMath.sol",
								"file": "./SafeMath.sol",
								"scope": 151,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 4,
							"name": "ImportDirective",
							"src": "109:24:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									741,
									785
								],
								"contractKind": "contract",
								"documentation": "@title Basic token\n@dev Basic version of StandardToken, with no allowances.",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									150,
									741,
									785
								],
								"name": "BasicToken",
								"scope": 151
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 785,
												"type": "contract Ownable"
											},
											"id": 5,
											"name": "UserDefinedTypeName",
											"src": "248:7:0"
										}
									],
									"id": 6,
									"name": "InheritanceSpecifier",
									"src": "248:7:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "ERC20Basic",
												"referencedDeclaration": 741,
												"type": "contract ERC20Basic"
											},
											"id": 7,
											"name": "UserDefinedTypeName",
											"src": "257:10:0"
										}
									],
									"id": 8,
									"name": "InheritanceSpecifier",
									"src": "257:10:0"
								},
								{
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "SafeMath",
												"referencedDeclaration": 943,
												"type": "library SafeMath"
											},
											"id": 9,
											"name": "UserDefinedTypeName",
											"src": "280:8:0"
										},
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 10,
											"name": "ElementaryTypeName",
											"src": "293:4:0"
										}
									],
									"id": 11,
									"name": "UsingForDirective",
									"src": "274:24:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "balances",
										"scope": 150,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => uint256)",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => uint256)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 12,
													"name": "ElementaryTypeName",
													"src": "312:7:0"
												},
												{
													"attributes": {
														"name": "uint",
														"type": "uint256"
													},
													"id": 13,
													"name": "ElementaryTypeName",
													"src": "323:4:0"
												}
											],
											"id": 14,
											"name": "Mapping",
											"src": "304:24:0"
										}
									],
									"id": 15,
									"name": "VariableDeclaration",
									"src": "304:40:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "basisPointsRate",
										"scope": 150,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 16,
											"name": "ElementaryTypeName",
											"src": "429:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "30",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "number",
												"type": "int_const 0",
												"value": "0"
											},
											"id": 17,
											"name": "Literal",
											"src": "459:1:0"
										}
									],
									"id": 18,
									"name": "VariableDeclaration",
									"src": "429:31:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "maximumFee",
										"scope": 150,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 19,
											"name": "ElementaryTypeName",
											"src": "466:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "30",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "number",
												"type": "int_const 0",
												"value": "0"
											},
											"id": 20,
											"name": "Literal",
											"src": "491:1:0"
										}
									],
									"id": 21,
									"name": "VariableDeclaration",
									"src": "466:26:0"
								},
								{
									"attributes": {
										"name": "onlyPayloadSize",
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "size",
														"scope": 39,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 22,
															"name": "ElementaryTypeName",
															"src": "590:4:0"
														}
													],
													"id": 23,
													"name": "VariableDeclaration",
													"src": "590:9:0"
												}
											],
											"id": 24,
											"name": "ParameterList",
											"src": "589:11:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1204,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 25,
																	"name": "Identifier",
																	"src": "611:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "<",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "length",
																								"referencedDeclaration": null,
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "data",
																										"referencedDeclaration": null,
																										"type": "bytes calldata"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 1186,
																												"type": "msg",
																												"value": "msg"
																											},
																											"id": 26,
																											"name": "Identifier",
																											"src": "621:3:0"
																										}
																									],
																									"id": 27,
																									"name": "MemberAccess",
																									"src": "621:8:0"
																								}
																							],
																							"id": 28,
																							"name": "MemberAccess",
																							"src": "621:15:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"operator": "+",
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 23,
																										"type": "uint256",
																										"value": "size"
																									},
																									"id": 29,
																									"name": "Identifier",
																									"src": "639:4:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"hexvalue": "34",
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"subdenomination": null,
																										"token": "number",
																										"type": "int_const 4",
																										"value": "4"
																									},
																									"id": 30,
																									"name": "Literal",
																									"src": "646:1:0"
																								}
																							],
																							"id": 31,
																							"name": "BinaryOperation",
																							"src": "639:8:0"
																						}
																					],
																					"id": 32,
																					"name": "BinaryOperation",
																					"src": "621:26:0"
																				}
																			],
																			"id": 33,
																			"name": "TupleExpression",
																			"src": "620:28:0"
																		}
																	],
																	"id": 34,
																	"name": "UnaryOperation",
																	"src": "619:29:0"
																}
															],
															"id": 35,
															"name": "FunctionCall",
															"src": "611:38:0"
														}
													],
													"id": 36,
													"name": "ExpressionStatement",
													"src": "611:38:0"
												},
												{
													"id": 37,
													"name": "PlaceholderStatement",
													"src": "659:1:0"
												}
											],
											"id": 38,
											"name": "Block",
											"src": "601:66:0"
										}
									],
									"id": 39,
									"name": "ModifierDefinition",
									"src": "565:102:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "_transfer",
										"payable": false,
										"scope": 150,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 137,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 40,
															"name": "ElementaryTypeName",
															"src": "852:7:0"
														}
													],
													"id": 41,
													"name": "VariableDeclaration",
													"src": "852:11:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 137,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 42,
															"name": "ElementaryTypeName",
															"src": "865:4:0"
														}
													],
													"id": 43,
													"name": "VariableDeclaration",
													"src": "865:11:0"
												}
											],
											"id": 44,
											"name": "ParameterList",
											"src": "851:26:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 137,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 50,
															"name": "ElementaryTypeName",
															"src": "917:4:0"
														}
													],
													"id": 51,
													"name": "VariableDeclaration",
													"src": "917:4:0"
												}
											],
											"id": 52,
											"name": "ParameterList",
											"src": "916:6:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 39,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 45,
													"name": "Identifier",
													"src": "885:15:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 64"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 46,
															"name": "Literal",
															"src": "901:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 47,
															"name": "Literal",
															"src": "905:2:0"
														}
													],
													"id": 48,
													"name": "BinaryOperation",
													"src": "901:6:0"
												}
											],
											"id": 49,
											"name": "ModifierInvocation",
											"src": "885:23:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															54
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "fee",
																"scope": 137,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 53,
																	"name": "ElementaryTypeName",
																	"src": "933:4:0"
																}
															],
															"id": 54,
															"name": "VariableDeclaration",
															"src": "933:8:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "div",
																		"referencedDeclaration": 898,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "mul",
																								"referencedDeclaration": 880,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 43,
																										"type": "uint256",
																										"value": "_value"
																									},
																									"id": 55,
																									"name": "Identifier",
																									"src": "945:6:0"
																								}
																							],
																							"id": 56,
																							"name": "MemberAccess",
																							"src": "945:10:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 18,
																								"type": "uint256",
																								"value": "basisPointsRate"
																							},
																							"id": 57,
																							"name": "Identifier",
																							"src": "956:15:0"
																						}
																					],
																					"id": 58,
																					"name": "FunctionCall",
																					"src": "945:27:0"
																				}
																			],
																			"id": 59,
																			"name": "TupleExpression",
																			"src": "944:29:0"
																		}
																	],
																	"id": 60,
																	"name": "MemberAccess",
																	"src": "944:33:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "3130303030",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 10000",
																		"value": "10000"
																	},
																	"id": 61,
																	"name": "Literal",
																	"src": "978:5:0"
																}
															],
															"id": 62,
															"name": "FunctionCall",
															"src": "944:40:0"
														}
													],
													"id": 63,
													"name": "VariableDeclarationStatement",
													"src": "933:51:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 54,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 64,
																	"name": "Identifier",
																	"src": "998:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 21,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 65,
																	"name": "Identifier",
																	"src": "1004:10:0"
																}
															],
															"id": 66,
															"name": "BinaryOperation",
															"src": "998:16:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 54,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 67,
																					"name": "Identifier",
																					"src": "1030:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 21,
																						"type": "uint256",
																						"value": "maximumFee"
																					},
																					"id": 68,
																					"name": "Identifier",
																					"src": "1036:10:0"
																				}
																			],
																			"id": 69,
																			"name": "Assignment",
																			"src": "1030:16:0"
																		}
																	],
																	"id": 70,
																	"name": "ExpressionStatement",
																	"src": "1030:16:0"
																}
															],
															"id": 71,
															"name": "Block",
															"src": "1016:41:0"
														}
													],
													"id": 72,
													"name": "IfStatement",
													"src": "994:63:0"
												},
												{
													"attributes": {
														"assignments": [
															74
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "sendAmount",
																"scope": 137,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 73,
																	"name": "ElementaryTypeName",
																	"src": "1066:4:0"
																}
															],
															"id": 74,
															"name": "VariableDeclaration",
															"src": "1066:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sub",
																		"referencedDeclaration": 918,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 43,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 75,
																			"name": "Identifier",
																			"src": "1084:6:0"
																		}
																	],
																	"id": 76,
																	"name": "MemberAccess",
																	"src": "1084:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 54,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 77,
																	"name": "Identifier",
																	"src": "1095:3:0"
																}
															],
															"id": 78,
															"name": "FunctionCall",
															"src": "1084:15:0"
														}
													],
													"id": 79,
													"name": "VariableDeclarationStatement",
													"src": "1066:33:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 15,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 80,
																			"name": "Identifier",
																			"src": "1109:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1186,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 81,
																					"name": "Identifier",
																					"src": "1118:3:0"
																				}
																			],
																			"id": 82,
																			"name": "MemberAccess",
																			"src": "1118:10:0"
																		}
																	],
																	"id": 83,
																	"name": "IndexAccess",
																	"src": "1109:20:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sub",
																				"referencedDeclaration": 918,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 15,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 84,
																							"name": "Identifier",
																							"src": "1132:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1186,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 85,
																									"name": "Identifier",
																									"src": "1141:3:0"
																								}
																							],
																							"id": 86,
																							"name": "MemberAccess",
																							"src": "1141:10:0"
																						}
																					],
																					"id": 87,
																					"name": "IndexAccess",
																					"src": "1132:20:0"
																				}
																			],
																			"id": 88,
																			"name": "MemberAccess",
																			"src": "1132:24:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 43,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 89,
																			"name": "Identifier",
																			"src": "1157:6:0"
																		}
																	],
																	"id": 90,
																	"name": "FunctionCall",
																	"src": "1132:32:0"
																}
															],
															"id": 91,
															"name": "Assignment",
															"src": "1109:55:0"
														}
													],
													"id": 92,
													"name": "ExpressionStatement",
													"src": "1109:55:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 15,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 93,
																			"name": "Identifier",
																			"src": "1174:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 41,
																				"type": "address",
																				"value": "_to"
																			},
																			"id": 94,
																			"name": "Identifier",
																			"src": "1183:3:0"
																		}
																	],
																	"id": 95,
																	"name": "IndexAccess",
																	"src": "1174:13:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "add",
																				"referencedDeclaration": 942,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 15,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 96,
																							"name": "Identifier",
																							"src": "1190:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 41,
																								"type": "address",
																								"value": "_to"
																							},
																							"id": 97,
																							"name": "Identifier",
																							"src": "1199:3:0"
																						}
																					],
																					"id": 98,
																					"name": "IndexAccess",
																					"src": "1190:13:0"
																				}
																			],
																			"id": 99,
																			"name": "MemberAccess",
																			"src": "1190:17:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 74,
																				"type": "uint256",
																				"value": "sendAmount"
																			},
																			"id": 100,
																			"name": "Identifier",
																			"src": "1208:10:0"
																		}
																	],
																	"id": 101,
																	"name": "FunctionCall",
																	"src": "1190:29:0"
																}
															],
															"id": 102,
															"name": "Assignment",
															"src": "1174:45:0"
														}
													],
													"id": 103,
													"name": "ExpressionStatement",
													"src": "1174:45:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 54,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 104,
																	"name": "Identifier",
																	"src": "1233:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 105,
																	"name": "Literal",
																	"src": "1239:1:0"
																}
															],
															"id": 106,
															"name": "BinaryOperation",
															"src": "1233:7:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 15,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 107,
																							"name": "Identifier",
																							"src": "1256:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 745,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 108,
																							"name": "Identifier",
																							"src": "1265:5:0"
																						}
																					],
																					"id": 109,
																					"name": "IndexAccess",
																					"src": "1256:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "add",
																								"referencedDeclaration": 942,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 15,
																												"type": "mapping(address => uint256)",
																												"value": "balances"
																											},
																											"id": 110,
																											"name": "Identifier",
																											"src": "1274:8:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 745,
																												"type": "address",
																												"value": "owner"
																											},
																											"id": 111,
																											"name": "Identifier",
																											"src": "1283:5:0"
																										}
																									],
																									"id": 112,
																									"name": "IndexAccess",
																									"src": "1274:15:0"
																								}
																							],
																							"id": 113,
																							"name": "MemberAccess",
																							"src": "1274:19:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 54,
																								"type": "uint256",
																								"value": "fee"
																							},
																							"id": 114,
																							"name": "Identifier",
																							"src": "1294:3:0"
																						}
																					],
																					"id": 115,
																					"name": "FunctionCall",
																					"src": "1274:24:0"
																				}
																			],
																			"id": 116,
																			"name": "Assignment",
																			"src": "1256:42:0"
																		}
																	],
																	"id": 117,
																	"name": "ExpressionStatement",
																	"src": "1256:42:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 740,
																						"type": "function (address,address,uint256)",
																						"value": "Transfer"
																					},
																					"id": 118,
																					"name": "Identifier",
																					"src": "1312:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1186,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 119,
																							"name": "Identifier",
																							"src": "1321:3:0"
																						}
																					],
																					"id": 120,
																					"name": "MemberAccess",
																					"src": "1321:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 745,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 121,
																					"name": "Identifier",
																					"src": "1333:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 54,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 122,
																					"name": "Identifier",
																					"src": "1340:3:0"
																				}
																			],
																			"id": 123,
																			"name": "FunctionCall",
																			"src": "1312:32:0"
																		}
																	],
																	"id": 124,
																	"name": "ExpressionStatement",
																	"src": "1312:32:0"
																}
															],
															"id": 125,
															"name": "Block",
															"src": "1242:113:0"
														}
													],
													"id": 126,
													"name": "IfStatement",
													"src": "1229:126:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 740,
																		"type": "function (address,address,uint256)",
																		"value": "Transfer"
																	},
																	"id": 127,
																	"name": "Identifier",
																	"src": "1364:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1186,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 128,
																			"name": "Identifier",
																			"src": "1373:3:0"
																		}
																	],
																	"id": 129,
																	"name": "MemberAccess",
																	"src": "1373:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 41,
																		"type": "address",
																		"value": "_to"
																	},
																	"id": 130,
																	"name": "Identifier",
																	"src": "1385:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 74,
																		"type": "uint256",
																		"value": "sendAmount"
																	},
																	"id": 131,
																	"name": "Identifier",
																	"src": "1390:10:0"
																}
															],
															"id": 132,
															"name": "FunctionCall",
															"src": "1364:37:0"
														}
													],
													"id": 133,
													"name": "ExpressionStatement",
													"src": "1364:37:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 52
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "74727565",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "bool",
																"type": "bool",
																"value": "true"
															},
															"id": 134,
															"name": "Literal",
															"src": "1418:4:0"
														}
													],
													"id": 135,
													"name": "Return",
													"src": "1411:11:0"
												}
											],
											"id": 136,
											"name": "Block",
											"src": "923:506:0"
										}
									],
									"id": 137,
									"name": "FunctionDefinition",
									"src": "833:596:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "balanceOf",
										"payable": false,
										"scope": 150,
										"stateMutability": "view",
										"superFunction": 723,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 149,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 138,
															"name": "ElementaryTypeName",
															"src": "1659:7:0"
														}
													],
													"id": 139,
													"name": "VariableDeclaration",
													"src": "1659:14:0"
												}
											],
											"id": 140,
											"name": "ParameterList",
											"src": "1658:16:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "balance",
														"scope": 149,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 141,
															"name": "ElementaryTypeName",
															"src": "1700:4:0"
														}
													],
													"id": 142,
													"name": "VariableDeclaration",
													"src": "1700:12:0"
												}
											],
											"id": 143,
											"name": "ParameterList",
											"src": "1699:14:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 143
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 15,
																		"type": "mapping(address => uint256)",
																		"value": "balances"
																	},
																	"id": 144,
																	"name": "Identifier",
																	"src": "1731:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 139,
																		"type": "address",
																		"value": "_owner"
																	},
																	"id": 145,
																	"name": "Identifier",
																	"src": "1740:6:0"
																}
															],
															"id": 146,
															"name": "IndexAccess",
															"src": "1731:16:0"
														}
													],
													"id": 147,
													"name": "Return",
													"src": "1724:23:0"
												}
											],
											"id": 148,
											"name": "Block",
											"src": "1714:40:0"
										}
									],
									"id": 149,
									"name": "FunctionDefinition",
									"src": "1640:114:0"
								}
							],
							"id": 150,
							"name": "ContractDefinition",
							"src": "225:1532:0"
						}
					],
					"id": 151,
					"name": "SourceUnit",
					"src": "32:1726:0"
				}
			},
			"contracts/Blacklist.sol": {
				"ast": {
					"absolutePath": "contracts/Blacklist.sol",
					"exportedSymbols": {
						"BlackList": [
							268
						]
					},
					"id": 269,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 152,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 153,
							"nodeType": "ImportDirective",
							"scope": 269,
							"sourceUnit": 786,
							"src": "58:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/BasicToken.sol",
							"file": "./BasicToken.sol",
							"id": 154,
							"nodeType": "ImportDirective",
							"scope": 269,
							"sourceUnit": 151,
							"src": "82:26:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 155,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 785,
										"src": "132:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$785",
											"typeString": "contract Ownable"
										}
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "132:7:1"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 157,
										"name": "BasicToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 150,
										"src": "141:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BasicToken_$150",
											"typeString": "contract BasicToken"
										}
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "141:10:1"
								}
							],
							"contractDependencies": [
								150,
								741,
								785
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 268,
							"linearizedBaseContracts": [
								268,
								150,
								741,
								785
							],
							"name": "BlackList",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "355:45:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 165,
														"name": "isBlackListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "372:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 167,
													"indexExpression": {
														"argumentTypes": null,
														"id": 166,
														"name": "_maker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "386:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "372:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 164,
												"id": 168,
												"nodeType": "Return",
												"src": "365:28:1"
											}
										]
									},
									"id": 170,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getBlackListStatus",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"name": "_maker",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "306:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "305:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "349:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "349:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "348:6:1"
									},
									"scope": 268,
									"src": "278:122:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "462:29:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 175,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 745,
													"src": "479:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 174,
												"id": 176,
												"nodeType": "Return",
												"src": "472:12:1"
											}
										]
									},
									"id": 178,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "453:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "452:9:1"
									},
									"scope": 268,
									"src": "406:85:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"constant": false,
									"id": 182,
									"name": "isBlackListed",
									"nodeType": "VariableDeclaration",
									"scope": 268,
									"src": "497:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 181,
										"keyType": {
											"id": 179,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "506:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "497:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 180,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "517:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "613:83:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 189,
															"name": "isBlackListed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "623:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 191,
														"indexExpression": {
															"argumentTypes": null,
															"id": 190,
															"name": "_evilUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "637:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "623:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "650:4:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "623:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "623:31:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 196,
															"name": "_evilUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "679:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 195,
														"name": "AddedBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "664:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "664:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "664:25:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 187,
											"modifierName": {
												"argumentTypes": null,
												"id": 186,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 765,
												"src": "603:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "603:9:1"
										}
									],
									"name": "addBlackList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"name": "_evilUser",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "577:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "576:19:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "613:0:1"
									},
									"scope": 268,
									"src": "554:142:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "767:92:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 207,
															"name": "isBlackListed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "777:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 209,
														"indexExpression": {
															"argumentTypes": null,
															"id": 208,
															"name": "_clearedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "791:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "777:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "807:5:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "777:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "777:35:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 214,
															"name": "_clearedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "839:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 213,
														"name": "RemovedBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "822:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "822:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "822:30:1"
											}
										]
									},
									"id": 218,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 205,
											"modifierName": {
												"argumentTypes": null,
												"id": 204,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 765,
												"src": "757:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "757:9:1"
										}
									],
									"name": "removeBlackList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"name": "_clearedUser",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "728:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:22:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "767:0:1"
									},
									"scope": 268,
									"src": "702:157:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "936:247:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 226,
																"name": "isBlackListed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "954:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 228,
															"indexExpression": {
																"argumentTypes": null,
																"id": 227,
																"name": "_blackListedUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "968:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "954:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "946:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "946:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "946:40:1"
											},
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"name": "dirtyFunds",
														"nodeType": "VariableDeclaration",
														"scope": 253,
														"src": "996:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 231,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "996:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 234,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "1024:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 233,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															149
														],
														"referencedDeclaration": 149,
														"src": "1014:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1014:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "996:45:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 237,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1051:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 239,
														"indexExpression": {
															"argumentTypes": null,
															"id": 238,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "1060:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1051:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1080:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1051:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "1051:30:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 243,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "1091:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 244,
														"name": "dirtyFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "1107:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1091:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "1091:26:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 248,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "1147:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 249,
															"name": "dirtyFunds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "1165:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 247,
														"name": "DestroyedBlackFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "1127:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1127:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "1127:49:1"
											}
										]
									},
									"id": 253,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 223,
											"modifierName": {
												"argumentTypes": null,
												"id": 222,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 765,
												"src": "926:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "926:9:1"
										}
									],
									"name": "destroyBlackFunds",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"name": "_blackListedUser",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "893:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "892:26:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "936:0:1"
									},
									"scope": 268,
									"src": "865:318:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 259,
									"name": "DestroyedBlackFunds",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"indexed": false,
												"name": "_blackListedUser",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1215:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"indexed": false,
												"name": "_balance",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1241:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1241:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1214:41:1"
									},
									"src": "1189:67:1"
								},
								{
									"anonymous": false,
									"id": 263,
									"name": "AddedBlackList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"indexed": false,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "1283:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1282:15:1"
									},
									"src": "1262:36:1"
								},
								{
									"anonymous": false,
									"id": 267,
									"name": "RemovedBlackList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"indexed": false,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1326:15:1"
									},
									"src": "1304:38:1"
								}
							],
							"scope": 269,
							"src": "110:1235:1"
						}
					],
					"src": "32:1314:1"
				},
				"id": 1,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/Blacklist.sol",
						"exportedSymbols": {
							"BlackList": [
								268
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 152,
							"name": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"attributes": {
								"SourceUnit": 786,
								"absolutePath": "contracts/Ownable.sol",
								"file": "./Ownable.sol",
								"scope": 269,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 153,
							"name": "ImportDirective",
							"src": "58:23:1"
						},
						{
							"attributes": {
								"SourceUnit": 151,
								"absolutePath": "contracts/BasicToken.sol",
								"file": "./BasicToken.sol",
								"scope": 269,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 154,
							"name": "ImportDirective",
							"src": "82:26:1"
						},
						{
							"attributes": {
								"contractDependencies": [
									150,
									741,
									785
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									268,
									150,
									741,
									785
								],
								"name": "BlackList",
								"scope": 269
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 785,
												"type": "contract Ownable"
											},
											"id": 155,
											"name": "UserDefinedTypeName",
											"src": "132:7:1"
										}
									],
									"id": 156,
									"name": "InheritanceSpecifier",
									"src": "132:7:1"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "BasicToken",
												"referencedDeclaration": 150,
												"type": "contract BasicToken"
											},
											"id": 157,
											"name": "UserDefinedTypeName",
											"src": "141:10:1"
										}
									],
									"id": 158,
									"name": "InheritanceSpecifier",
									"src": "141:10:1"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getBlackListStatus",
										"payable": false,
										"scope": 268,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "external"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_maker",
														"scope": 170,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 159,
															"name": "ElementaryTypeName",
															"src": "306:7:1"
														}
													],
													"id": 160,
													"name": "VariableDeclaration",
													"src": "306:14:1"
												}
											],
											"id": 161,
											"name": "ParameterList",
											"src": "305:16:1"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 170,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 162,
															"name": "ElementaryTypeName",
															"src": "349:4:1"
														}
													],
													"id": 163,
													"name": "VariableDeclaration",
													"src": "349:4:1"
												}
											],
											"id": 164,
											"name": "ParameterList",
											"src": "348:6:1"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 164
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 182,
																		"type": "mapping(address => bool)",
																		"value": "isBlackListed"
																	},
																	"id": 165,
																	"name": "Identifier",
																	"src": "372:13:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 160,
																		"type": "address",
																		"value": "_maker"
																	},
																	"id": 166,
																	"name": "Identifier",
																	"src": "386:6:1"
																}
															],
															"id": 167,
															"name": "IndexAccess",
															"src": "372:21:1"
														}
													],
													"id": 168,
													"name": "Return",
													"src": "365:28:1"
												}
											],
											"id": 169,
											"name": "Block",
											"src": "355:45:1"
										}
									],
									"id": 170,
									"name": "FunctionDefinition",
									"src": "278:122:1"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getOwner",
										"payable": false,
										"scope": 268,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "external"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 171,
											"name": "ParameterList",
											"src": "423:2:1"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 178,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 172,
															"name": "ElementaryTypeName",
															"src": "453:7:1"
														}
													],
													"id": 173,
													"name": "VariableDeclaration",
													"src": "453:7:1"
												}
											],
											"id": 174,
											"name": "ParameterList",
											"src": "452:9:1"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 174
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 745,
																"type": "address",
																"value": "owner"
															},
															"id": 175,
															"name": "Identifier",
															"src": "479:5:1"
														}
													],
													"id": 176,
													"name": "Return",
													"src": "472:12:1"
												}
											],
											"id": 177,
											"name": "Block",
											"src": "462:29:1"
										}
									],
									"id": 178,
									"name": "FunctionDefinition",
									"src": "406:85:1"
								},
								{
									"attributes": {
										"constant": false,
										"name": "isBlackListed",
										"scope": 268,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => bool)",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => bool)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 179,
													"name": "ElementaryTypeName",
													"src": "506:7:1"
												},
												{
													"attributes": {
														"name": "bool",
														"type": "bool"
													},
													"id": 180,
													"name": "ElementaryTypeName",
													"src": "517:4:1"
												}
											],
											"id": 181,
											"name": "Mapping",
											"src": "497:25:1"
										}
									],
									"id": 182,
									"name": "VariableDeclaration",
									"src": "497:46:1"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "addBlackList",
										"payable": false,
										"scope": 268,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_evilUser",
														"scope": 200,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 183,
															"name": "ElementaryTypeName",
															"src": "577:7:1"
														}
													],
													"id": 184,
													"name": "VariableDeclaration",
													"src": "577:17:1"
												}
											],
											"id": 185,
											"name": "ParameterList",
											"src": "576:19:1"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 188,
											"name": "ParameterList",
											"src": "613:0:1"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 765,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 186,
													"name": "Identifier",
													"src": "603:9:1"
												}
											],
											"id": 187,
											"name": "ModifierInvocation",
											"src": "603:9:1"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 182,
																				"type": "mapping(address => bool)",
																				"value": "isBlackListed"
																			},
																			"id": 189,
																			"name": "Identifier",
																			"src": "623:13:1"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 184,
																				"type": "address",
																				"value": "_evilUser"
																			},
																			"id": 190,
																			"name": "Identifier",
																			"src": "637:9:1"
																		}
																	],
																	"id": 191,
																	"name": "IndexAccess",
																	"src": "623:24:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 192,
																	"name": "Literal",
																	"src": "650:4:1"
																}
															],
															"id": 193,
															"name": "Assignment",
															"src": "623:31:1"
														}
													],
													"id": 194,
													"name": "ExpressionStatement",
													"src": "623:31:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 263,
																		"type": "function (address)",
																		"value": "AddedBlackList"
																	},
																	"id": 195,
																	"name": "Identifier",
																	"src": "664:14:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 184,
																		"type": "address",
																		"value": "_evilUser"
																	},
																	"id": 196,
																	"name": "Identifier",
																	"src": "679:9:1"
																}
															],
															"id": 197,
															"name": "FunctionCall",
															"src": "664:25:1"
														}
													],
													"id": 198,
													"name": "ExpressionStatement",
													"src": "664:25:1"
												}
											],
											"id": 199,
											"name": "Block",
											"src": "613:83:1"
										}
									],
									"id": 200,
									"name": "FunctionDefinition",
									"src": "554:142:1"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "removeBlackList",
										"payable": false,
										"scope": 268,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_clearedUser",
														"scope": 218,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 201,
															"name": "ElementaryTypeName",
															"src": "728:7:1"
														}
													],
													"id": 202,
													"name": "VariableDeclaration",
													"src": "728:20:1"
												}
											],
											"id": 203,
											"name": "ParameterList",
											"src": "727:22:1"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 206,
											"name": "ParameterList",
											"src": "767:0:1"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 765,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 204,
													"name": "Identifier",
													"src": "757:9:1"
												}
											],
											"id": 205,
											"name": "ModifierInvocation",
											"src": "757:9:1"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 182,
																				"type": "mapping(address => bool)",
																				"value": "isBlackListed"
																			},
																			"id": 207,
																			"name": "Identifier",
																			"src": "777:13:1"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 202,
																				"type": "address",
																				"value": "_clearedUser"
																			},
																			"id": 208,
																			"name": "Identifier",
																			"src": "791:12:1"
																		}
																	],
																	"id": 209,
																	"name": "IndexAccess",
																	"src": "777:27:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 210,
																	"name": "Literal",
																	"src": "807:5:1"
																}
															],
															"id": 211,
															"name": "Assignment",
															"src": "777:35:1"
														}
													],
													"id": 212,
													"name": "ExpressionStatement",
													"src": "777:35:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 267,
																		"type": "function (address)",
																		"value": "RemovedBlackList"
																	},
																	"id": 213,
																	"name": "Identifier",
																	"src": "822:16:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 202,
																		"type": "address",
																		"value": "_clearedUser"
																	},
																	"id": 214,
																	"name": "Identifier",
																	"src": "839:12:1"
																}
															],
															"id": 215,
															"name": "FunctionCall",
															"src": "822:30:1"
														}
													],
													"id": 216,
													"name": "ExpressionStatement",
													"src": "822:30:1"
												}
											],
											"id": 217,
											"name": "Block",
											"src": "767:92:1"
										}
									],
									"id": 218,
									"name": "FunctionDefinition",
									"src": "702:157:1"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "destroyBlackFunds",
										"payable": false,
										"scope": 268,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_blackListedUser",
														"scope": 253,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 219,
															"name": "ElementaryTypeName",
															"src": "893:7:1"
														}
													],
													"id": 220,
													"name": "VariableDeclaration",
													"src": "893:24:1"
												}
											],
											"id": 221,
											"name": "ParameterList",
											"src": "892:26:1"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 224,
											"name": "ParameterList",
											"src": "936:0:1"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 765,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 222,
													"name": "Identifier",
													"src": "926:9:1"
												}
											],
											"id": 223,
											"name": "ModifierInvocation",
											"src": "926:9:1"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1204,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 225,
																	"name": "Identifier",
																	"src": "946:7:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 182,
																				"type": "mapping(address => bool)",
																				"value": "isBlackListed"
																			},
																			"id": 226,
																			"name": "Identifier",
																			"src": "954:13:1"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 220,
																				"type": "address",
																				"value": "_blackListedUser"
																			},
																			"id": 227,
																			"name": "Identifier",
																			"src": "968:16:1"
																		}
																	],
																	"id": 228,
																	"name": "IndexAccess",
																	"src": "954:31:1"
																}
															],
															"id": 229,
															"name": "FunctionCall",
															"src": "946:40:1"
														}
													],
													"id": 230,
													"name": "ExpressionStatement",
													"src": "946:40:1"
												},
												{
													"attributes": {
														"assignments": [
															232
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "dirtyFunds",
																"scope": 253,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 231,
																	"name": "ElementaryTypeName",
																	"src": "996:4:1"
																}
															],
															"id": 232,
															"name": "VariableDeclaration",
															"src": "996:15:1"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			149
																		],
																		"referencedDeclaration": 149,
																		"type": "function (address) view returns (uint256)",
																		"value": "balanceOf"
																	},
																	"id": 233,
																	"name": "Identifier",
																	"src": "1014:9:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 220,
																		"type": "address",
																		"value": "_blackListedUser"
																	},
																	"id": 234,
																	"name": "Identifier",
																	"src": "1024:16:1"
																}
															],
															"id": 235,
															"name": "FunctionCall",
															"src": "1014:27:1"
														}
													],
													"id": 236,
													"name": "VariableDeclarationStatement",
													"src": "996:45:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 15,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 237,
																			"name": "Identifier",
																			"src": "1051:8:1"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 220,
																				"type": "address",
																				"value": "_blackListedUser"
																			},
																			"id": 238,
																			"name": "Identifier",
																			"src": "1060:16:1"
																		}
																	],
																	"id": 239,
																	"name": "IndexAccess",
																	"src": "1051:26:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 240,
																	"name": "Literal",
																	"src": "1080:1:1"
																}
															],
															"id": 241,
															"name": "Assignment",
															"src": "1051:30:1"
														}
													],
													"id": 242,
													"name": "ExpressionStatement",
													"src": "1051:30:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 711,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 243,
																	"name": "Identifier",
																	"src": "1091:12:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 232,
																		"type": "uint256",
																		"value": "dirtyFunds"
																	},
																	"id": 244,
																	"name": "Identifier",
																	"src": "1107:10:1"
																}
															],
															"id": 245,
															"name": "Assignment",
															"src": "1091:26:1"
														}
													],
													"id": 246,
													"name": "ExpressionStatement",
													"src": "1091:26:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 259,
																		"type": "function (address,uint256)",
																		"value": "DestroyedBlackFunds"
																	},
																	"id": 247,
																	"name": "Identifier",
																	"src": "1127:19:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 220,
																		"type": "address",
																		"value": "_blackListedUser"
																	},
																	"id": 248,
																	"name": "Identifier",
																	"src": "1147:16:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 232,
																		"type": "uint256",
																		"value": "dirtyFunds"
																	},
																	"id": 249,
																	"name": "Identifier",
																	"src": "1165:10:1"
																}
															],
															"id": 250,
															"name": "FunctionCall",
															"src": "1127:49:1"
														}
													],
													"id": 251,
													"name": "ExpressionStatement",
													"src": "1127:49:1"
												}
											],
											"id": 252,
											"name": "Block",
											"src": "936:247:1"
										}
									],
									"id": 253,
									"name": "FunctionDefinition",
									"src": "865:318:1"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "DestroyedBlackFunds"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_blackListedUser",
														"scope": 259,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 254,
															"name": "ElementaryTypeName",
															"src": "1215:7:1"
														}
													],
													"id": 255,
													"name": "VariableDeclaration",
													"src": "1215:24:1"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_balance",
														"scope": 259,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 256,
															"name": "ElementaryTypeName",
															"src": "1241:4:1"
														}
													],
													"id": 257,
													"name": "VariableDeclaration",
													"src": "1241:13:1"
												}
											],
											"id": 258,
											"name": "ParameterList",
											"src": "1214:41:1"
										}
									],
									"id": 259,
									"name": "EventDefinition",
									"src": "1189:67:1"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "AddedBlackList"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_user",
														"scope": 263,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 260,
															"name": "ElementaryTypeName",
															"src": "1283:7:1"
														}
													],
													"id": 261,
													"name": "VariableDeclaration",
													"src": "1283:13:1"
												}
											],
											"id": 262,
											"name": "ParameterList",
											"src": "1282:15:1"
										}
									],
									"id": 263,
									"name": "EventDefinition",
									"src": "1262:36:1"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "RemovedBlackList"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_user",
														"scope": 267,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 264,
															"name": "ElementaryTypeName",
															"src": "1327:7:1"
														}
													],
													"id": 265,
													"name": "VariableDeclaration",
													"src": "1327:13:1"
												}
											],
											"id": 266,
											"name": "ParameterList",
											"src": "1326:15:1"
										}
									],
									"id": 267,
									"name": "EventDefinition",
									"src": "1304:38:1"
								}
							],
							"id": 268,
							"name": "ContractDefinition",
							"src": "110:1235:1"
						}
					],
					"id": 269,
					"name": "SourceUnit",
					"src": "32:1314:1"
				}
			},
			"contracts/DiverseTetherToken.sol": {
				"ast": {
					"absolutePath": "contracts/DiverseTetherToken.sol",
					"exportedSymbols": {
						"DiverseTetherToken": [
							668
						]
					},
					"id": 669,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 270,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "contracts/Pausable.sol",
							"file": "./Pausable.sol",
							"id": 271,
							"nodeType": "ImportDirective",
							"scope": 669,
							"sourceUnit": 846,
							"src": "58:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/StandardToken.sol",
							"file": "./StandardToken.sol",
							"id": 272,
							"nodeType": "ImportDirective",
							"scope": 669,
							"sourceUnit": 1147,
							"src": "83:29:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/UpgradedStandardToken.sol",
							"file": "./UpgradedStandardToken.sol",
							"id": 273,
							"nodeType": "ImportDirective",
							"scope": 669,
							"sourceUnit": 1184,
							"src": "113:37:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Blacklist.sol",
							"file": "./Blacklist.sol",
							"id": 274,
							"nodeType": "ImportDirective",
							"scope": 669,
							"sourceUnit": 269,
							"src": "151:25:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 275,
										"name": "Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 845,
										"src": "209:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Pausable_$845",
											"typeString": "contract Pausable"
										}
									},
									"id": 276,
									"nodeType": "InheritanceSpecifier",
									"src": "209:8:2"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 277,
										"name": "StandardToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1146,
										"src": "219:13:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StandardToken_$1146",
											"typeString": "contract StandardToken"
										}
									},
									"id": 278,
									"nodeType": "InheritanceSpecifier",
									"src": "219:13:2"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 279,
										"name": "BlackList",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 268,
										"src": "234:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BlackList_$268",
											"typeString": "contract BlackList"
										}
									},
									"id": 280,
									"nodeType": "InheritanceSpecifier",
									"src": "234:9:2"
								}
							],
							"contractDependencies": [
								707,
								268,
								150,
								741,
								785,
								845,
								1146
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 668,
							"linearizedBaseContracts": [
								668,
								268,
								1146,
								707,
								150,
								741,
								845,
								785
							],
							"name": "DiverseTetherToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 282,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 668,
									"src": "251:18:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string storage ref"
									},
									"typeName": {
										"id": 281,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "251:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string storage pointer"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 284,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 668,
									"src": "275:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string storage ref"
									},
									"typeName": {
										"id": 283,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "275:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string storage pointer"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 286,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 668,
									"src": "301:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 285,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "301:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 288,
									"name": "upgradedAddress",
									"nodeType": "VariableDeclaration",
									"scope": 668,
									"src": "327:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 287,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "327:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 290,
									"name": "deprecated",
									"nodeType": "VariableDeclaration",
									"scope": 668,
									"src": "363:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 289,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "363:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "717:208:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 293,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "727:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_10000000000000000_by_1",
															"typeString": "int_const 10000000000000000"
														},
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "3130303030303030303030",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "742:11:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000_by_1",
																"typeString": "int_const 10000000000"
															},
															"value": "10000000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "756:2:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "36",
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "762:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6_by_1",
																	"typeString": "int_const 6"
																},
																"value": "6"
															},
															"src": "756:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															}
														},
														"src": "742:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000000000_by_1",
															"typeString": "int_const 10000000000000000"
														}
													},
													"src": "727:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "727:36:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 301,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "773:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "6454657468657220555344",
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "780:13:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_01e4ab9979bc7c771343f6451a19ad4ff11daf3036b93550343d3750941e5338",
															"typeString": "literal_string \"dTether USD\""
														},
														"value": "dTether USD"
													},
													"src": "773:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "773:20:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 305,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "803:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "6455534454",
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "812:7:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_b9c30223a576146699fd2d1450b98ccece32de1091459691901c7cb6ac640578",
															"typeString": "literal_string \"dUSDT\""
														},
														"value": "dUSDT"
													},
													"src": "803:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "803:16:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 309,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "829:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "36",
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "840:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "829:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "829:12:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 313,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "851:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 315,
														"indexExpression": {
															"argumentTypes": null,
															"id": 314,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "860:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "851:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_10000000000000000_by_1",
															"typeString": "int_const 10000000000000000"
														},
														"id": 320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "3130303030303030303030",
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "869:11:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000_by_1",
																"typeString": "int_const 10000000000"
															},
															"value": "10000000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "883:2:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "36",
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "889:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6_by_1",
																	"typeString": "int_const 6"
																},
																"value": "6"
															},
															"src": "883:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															}
														},
														"src": "869:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000000000_by_1",
															"typeString": "int_const 10000000000000000"
														}
													},
													"src": "851:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "851:39:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 323,
														"name": "deprecated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "900:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "913:5:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "900:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "900:18:2"
											}
										]
									},
									"id": 328,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "DiverseTetherToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:2:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "717:0:2"
									},
									"scope": 668,
									"src": "680:245:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "1087:249:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1105:26:2",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 340,
																	"name": "isBlackListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "1106:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 343,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 341,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1186,
																		"src": "1120:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1120:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1106:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "1097:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1097:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1097:35:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 347,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 290,
													"src": "1146:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 364,
													"nodeType": "Block",
													"src": "1276:54:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 360,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "1307:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 361,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "1312:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 359,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "1297:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1297:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 338,
															"id": 363,
															"nodeType": "Return",
															"src": "1290:29:2"
														}
													]
												},
												"id": 365,
												"nodeType": "IfStatement",
												"src": "1142:188:2",
												"trueBody": {
													"id": 358,
													"nodeType": "Block",
													"src": "1158:112:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 352,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1186,
																			"src": "1235:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1235:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 354,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "1247:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 355,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "1252:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 349,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 288,
																				"src": "1201:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 348,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "1179:21:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$1183_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1179:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$1183",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1162,
																	"src": "1179:55:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1179:80:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 338,
															"id": 357,
															"nodeType": "Return",
															"src": "1172:87:2"
														}
													]
												}
											}
										]
									},
									"id": 367,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 335,
											"modifierName": {
												"argumentTypes": null,
												"id": 334,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 806,
												"src": "1060:13:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1060:13:2"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1025:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1038:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1038:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1024:26:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1082:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1082:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1081:6:2"
									},
									"scope": 668,
									"src": "1007:329:2",
									"stateMutability": "nonpayable",
									"superFunction": 732,
									"visibility": "external"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "1501:271:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1519:21:2",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 379,
																	"name": "isBlackListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "1520:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 381,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 380,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "1534:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1520:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "1511:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1511:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1511:30:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 385,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 290,
													"src": "1555:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 405,
													"nodeType": "Block",
													"src": "1696:70:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 400,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "1736:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 401,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 371,
																		"src": "1743:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 402,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "1748:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 398,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1225,
																		"src": "1717:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_DiverseTetherToken_$668",
																			"typeString": "contract super DiverseTetherToken"
																		}
																	},
																	"id": 399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1081,
																	"src": "1717:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1717:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 377,
															"id": 404,
															"nodeType": "Return",
															"src": "1710:45:2"
														}
													]
												},
												"id": 406,
												"nodeType": "IfStatement",
												"src": "1551:215:2",
												"trueBody": {
													"id": 397,
													"nodeType": "Block",
													"src": "1567:123:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 390,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1186,
																			"src": "1648:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1648:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 392,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "1660:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 393,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 371,
																		"src": "1667:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 394,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "1672:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 387,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 288,
																				"src": "1610:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 386,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "1588:21:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$1183_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1588:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$1183",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFromByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1173,
																	"src": "1588:59:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256) external"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1588:91:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 377,
															"id": 396,
															"nodeType": "Return",
															"src": "1581:98:2"
														}
													]
												}
											}
										]
									},
									"id": 408,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 376,
											"modifierName": {
												"argumentTypes": null,
												"id": 375,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 806,
												"src": "1488:13:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1488:13:2"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1455:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1468:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1439:41:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1501:0:2"
									},
									"scope": 668,
									"src": "1418:354:2",
									"stateMutability": "nonpayable",
									"superFunction": 1081,
									"visibility": "public"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "1917:175:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 415,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 290,
													"src": "1931:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 429,
													"nodeType": "Block",
													"src": "2034:52:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 426,
																		"name": "who",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "2071:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 424,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1225,
																		"src": "2055:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_DiverseTetherToken_$668",
																			"typeString": "contract super DiverseTetherToken"
																		}
																	},
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 149,
																	"src": "2055:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2055:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 414,
															"id": 428,
															"nodeType": "Return",
															"src": "2048:27:2"
														}
													]
												},
												"id": 430,
												"nodeType": "IfStatement",
												"src": "1927:159:2",
												"trueBody": {
													"id": 423,
													"nodeType": "Block",
													"src": "1943:85:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 420,
																		"name": "who",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "2013:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 417,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 288,
																				"src": "1986:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 416,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "1964:21:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$1183_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1964:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$1183",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 149,
																	"src": "1964:48:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1964:53:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 414,
															"id": 422,
															"nodeType": "Return",
															"src": "1957:60:2"
														}
													]
												}
											}
										]
									},
									"id": 432,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1873:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1872:13:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1911:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1911:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1910:6:2"
									},
									"scope": 668,
									"src": "1854:238:2",
									"stateMutability": "view",
									"superFunction": 149,
									"visibility": "public"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "2253:217:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 444,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 290,
													"src": "2267:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 462,
													"nodeType": "Block",
													"src": "2401:63:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 458,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 434,
																		"src": "2436:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 459,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "2446:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 456,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1225,
																		"src": "2422:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_DiverseTetherToken_$668",
																			"typeString": "contract super DiverseTetherToken"
																		}
																	},
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1129,
																	"src": "2422:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2422:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 443,
															"id": 461,
															"nodeType": "Return",
															"src": "2415:38:2"
														}
													]
												},
												"id": 463,
												"nodeType": "IfStatement",
												"src": "2263:201:2",
												"trueBody": {
													"id": 455,
													"nodeType": "Block",
													"src": "2279:116:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 449,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1186,
																			"src": "2355:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2355:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 451,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 434,
																		"src": "2367:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 452,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "2377:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 446,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 288,
																				"src": "2322:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 445,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "2300:21:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$1183_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2300:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$1183",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "approveByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1182,
																	"src": "2300:54:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2300:84:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 443,
															"id": 454,
															"nodeType": "Return",
															"src": "2293:91:2"
														}
													]
												}
											}
										]
									},
									"id": 465,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2245:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2249:2:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "2245:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 442,
											"modifierName": {
												"argumentTypes": null,
												"id": 438,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "2229:15:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2229:23:2"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2191:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2209:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2209:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2190:31:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2253:0:2"
									},
									"scope": 668,
									"src": "2174:296:2",
									"stateMutability": "nonpayable",
									"superFunction": 1129,
									"visibility": "public"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "2646:193:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 474,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 290,
													"src": "2660:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 490,
													"nodeType": "Block",
													"src": "2768:65:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 486,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "2805:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 487,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 469,
																		"src": "2813:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 484,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1225,
																		"src": "2789:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_DiverseTetherToken_$668",
																			"typeString": "contract super DiverseTetherToken"
																		}
																	},
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1145,
																	"src": "2789:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2789:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 473,
															"id": 489,
															"nodeType": "Return",
															"src": "2782:40:2"
														}
													]
												},
												"id": 491,
												"nodeType": "IfStatement",
												"src": "2656:177:2",
												"trueBody": {
													"id": 483,
													"nodeType": "Block",
													"src": "2672:90:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 479,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "2734:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 480,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 469,
																		"src": "2742:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 476,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 288,
																				"src": "2707:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 475,
																			"name": "StandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "2693:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_StandardToken_$1146_$",
																				"typeString": "type(contract StandardToken)"
																			}
																		},
																		"id": 477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2693:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StandardToken_$1146",
																			"typeString": "contract StandardToken"
																		}
																	},
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1145,
																	"src": "2693:40:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2693:58:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 473,
															"id": 482,
															"nodeType": "Return",
															"src": "2686:65:2"
														}
													]
												}
											}
										]
									},
									"id": 493,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "2571:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "2587:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2587:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2570:34:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "2630:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2630:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2629:16:2"
									},
									"scope": 668,
									"src": "2552:287:2",
									"stateMutability": "view",
									"superFunction": 1145,
									"visibility": "public"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "2964:115:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 500,
														"name": "deprecated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2974:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2987:4:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2974:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "2974:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 504,
														"name": "upgradedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3001:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 505,
														"name": "_upgradedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "3019:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3001:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "3001:34:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 509,
															"name": "_upgradedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "3055:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 508,
														"name": "Deprecate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "3045:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3045:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "3045:27:2"
											}
										]
									},
									"id": 513,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 498,
											"modifierName": {
												"argumentTypes": null,
												"id": 497,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 765,
												"src": "2954:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2954:9:2"
										}
									],
									"name": "deprecate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"name": "_upgradedAddress",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "2921:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2921:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2920:26:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2964:0:2"
									},
									"scope": 668,
									"src": "2902:177:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "3196:158:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 518,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 290,
													"src": "3210:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 528,
													"nodeType": "Block",
													"src": "3304:44:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 526,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "3325:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 517,
															"id": 527,
															"nodeType": "Return",
															"src": "3318:19:2"
														}
													]
												},
												"id": 529,
												"nodeType": "IfStatement",
												"src": "3206:142:2",
												"trueBody": {
													"id": 525,
													"nodeType": "Block",
													"src": "3222:76:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 520,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 288,
																				"src": "3257:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 519,
																			"name": "StandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "3243:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_StandardToken_$1146_$",
																				"typeString": "type(contract StandardToken)"
																			}
																		},
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3243:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StandardToken_$1146",
																			"typeString": "contract StandardToken"
																		}
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 716,
																	"src": "3243:42:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3243:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 517,
															"id": 524,
															"nodeType": "Return",
															"src": "3236:51:2"
														}
													]
												}
											}
										]
									},
									"id": 531,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3162:2:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "3190:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3190:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3189:6:2"
									},
									"scope": 668,
									"src": "3142:212:2",
									"stateMutability": "view",
									"superFunction": 716,
									"visibility": "public"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "3557:214:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 539,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "3575:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 540,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "3590:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3575:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 542,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "3599:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3575:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "3567:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3567:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "3567:45:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 547,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "3630:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 549,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 548,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "3639:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3630:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 550,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "3648:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3630:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 552,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "3657:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 553,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "3666:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3657:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3630:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "3622:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3622:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "3622:51:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 558,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "3684:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 560,
														"indexExpression": {
															"argumentTypes": null,
															"id": 559,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "3693:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3684:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 561,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "3703:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3684:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "3684:25:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 564,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "3719:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 565,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "3735:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3719:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "3719:22:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 569,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "3757:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 568,
														"name": "Issue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "3751:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3751:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "3751:13:2"
											}
										]
									},
									"id": 573,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 536,
											"modifierName": {
												"argumentTypes": null,
												"id": 535,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 765,
												"src": "3547:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3547:9:2"
										}
									],
									"name": "issue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "3527:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3527:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3526:13:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3557:0:2"
									},
									"scope": 668,
									"src": "3512:259:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "4041:184:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 581,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "4059:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 582,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "4075:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4059:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 580,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "4051:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4051:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "4051:31:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 587,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "4100:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 589,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 588,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "4109:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4100:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 590,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "4119:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4100:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "4092:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4092:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "4092:34:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 594,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "4137:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 595,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4153:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4137:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "4137:22:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 598,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "4169:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 600,
														"indexExpression": {
															"argumentTypes": null,
															"id": 599,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "4178:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4169:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 601,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4188:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4169:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "4169:25:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 605,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "4211:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 604,
														"name": "Redeem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "4204:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4204:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "4204:14:2"
											}
										]
									},
									"id": 609,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 578,
											"modifierName": {
												"argumentTypes": null,
												"id": 577,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 765,
												"src": "4031:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4031:9:2"
										}
									],
									"name": "redeem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4011:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4011:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4010:13:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4041:0:2"
									},
									"scope": 668,
									"src": "3995:230:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "4304:305:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 619,
																"name": "newBasisPoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "4410:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3230",
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4427:2:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20_by_1",
																	"typeString": "int_const 20"
																},
																"value": "20"
															},
															"src": "4410:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "4402:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4402:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "4402:28:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 625,
																"name": "newMaxFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "4448:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3530",
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4460:2:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															"src": "4448:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "4440:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4440:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "4440:23:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 630,
														"name": "basisPointsRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "4474:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 631,
														"name": "newBasisPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "4492:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4474:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "4474:32:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 634,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "4516:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4543:2:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 638,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "4547:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4543:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 635,
																"name": "newMaxFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "4529:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 880,
															"src": "4529:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4529:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4516:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "4516:40:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 644,
															"name": "basisPointsRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "4574:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 645,
															"name": "maximumFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4591:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 643,
														"name": "Params",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "4567:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "4567:35:2"
											}
										]
									},
									"id": 649,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 616,
											"modifierName": {
												"argumentTypes": null,
												"id": 615,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 765,
												"src": "4294:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4294:9:2"
										}
									],
									"name": "setParams",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"name": "newBasisPoints",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "4250:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4250:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"name": "newMaxFee",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "4271:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4271:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4249:37:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4304:0:2"
									},
									"scope": 668,
									"src": "4231:378:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 653,
									"name": "Issue",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "4667:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4667:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4666:13:2"
									},
									"src": "4655:25:2"
								},
								{
									"anonymous": false,
									"id": 657,
									"name": "Redeem",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "4738:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4738:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4737:13:2"
									},
									"src": "4725:26:2"
								},
								{
									"anonymous": false,
									"id": 661,
									"name": "Deprecate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"indexed": false,
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "4815:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4815:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4814:20:2"
									},
									"src": "4799:36:2"
								},
								{
									"anonymous": false,
									"id": 667,
									"name": "Params",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"indexed": false,
												"name": "feeBasisPoints",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "4895:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4895:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"indexed": false,
												"name": "maxFee",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "4916:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4916:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4894:34:2"
									},
									"src": "4882:47:2"
								}
							],
							"scope": 669,
							"src": "178:4753:2"
						}
					],
					"src": "32:4900:2"
				},
				"id": 2,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/DiverseTetherToken.sol",
						"exportedSymbols": {
							"DiverseTetherToken": [
								668
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 270,
							"name": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"attributes": {
								"SourceUnit": 846,
								"absolutePath": "contracts/Pausable.sol",
								"file": "./Pausable.sol",
								"scope": 669,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 271,
							"name": "ImportDirective",
							"src": "58:24:2"
						},
						{
							"attributes": {
								"SourceUnit": 1147,
								"absolutePath": "contracts/StandardToken.sol",
								"file": "./StandardToken.sol",
								"scope": 669,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 272,
							"name": "ImportDirective",
							"src": "83:29:2"
						},
						{
							"attributes": {
								"SourceUnit": 1184,
								"absolutePath": "contracts/UpgradedStandardToken.sol",
								"file": "./UpgradedStandardToken.sol",
								"scope": 669,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 273,
							"name": "ImportDirective",
							"src": "113:37:2"
						},
						{
							"attributes": {
								"SourceUnit": 269,
								"absolutePath": "contracts/Blacklist.sol",
								"file": "./Blacklist.sol",
								"scope": 669,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 274,
							"name": "ImportDirective",
							"src": "151:25:2"
						},
						{
							"attributes": {
								"contractDependencies": [
									707,
									268,
									150,
									741,
									785,
									845,
									1146
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									668,
									268,
									1146,
									707,
									150,
									741,
									845,
									785
								],
								"name": "DiverseTetherToken",
								"scope": 669
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Pausable",
												"referencedDeclaration": 845,
												"type": "contract Pausable"
											},
											"id": 275,
											"name": "UserDefinedTypeName",
											"src": "209:8:2"
										}
									],
									"id": 276,
									"name": "InheritanceSpecifier",
									"src": "209:8:2"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "StandardToken",
												"referencedDeclaration": 1146,
												"type": "contract StandardToken"
											},
											"id": 277,
											"name": "UserDefinedTypeName",
											"src": "219:13:2"
										}
									],
									"id": 278,
									"name": "InheritanceSpecifier",
									"src": "219:13:2"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "BlackList",
												"referencedDeclaration": 268,
												"type": "contract BlackList"
											},
											"id": 279,
											"name": "UserDefinedTypeName",
											"src": "234:9:2"
										}
									],
									"id": 280,
									"name": "InheritanceSpecifier",
									"src": "234:9:2"
								},
								{
									"attributes": {
										"constant": false,
										"name": "name",
										"scope": 668,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "string storage ref",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "string",
												"type": "string storage pointer"
											},
											"id": 281,
											"name": "ElementaryTypeName",
											"src": "251:6:2"
										}
									],
									"id": 282,
									"name": "VariableDeclaration",
									"src": "251:18:2"
								},
								{
									"attributes": {
										"constant": false,
										"name": "symbol",
										"scope": 668,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "string storage ref",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "string",
												"type": "string storage pointer"
											},
											"id": 283,
											"name": "ElementaryTypeName",
											"src": "275:6:2"
										}
									],
									"id": 284,
									"name": "VariableDeclaration",
									"src": "275:20:2"
								},
								{
									"attributes": {
										"constant": false,
										"name": "decimals",
										"scope": 668,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 285,
											"name": "ElementaryTypeName",
											"src": "301:4:2"
										}
									],
									"id": 286,
									"name": "VariableDeclaration",
									"src": "301:20:2"
								},
								{
									"attributes": {
										"constant": false,
										"name": "upgradedAddress",
										"scope": 668,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 287,
											"name": "ElementaryTypeName",
											"src": "327:7:2"
										}
									],
									"id": 288,
									"name": "VariableDeclaration",
									"src": "327:30:2"
								},
								{
									"attributes": {
										"constant": false,
										"name": "deprecated",
										"scope": 668,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "bool",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "bool",
												"type": "bool"
											},
											"id": 289,
											"name": "ElementaryTypeName",
											"src": "363:4:2"
										}
									],
									"id": 290,
									"name": "VariableDeclaration",
									"src": "363:22:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "DiverseTetherToken",
										"payable": false,
										"scope": 668,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 291,
											"name": "ParameterList",
											"src": "707:2:2"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 292,
											"name": "ParameterList",
											"src": "717:0:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 711,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 293,
																	"name": "Identifier",
																	"src": "727:12:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_rational_10000000000000000_by_1",
																			"typeString": "int_const 10000000000000000"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"operator": "*",
																		"type": "int_const 10000000000000000"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "3130303030303030303030",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 10000000000",
																				"value": "10000000000"
																			},
																			"id": 294,
																			"name": "Literal",
																			"src": "742:11:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_rational_1000000_by_1",
																					"typeString": "int_const 1000000"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"operator": "**",
																				"type": "int_const 1000000"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "3130",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "number",
																						"type": "int_const 10",
																						"value": "10"
																					},
																					"id": 295,
																					"name": "Literal",
																					"src": "756:2:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "36",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "number",
																						"type": "int_const 6",
																						"value": "6"
																					},
																					"id": 296,
																					"name": "Literal",
																					"src": "762:1:2"
																				}
																			],
																			"id": 297,
																			"name": "BinaryOperation",
																			"src": "756:7:2"
																		}
																	],
																	"id": 298,
																	"name": "BinaryOperation",
																	"src": "742:21:2"
																}
															],
															"id": 299,
															"name": "Assignment",
															"src": "727:36:2"
														}
													],
													"id": 300,
													"name": "ExpressionStatement",
													"src": "727:36:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "string storage ref"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 282,
																		"type": "string storage ref",
																		"value": "name"
																	},
																	"id": 301,
																	"name": "Identifier",
																	"src": "773:4:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "6454657468657220555344",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "string",
																		"type": "literal_string \"dTether USD\"",
																		"value": "dTether USD"
																	},
																	"id": 302,
																	"name": "Literal",
																	"src": "780:13:2"
																}
															],
															"id": 303,
															"name": "Assignment",
															"src": "773:20:2"
														}
													],
													"id": 304,
													"name": "ExpressionStatement",
													"src": "773:20:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "string storage ref"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 284,
																		"type": "string storage ref",
																		"value": "symbol"
																	},
																	"id": 305,
																	"name": "Identifier",
																	"src": "803:6:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "6455534454",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "string",
																		"type": "literal_string \"dUSDT\"",
																		"value": "dUSDT"
																	},
																	"id": 306,
																	"name": "Literal",
																	"src": "812:7:2"
																}
															],
															"id": 307,
															"name": "Assignment",
															"src": "803:16:2"
														}
													],
													"id": 308,
													"name": "ExpressionStatement",
													"src": "803:16:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 286,
																		"type": "uint256",
																		"value": "decimals"
																	},
																	"id": 309,
																	"name": "Identifier",
																	"src": "829:8:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "36",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 6",
																		"value": "6"
																	},
																	"id": 310,
																	"name": "Literal",
																	"src": "840:1:2"
																}
															],
															"id": 311,
															"name": "Assignment",
															"src": "829:12:2"
														}
													],
													"id": 312,
													"name": "ExpressionStatement",
													"src": "829:12:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 15,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 313,
																			"name": "Identifier",
																			"src": "851:8:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 745,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 314,
																			"name": "Identifier",
																			"src": "860:5:2"
																		}
																	],
																	"id": 315,
																	"name": "IndexAccess",
																	"src": "851:15:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_rational_10000000000000000_by_1",
																			"typeString": "int_const 10000000000000000"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"operator": "*",
																		"type": "int_const 10000000000000000"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "3130303030303030303030",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 10000000000",
																				"value": "10000000000"
																			},
																			"id": 316,
																			"name": "Literal",
																			"src": "869:11:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_rational_1000000_by_1",
																					"typeString": "int_const 1000000"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"operator": "**",
																				"type": "int_const 1000000"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "3130",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "number",
																						"type": "int_const 10",
																						"value": "10"
																					},
																					"id": 317,
																					"name": "Literal",
																					"src": "883:2:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "36",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "number",
																						"type": "int_const 6",
																						"value": "6"
																					},
																					"id": 318,
																					"name": "Literal",
																					"src": "889:1:2"
																				}
																			],
																			"id": 319,
																			"name": "BinaryOperation",
																			"src": "883:7:2"
																		}
																	],
																	"id": 320,
																	"name": "BinaryOperation",
																	"src": "869:21:2"
																}
															],
															"id": 321,
															"name": "Assignment",
															"src": "851:39:2"
														}
													],
													"id": 322,
													"name": "ExpressionStatement",
													"src": "851:39:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 290,
																		"type": "bool",
																		"value": "deprecated"
																	},
																	"id": 323,
																	"name": "Identifier",
																	"src": "900:10:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 324,
																	"name": "Literal",
																	"src": "913:5:2"
																}
															],
															"id": 325,
															"name": "Assignment",
															"src": "900:18:2"
														}
													],
													"id": 326,
													"name": "ExpressionStatement",
													"src": "900:18:2"
												}
											],
											"id": 327,
											"name": "Block",
											"src": "717:208:2"
										}
									],
									"id": 328,
									"name": "FunctionDefinition",
									"src": "680:245:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transfer",
										"payable": false,
										"scope": 668,
										"stateMutability": "nonpayable",
										"superFunction": 732,
										"visibility": "external"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 367,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 329,
															"name": "ElementaryTypeName",
															"src": "1025:7:2"
														}
													],
													"id": 330,
													"name": "VariableDeclaration",
													"src": "1025:11:2"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 367,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 331,
															"name": "ElementaryTypeName",
															"src": "1038:4:2"
														}
													],
													"id": 332,
													"name": "VariableDeclaration",
													"src": "1038:11:2"
												}
											],
											"id": 333,
											"name": "ParameterList",
											"src": "1024:26:2"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 367,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 336,
															"name": "ElementaryTypeName",
															"src": "1082:4:2"
														}
													],
													"id": 337,
													"name": "VariableDeclaration",
													"src": "1082:4:2"
												}
											],
											"id": 338,
											"name": "ParameterList",
											"src": "1081:6:2"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 806,
														"type": "modifier ()",
														"value": "whenNotPaused"
													},
													"id": 334,
													"name": "Identifier",
													"src": "1060:13:2"
												}
											],
											"id": 335,
											"name": "ModifierInvocation",
											"src": "1060:13:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1204,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 339,
																	"name": "Identifier",
																	"src": "1097:7:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 182,
																						"type": "mapping(address => bool)",
																						"value": "isBlackListed"
																					},
																					"id": 340,
																					"name": "Identifier",
																					"src": "1106:13:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1186,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 341,
																							"name": "Identifier",
																							"src": "1120:3:2"
																						}
																					],
																					"id": 342,
																					"name": "MemberAccess",
																					"src": "1120:10:2"
																				}
																			],
																			"id": 343,
																			"name": "IndexAccess",
																			"src": "1106:25:2"
																		}
																	],
																	"id": 344,
																	"name": "UnaryOperation",
																	"src": "1105:26:2"
																}
															],
															"id": 345,
															"name": "FunctionCall",
															"src": "1097:35:2"
														}
													],
													"id": 346,
													"name": "ExpressionStatement",
													"src": "1097:35:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 290,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 347,
															"name": "Identifier",
															"src": "1146:10:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 338
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "bool",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transferByLegacy",
																						"referencedDeclaration": 1162,
																						"type": "function (address,address,uint256) external returns (bool)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1183,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 348,
																									"name": "Identifier",
																									"src": "1179:21:2"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 288,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 349,
																									"name": "Identifier",
																									"src": "1201:15:2"
																								}
																							],
																							"id": 350,
																							"name": "FunctionCall",
																							"src": "1179:38:2"
																						}
																					],
																					"id": 351,
																					"name": "MemberAccess",
																					"src": "1179:55:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1186,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 352,
																							"name": "Identifier",
																							"src": "1235:3:2"
																						}
																					],
																					"id": 353,
																					"name": "MemberAccess",
																					"src": "1235:10:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 330,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 354,
																					"name": "Identifier",
																					"src": "1247:3:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 332,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 355,
																					"name": "Identifier",
																					"src": "1252:6:2"
																				}
																			],
																			"id": 356,
																			"name": "FunctionCall",
																			"src": "1179:80:2"
																		}
																	],
																	"id": 357,
																	"name": "Return",
																	"src": "1172:87:2"
																}
															],
															"id": 358,
															"name": "Block",
															"src": "1158:112:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 338
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "bool",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 137,
																						"type": "function (address,uint256) returns (bool)",
																						"value": "_transfer"
																					},
																					"id": 359,
																					"name": "Identifier",
																					"src": "1297:9:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 330,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 360,
																					"name": "Identifier",
																					"src": "1307:3:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 332,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 361,
																					"name": "Identifier",
																					"src": "1312:6:2"
																				}
																			],
																			"id": 362,
																			"name": "FunctionCall",
																			"src": "1297:22:2"
																		}
																	],
																	"id": 363,
																	"name": "Return",
																	"src": "1290:29:2"
																}
															],
															"id": 364,
															"name": "Block",
															"src": "1276:54:2"
														}
													],
													"id": 365,
													"name": "IfStatement",
													"src": "1142:188:2"
												}
											],
											"id": 366,
											"name": "Block",
											"src": "1087:249:2"
										}
									],
									"id": 367,
									"name": "FunctionDefinition",
									"src": "1007:329:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transferFrom",
										"payable": false,
										"scope": 668,
										"stateMutability": "nonpayable",
										"superFunction": 1081,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_from",
														"scope": 408,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 368,
															"name": "ElementaryTypeName",
															"src": "1440:7:2"
														}
													],
													"id": 369,
													"name": "VariableDeclaration",
													"src": "1440:13:2"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 408,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 370,
															"name": "ElementaryTypeName",
															"src": "1455:7:2"
														}
													],
													"id": 371,
													"name": "VariableDeclaration",
													"src": "1455:11:2"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 408,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 372,
															"name": "ElementaryTypeName",
															"src": "1468:4:2"
														}
													],
													"id": 373,
													"name": "VariableDeclaration",
													"src": "1468:11:2"
												}
											],
											"id": 374,
											"name": "ParameterList",
											"src": "1439:41:2"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 377,
											"name": "ParameterList",
											"src": "1501:0:2"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 806,
														"type": "modifier ()",
														"value": "whenNotPaused"
													},
													"id": 375,
													"name": "Identifier",
													"src": "1488:13:2"
												}
											],
											"id": 376,
											"name": "ModifierInvocation",
											"src": "1488:13:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1204,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 378,
																	"name": "Identifier",
																	"src": "1511:7:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 182,
																						"type": "mapping(address => bool)",
																						"value": "isBlackListed"
																					},
																					"id": 379,
																					"name": "Identifier",
																					"src": "1520:13:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 369,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 380,
																					"name": "Identifier",
																					"src": "1534:5:2"
																				}
																			],
																			"id": 381,
																			"name": "IndexAccess",
																			"src": "1520:20:2"
																		}
																	],
																	"id": 382,
																	"name": "UnaryOperation",
																	"src": "1519:21:2"
																}
															],
															"id": 383,
															"name": "FunctionCall",
															"src": "1511:30:2"
														}
													],
													"id": 384,
													"name": "ExpressionStatement",
													"src": "1511:30:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 290,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 385,
															"name": "Identifier",
															"src": "1555:10:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 377
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transferFromByLegacy",
																						"referencedDeclaration": 1173,
																						"type": "function (address,address,address,uint256) external"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1183,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 386,
																									"name": "Identifier",
																									"src": "1588:21:2"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 288,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 387,
																									"name": "Identifier",
																									"src": "1610:15:2"
																								}
																							],
																							"id": 388,
																							"name": "FunctionCall",
																							"src": "1588:38:2"
																						}
																					],
																					"id": 389,
																					"name": "MemberAccess",
																					"src": "1588:59:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1186,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 390,
																							"name": "Identifier",
																							"src": "1648:3:2"
																						}
																					],
																					"id": 391,
																					"name": "MemberAccess",
																					"src": "1648:10:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 369,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 392,
																					"name": "Identifier",
																					"src": "1660:5:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 371,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 393,
																					"name": "Identifier",
																					"src": "1667:3:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 373,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 394,
																					"name": "Identifier",
																					"src": "1672:6:2"
																				}
																			],
																			"id": 395,
																			"name": "FunctionCall",
																			"src": "1588:91:2"
																		}
																	],
																	"id": 396,
																	"name": "Return",
																	"src": "1581:98:2"
																}
															],
															"id": 397,
															"name": "Block",
															"src": "1567:123:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 377
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transferFrom",
																						"referencedDeclaration": 1081,
																						"type": "function (address,address,uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1225,
																								"type": "contract super DiverseTetherToken",
																								"value": "super"
																							},
																							"id": 398,
																							"name": "Identifier",
																							"src": "1717:5:2"
																						}
																					],
																					"id": 399,
																					"name": "MemberAccess",
																					"src": "1717:18:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 369,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 400,
																					"name": "Identifier",
																					"src": "1736:5:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 371,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 401,
																					"name": "Identifier",
																					"src": "1743:3:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 373,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 402,
																					"name": "Identifier",
																					"src": "1748:6:2"
																				}
																			],
																			"id": 403,
																			"name": "FunctionCall",
																			"src": "1717:38:2"
																		}
																	],
																	"id": 404,
																	"name": "Return",
																	"src": "1710:45:2"
																}
															],
															"id": 405,
															"name": "Block",
															"src": "1696:70:2"
														}
													],
													"id": 406,
													"name": "IfStatement",
													"src": "1551:215:2"
												}
											],
											"id": 407,
											"name": "Block",
											"src": "1501:271:2"
										}
									],
									"id": 408,
									"name": "FunctionDefinition",
									"src": "1418:354:2"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "balanceOf",
										"payable": false,
										"scope": 668,
										"stateMutability": "view",
										"superFunction": 149,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "who",
														"scope": 432,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 409,
															"name": "ElementaryTypeName",
															"src": "1873:7:2"
														}
													],
													"id": 410,
													"name": "VariableDeclaration",
													"src": "1873:11:2"
												}
											],
											"id": 411,
											"name": "ParameterList",
											"src": "1872:13:2"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 432,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 412,
															"name": "ElementaryTypeName",
															"src": "1911:4:2"
														}
													],
													"id": 413,
													"name": "VariableDeclaration",
													"src": "1911:4:2"
												}
											],
											"id": 414,
											"name": "ParameterList",
											"src": "1910:6:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 290,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 415,
															"name": "Identifier",
															"src": "1931:10:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 414
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "balanceOf",
																						"referencedDeclaration": 149,
																						"type": "function (address) view external returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1183,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 416,
																									"name": "Identifier",
																									"src": "1964:21:2"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 288,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 417,
																									"name": "Identifier",
																									"src": "1986:15:2"
																								}
																							],
																							"id": 418,
																							"name": "FunctionCall",
																							"src": "1964:38:2"
																						}
																					],
																					"id": 419,
																					"name": "MemberAccess",
																					"src": "1964:48:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 410,
																						"type": "address",
																						"value": "who"
																					},
																					"id": 420,
																					"name": "Identifier",
																					"src": "2013:3:2"
																				}
																			],
																			"id": 421,
																			"name": "FunctionCall",
																			"src": "1964:53:2"
																		}
																	],
																	"id": 422,
																	"name": "Return",
																	"src": "1957:60:2"
																}
															],
															"id": 423,
															"name": "Block",
															"src": "1943:85:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 414
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "balanceOf",
																						"referencedDeclaration": 149,
																						"type": "function (address) view returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1225,
																								"type": "contract super DiverseTetherToken",
																								"value": "super"
																							},
																							"id": 424,
																							"name": "Identifier",
																							"src": "2055:5:2"
																						}
																					],
																					"id": 425,
																					"name": "MemberAccess",
																					"src": "2055:15:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 410,
																						"type": "address",
																						"value": "who"
																					},
																					"id": 426,
																					"name": "Identifier",
																					"src": "2071:3:2"
																				}
																			],
																			"id": 427,
																			"name": "FunctionCall",
																			"src": "2055:20:2"
																		}
																	],
																	"id": 428,
																	"name": "Return",
																	"src": "2048:27:2"
																}
															],
															"id": 429,
															"name": "Block",
															"src": "2034:52:2"
														}
													],
													"id": 430,
													"name": "IfStatement",
													"src": "1927:159:2"
												}
											],
											"id": 431,
											"name": "Block",
											"src": "1917:175:2"
										}
									],
									"id": 432,
									"name": "FunctionDefinition",
									"src": "1854:238:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "approve",
										"payable": false,
										"scope": 668,
										"stateMutability": "nonpayable",
										"superFunction": 1129,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 465,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 433,
															"name": "ElementaryTypeName",
															"src": "2191:7:2"
														}
													],
													"id": 434,
													"name": "VariableDeclaration",
													"src": "2191:16:2"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 465,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 435,
															"name": "ElementaryTypeName",
															"src": "2209:4:2"
														}
													],
													"id": 436,
													"name": "VariableDeclaration",
													"src": "2209:11:2"
												}
											],
											"id": 437,
											"name": "ParameterList",
											"src": "2190:31:2"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 443,
											"name": "ParameterList",
											"src": "2253:0:2"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 39,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 438,
													"name": "Identifier",
													"src": "2229:15:2"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 64"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 439,
															"name": "Literal",
															"src": "2245:1:2"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 440,
															"name": "Literal",
															"src": "2249:2:2"
														}
													],
													"id": 441,
													"name": "BinaryOperation",
													"src": "2245:6:2"
												}
											],
											"id": 442,
											"name": "ModifierInvocation",
											"src": "2229:23:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 290,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 444,
															"name": "Identifier",
															"src": "2267:10:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 443
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "approveByLegacy",
																						"referencedDeclaration": 1182,
																						"type": "function (address,address,uint256) external"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1183,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 445,
																									"name": "Identifier",
																									"src": "2300:21:2"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 288,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 446,
																									"name": "Identifier",
																									"src": "2322:15:2"
																								}
																							],
																							"id": 447,
																							"name": "FunctionCall",
																							"src": "2300:38:2"
																						}
																					],
																					"id": 448,
																					"name": "MemberAccess",
																					"src": "2300:54:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1186,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 449,
																							"name": "Identifier",
																							"src": "2355:3:2"
																						}
																					],
																					"id": 450,
																					"name": "MemberAccess",
																					"src": "2355:10:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 434,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 451,
																					"name": "Identifier",
																					"src": "2367:8:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 436,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 452,
																					"name": "Identifier",
																					"src": "2377:6:2"
																				}
																			],
																			"id": 453,
																			"name": "FunctionCall",
																			"src": "2300:84:2"
																		}
																	],
																	"id": 454,
																	"name": "Return",
																	"src": "2293:91:2"
																}
															],
															"id": 455,
															"name": "Block",
															"src": "2279:116:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 443
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "approve",
																						"referencedDeclaration": 1129,
																						"type": "function (address,uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1225,
																								"type": "contract super DiverseTetherToken",
																								"value": "super"
																							},
																							"id": 456,
																							"name": "Identifier",
																							"src": "2422:5:2"
																						}
																					],
																					"id": 457,
																					"name": "MemberAccess",
																					"src": "2422:13:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 434,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 458,
																					"name": "Identifier",
																					"src": "2436:8:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 436,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 459,
																					"name": "Identifier",
																					"src": "2446:6:2"
																				}
																			],
																			"id": 460,
																			"name": "FunctionCall",
																			"src": "2422:31:2"
																		}
																	],
																	"id": 461,
																	"name": "Return",
																	"src": "2415:38:2"
																}
															],
															"id": 462,
															"name": "Block",
															"src": "2401:63:2"
														}
													],
													"id": 463,
													"name": "IfStatement",
													"src": "2263:201:2"
												}
											],
											"id": 464,
											"name": "Block",
											"src": "2253:217:2"
										}
									],
									"id": 465,
									"name": "FunctionDefinition",
									"src": "2174:296:2"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "allowance",
										"payable": false,
										"scope": 668,
										"stateMutability": "view",
										"superFunction": 1145,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 493,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 466,
															"name": "ElementaryTypeName",
															"src": "2571:7:2"
														}
													],
													"id": 467,
													"name": "VariableDeclaration",
													"src": "2571:14:2"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 493,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 468,
															"name": "ElementaryTypeName",
															"src": "2587:7:2"
														}
													],
													"id": 469,
													"name": "VariableDeclaration",
													"src": "2587:16:2"
												}
											],
											"id": 470,
											"name": "ParameterList",
											"src": "2570:34:2"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "remaining",
														"scope": 493,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 471,
															"name": "ElementaryTypeName",
															"src": "2630:4:2"
														}
													],
													"id": 472,
													"name": "VariableDeclaration",
													"src": "2630:14:2"
												}
											],
											"id": 473,
											"name": "ParameterList",
											"src": "2629:16:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 290,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 474,
															"name": "Identifier",
															"src": "2660:10:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 473
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "allowance",
																						"referencedDeclaration": 1145,
																						"type": "function (address,address) view external returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract StandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1146,
																										"type": "type(contract StandardToken)",
																										"value": "StandardToken"
																									},
																									"id": 475,
																									"name": "Identifier",
																									"src": "2693:13:2"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 288,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 476,
																									"name": "Identifier",
																									"src": "2707:15:2"
																								}
																							],
																							"id": 477,
																							"name": "FunctionCall",
																							"src": "2693:30:2"
																						}
																					],
																					"id": 478,
																					"name": "MemberAccess",
																					"src": "2693:40:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 467,
																						"type": "address",
																						"value": "_owner"
																					},
																					"id": 479,
																					"name": "Identifier",
																					"src": "2734:6:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 469,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 480,
																					"name": "Identifier",
																					"src": "2742:8:2"
																				}
																			],
																			"id": 481,
																			"name": "FunctionCall",
																			"src": "2693:58:2"
																		}
																	],
																	"id": 482,
																	"name": "Return",
																	"src": "2686:65:2"
																}
															],
															"id": 483,
															"name": "Block",
															"src": "2672:90:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 473
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "allowance",
																						"referencedDeclaration": 1145,
																						"type": "function (address,address) view returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1225,
																								"type": "contract super DiverseTetherToken",
																								"value": "super"
																							},
																							"id": 484,
																							"name": "Identifier",
																							"src": "2789:5:2"
																						}
																					],
																					"id": 485,
																					"name": "MemberAccess",
																					"src": "2789:15:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 467,
																						"type": "address",
																						"value": "_owner"
																					},
																					"id": 486,
																					"name": "Identifier",
																					"src": "2805:6:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 469,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 487,
																					"name": "Identifier",
																					"src": "2813:8:2"
																				}
																			],
																			"id": 488,
																			"name": "FunctionCall",
																			"src": "2789:33:2"
																		}
																	],
																	"id": 489,
																	"name": "Return",
																	"src": "2782:40:2"
																}
															],
															"id": 490,
															"name": "Block",
															"src": "2768:65:2"
														}
													],
													"id": 491,
													"name": "IfStatement",
													"src": "2656:177:2"
												}
											],
											"id": 492,
											"name": "Block",
											"src": "2646:193:2"
										}
									],
									"id": 493,
									"name": "FunctionDefinition",
									"src": "2552:287:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "deprecate",
										"payable": false,
										"scope": 668,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_upgradedAddress",
														"scope": 513,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 494,
															"name": "ElementaryTypeName",
															"src": "2921:7:2"
														}
													],
													"id": 495,
													"name": "VariableDeclaration",
													"src": "2921:24:2"
												}
											],
											"id": 496,
											"name": "ParameterList",
											"src": "2920:26:2"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 499,
											"name": "ParameterList",
											"src": "2964:0:2"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 765,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 497,
													"name": "Identifier",
													"src": "2954:9:2"
												}
											],
											"id": 498,
											"name": "ModifierInvocation",
											"src": "2954:9:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 290,
																		"type": "bool",
																		"value": "deprecated"
																	},
																	"id": 500,
																	"name": "Identifier",
																	"src": "2974:10:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 501,
																	"name": "Literal",
																	"src": "2987:4:2"
																}
															],
															"id": 502,
															"name": "Assignment",
															"src": "2974:17:2"
														}
													],
													"id": 503,
													"name": "ExpressionStatement",
													"src": "2974:17:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 288,
																		"type": "address",
																		"value": "upgradedAddress"
																	},
																	"id": 504,
																	"name": "Identifier",
																	"src": "3001:15:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 495,
																		"type": "address",
																		"value": "_upgradedAddress"
																	},
																	"id": 505,
																	"name": "Identifier",
																	"src": "3019:16:2"
																}
															],
															"id": 506,
															"name": "Assignment",
															"src": "3001:34:2"
														}
													],
													"id": 507,
													"name": "ExpressionStatement",
													"src": "3001:34:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 661,
																		"type": "function (address)",
																		"value": "Deprecate"
																	},
																	"id": 508,
																	"name": "Identifier",
																	"src": "3045:9:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 495,
																		"type": "address",
																		"value": "_upgradedAddress"
																	},
																	"id": 509,
																	"name": "Identifier",
																	"src": "3055:16:2"
																}
															],
															"id": 510,
															"name": "FunctionCall",
															"src": "3045:27:2"
														}
													],
													"id": 511,
													"name": "ExpressionStatement",
													"src": "3045:27:2"
												}
											],
											"id": 512,
											"name": "Block",
											"src": "2964:115:2"
										}
									],
									"id": 513,
									"name": "FunctionDefinition",
									"src": "2902:177:2"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "totalSupply",
										"payable": false,
										"scope": 668,
										"stateMutability": "view",
										"superFunction": 716,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 514,
											"name": "ParameterList",
											"src": "3162:2:2"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 531,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 515,
															"name": "ElementaryTypeName",
															"src": "3190:4:2"
														}
													],
													"id": 516,
													"name": "VariableDeclaration",
													"src": "3190:4:2"
												}
											],
											"id": 517,
											"name": "ParameterList",
											"src": "3189:6:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 290,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 518,
															"name": "Identifier",
															"src": "3210:10:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 517
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"arguments": [
																					null
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							null
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "totalSupply",
																						"referencedDeclaration": 716,
																						"type": "function () view external returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract StandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1146,
																										"type": "type(contract StandardToken)",
																										"value": "StandardToken"
																									},
																									"id": 519,
																									"name": "Identifier",
																									"src": "3243:13:2"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 288,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 520,
																									"name": "Identifier",
																									"src": "3257:15:2"
																								}
																							],
																							"id": 521,
																							"name": "FunctionCall",
																							"src": "3243:30:2"
																						}
																					],
																					"id": 522,
																					"name": "MemberAccess",
																					"src": "3243:42:2"
																				}
																			],
																			"id": 523,
																			"name": "FunctionCall",
																			"src": "3243:44:2"
																		}
																	],
																	"id": 524,
																	"name": "Return",
																	"src": "3236:51:2"
																}
															],
															"id": 525,
															"name": "Block",
															"src": "3222:76:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 517
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 711,
																				"type": "uint256",
																				"value": "_totalSupply"
																			},
																			"id": 526,
																			"name": "Identifier",
																			"src": "3325:12:2"
																		}
																	],
																	"id": 527,
																	"name": "Return",
																	"src": "3318:19:2"
																}
															],
															"id": 528,
															"name": "Block",
															"src": "3304:44:2"
														}
													],
													"id": 529,
													"name": "IfStatement",
													"src": "3206:142:2"
												}
											],
											"id": 530,
											"name": "Block",
											"src": "3196:158:2"
										}
									],
									"id": 531,
									"name": "FunctionDefinition",
									"src": "3142:212:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "issue",
										"payable": false,
										"scope": 668,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "amount",
														"scope": 573,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 532,
															"name": "ElementaryTypeName",
															"src": "3527:4:2"
														}
													],
													"id": 533,
													"name": "VariableDeclaration",
													"src": "3527:11:2"
												}
											],
											"id": 534,
											"name": "ParameterList",
											"src": "3526:13:2"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 537,
											"name": "ParameterList",
											"src": "3557:0:2"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 765,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 535,
													"name": "Identifier",
													"src": "3547:9:2"
												}
											],
											"id": 536,
											"name": "ModifierInvocation",
											"src": "3547:9:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1204,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 538,
																	"name": "Identifier",
																	"src": "3567:7:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "+",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 711,
																						"type": "uint256",
																						"value": "_totalSupply"
																					},
																					"id": 539,
																					"name": "Identifier",
																					"src": "3575:12:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 533,
																						"type": "uint256",
																						"value": "amount"
																					},
																					"id": 540,
																					"name": "Identifier",
																					"src": "3590:6:2"
																				}
																			],
																			"id": 541,
																			"name": "BinaryOperation",
																			"src": "3575:21:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 711,
																				"type": "uint256",
																				"value": "_totalSupply"
																			},
																			"id": 542,
																			"name": "Identifier",
																			"src": "3599:12:2"
																		}
																	],
																	"id": 543,
																	"name": "BinaryOperation",
																	"src": "3575:36:2"
																}
															],
															"id": 544,
															"name": "FunctionCall",
															"src": "3567:45:2"
														}
													],
													"id": 545,
													"name": "ExpressionStatement",
													"src": "3567:45:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1204,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 546,
																	"name": "Identifier",
																	"src": "3622:7:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "+",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 15,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 547,
																							"name": "Identifier",
																							"src": "3630:8:2"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 745,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 548,
																							"name": "Identifier",
																							"src": "3639:5:2"
																						}
																					],
																					"id": 549,
																					"name": "IndexAccess",
																					"src": "3630:15:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 533,
																						"type": "uint256",
																						"value": "amount"
																					},
																					"id": 550,
																					"name": "Identifier",
																					"src": "3648:6:2"
																				}
																			],
																			"id": 551,
																			"name": "BinaryOperation",
																			"src": "3630:24:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 15,
																						"type": "mapping(address => uint256)",
																						"value": "balances"
																					},
																					"id": 552,
																					"name": "Identifier",
																					"src": "3657:8:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 745,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 553,
																					"name": "Identifier",
																					"src": "3666:5:2"
																				}
																			],
																			"id": 554,
																			"name": "IndexAccess",
																			"src": "3657:15:2"
																		}
																	],
																	"id": 555,
																	"name": "BinaryOperation",
																	"src": "3630:42:2"
																}
															],
															"id": 556,
															"name": "FunctionCall",
															"src": "3622:51:2"
														}
													],
													"id": 557,
													"name": "ExpressionStatement",
													"src": "3622:51:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 15,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 558,
																			"name": "Identifier",
																			"src": "3684:8:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 745,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 559,
																			"name": "Identifier",
																			"src": "3693:5:2"
																		}
																	],
																	"id": 560,
																	"name": "IndexAccess",
																	"src": "3684:15:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 533,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 561,
																	"name": "Identifier",
																	"src": "3703:6:2"
																}
															],
															"id": 562,
															"name": "Assignment",
															"src": "3684:25:2"
														}
													],
													"id": 563,
													"name": "ExpressionStatement",
													"src": "3684:25:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 711,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 564,
																	"name": "Identifier",
																	"src": "3719:12:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 533,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 565,
																	"name": "Identifier",
																	"src": "3735:6:2"
																}
															],
															"id": 566,
															"name": "Assignment",
															"src": "3719:22:2"
														}
													],
													"id": 567,
													"name": "ExpressionStatement",
													"src": "3719:22:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 653,
																		"type": "function (uint256)",
																		"value": "Issue"
																	},
																	"id": 568,
																	"name": "Identifier",
																	"src": "3751:5:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 533,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 569,
																	"name": "Identifier",
																	"src": "3757:6:2"
																}
															],
															"id": 570,
															"name": "FunctionCall",
															"src": "3751:13:2"
														}
													],
													"id": 571,
													"name": "ExpressionStatement",
													"src": "3751:13:2"
												}
											],
											"id": 572,
											"name": "Block",
											"src": "3557:214:2"
										}
									],
									"id": 573,
									"name": "FunctionDefinition",
									"src": "3512:259:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "redeem",
										"payable": false,
										"scope": 668,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "amount",
														"scope": 609,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 574,
															"name": "ElementaryTypeName",
															"src": "4011:4:2"
														}
													],
													"id": 575,
													"name": "VariableDeclaration",
													"src": "4011:11:2"
												}
											],
											"id": 576,
											"name": "ParameterList",
											"src": "4010:13:2"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 579,
											"name": "ParameterList",
											"src": "4041:0:2"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 765,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 577,
													"name": "Identifier",
													"src": "4031:9:2"
												}
											],
											"id": 578,
											"name": "ModifierInvocation",
											"src": "4031:9:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1204,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 580,
																	"name": "Identifier",
																	"src": "4051:7:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 711,
																				"type": "uint256",
																				"value": "_totalSupply"
																			},
																			"id": 581,
																			"name": "Identifier",
																			"src": "4059:12:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 575,
																				"type": "uint256",
																				"value": "amount"
																			},
																			"id": 582,
																			"name": "Identifier",
																			"src": "4075:6:2"
																		}
																	],
																	"id": 583,
																	"name": "BinaryOperation",
																	"src": "4059:22:2"
																}
															],
															"id": 584,
															"name": "FunctionCall",
															"src": "4051:31:2"
														}
													],
													"id": 585,
													"name": "ExpressionStatement",
													"src": "4051:31:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1204,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 586,
																	"name": "Identifier",
																	"src": "4092:7:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 15,
																						"type": "mapping(address => uint256)",
																						"value": "balances"
																					},
																					"id": 587,
																					"name": "Identifier",
																					"src": "4100:8:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 745,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 588,
																					"name": "Identifier",
																					"src": "4109:5:2"
																				}
																			],
																			"id": 589,
																			"name": "IndexAccess",
																			"src": "4100:15:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 575,
																				"type": "uint256",
																				"value": "amount"
																			},
																			"id": 590,
																			"name": "Identifier",
																			"src": "4119:6:2"
																		}
																	],
																	"id": 591,
																	"name": "BinaryOperation",
																	"src": "4100:25:2"
																}
															],
															"id": 592,
															"name": "FunctionCall",
															"src": "4092:34:2"
														}
													],
													"id": 593,
													"name": "ExpressionStatement",
													"src": "4092:34:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 711,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 594,
																	"name": "Identifier",
																	"src": "4137:12:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 575,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 595,
																	"name": "Identifier",
																	"src": "4153:6:2"
																}
															],
															"id": 596,
															"name": "Assignment",
															"src": "4137:22:2"
														}
													],
													"id": 597,
													"name": "ExpressionStatement",
													"src": "4137:22:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 15,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 598,
																			"name": "Identifier",
																			"src": "4169:8:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 745,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 599,
																			"name": "Identifier",
																			"src": "4178:5:2"
																		}
																	],
																	"id": 600,
																	"name": "IndexAccess",
																	"src": "4169:15:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 575,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 601,
																	"name": "Identifier",
																	"src": "4188:6:2"
																}
															],
															"id": 602,
															"name": "Assignment",
															"src": "4169:25:2"
														}
													],
													"id": 603,
													"name": "ExpressionStatement",
													"src": "4169:25:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 657,
																		"type": "function (uint256)",
																		"value": "Redeem"
																	},
																	"id": 604,
																	"name": "Identifier",
																	"src": "4204:6:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 575,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 605,
																	"name": "Identifier",
																	"src": "4211:6:2"
																}
															],
															"id": 606,
															"name": "FunctionCall",
															"src": "4204:14:2"
														}
													],
													"id": 607,
													"name": "ExpressionStatement",
													"src": "4204:14:2"
												}
											],
											"id": 608,
											"name": "Block",
											"src": "4041:184:2"
										}
									],
									"id": 609,
									"name": "FunctionDefinition",
									"src": "3995:230:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "setParams",
										"payable": false,
										"scope": 668,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "newBasisPoints",
														"scope": 649,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 610,
															"name": "ElementaryTypeName",
															"src": "4250:4:2"
														}
													],
													"id": 611,
													"name": "VariableDeclaration",
													"src": "4250:19:2"
												},
												{
													"attributes": {
														"constant": false,
														"name": "newMaxFee",
														"scope": 649,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 612,
															"name": "ElementaryTypeName",
															"src": "4271:4:2"
														}
													],
													"id": 613,
													"name": "VariableDeclaration",
													"src": "4271:14:2"
												}
											],
											"id": 614,
											"name": "ParameterList",
											"src": "4249:37:2"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 617,
											"name": "ParameterList",
											"src": "4304:0:2"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 765,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 615,
													"name": "Identifier",
													"src": "4294:9:2"
												}
											],
											"id": 616,
											"name": "ModifierInvocation",
											"src": "4294:9:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1204,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 618,
																	"name": "Identifier",
																	"src": "4402:7:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 611,
																				"type": "uint256",
																				"value": "newBasisPoints"
																			},
																			"id": 619,
																			"name": "Identifier",
																			"src": "4410:14:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "3230",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 20",
																				"value": "20"
																			},
																			"id": 620,
																			"name": "Literal",
																			"src": "4427:2:2"
																		}
																	],
																	"id": 621,
																	"name": "BinaryOperation",
																	"src": "4410:19:2"
																}
															],
															"id": 622,
															"name": "FunctionCall",
															"src": "4402:28:2"
														}
													],
													"id": 623,
													"name": "ExpressionStatement",
													"src": "4402:28:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1204,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 624,
																	"name": "Identifier",
																	"src": "4440:7:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 613,
																				"type": "uint256",
																				"value": "newMaxFee"
																			},
																			"id": 625,
																			"name": "Identifier",
																			"src": "4448:9:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "3530",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 50",
																				"value": "50"
																			},
																			"id": 626,
																			"name": "Literal",
																			"src": "4460:2:2"
																		}
																	],
																	"id": 627,
																	"name": "BinaryOperation",
																	"src": "4448:14:2"
																}
															],
															"id": 628,
															"name": "FunctionCall",
															"src": "4440:23:2"
														}
													],
													"id": 629,
													"name": "ExpressionStatement",
													"src": "4440:23:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 18,
																		"type": "uint256",
																		"value": "basisPointsRate"
																	},
																	"id": 630,
																	"name": "Identifier",
																	"src": "4474:15:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 611,
																		"type": "uint256",
																		"value": "newBasisPoints"
																	},
																	"id": 631,
																	"name": "Identifier",
																	"src": "4492:14:2"
																}
															],
															"id": 632,
															"name": "Assignment",
															"src": "4474:32:2"
														}
													],
													"id": 633,
													"name": "ExpressionStatement",
													"src": "4474:32:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 21,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 634,
																	"name": "Identifier",
																	"src": "4516:10:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "mul",
																				"referencedDeclaration": 880,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 613,
																						"type": "uint256",
																						"value": "newMaxFee"
																					},
																					"id": 635,
																					"name": "Identifier",
																					"src": "4529:9:2"
																				}
																			],
																			"id": 636,
																			"name": "MemberAccess",
																			"src": "4529:13:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "**",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "3130",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "number",
																						"type": "int_const 10",
																						"value": "10"
																					},
																					"id": 637,
																					"name": "Literal",
																					"src": "4543:2:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 286,
																						"type": "uint256",
																						"value": "decimals"
																					},
																					"id": 638,
																					"name": "Identifier",
																					"src": "4547:8:2"
																				}
																			],
																			"id": 639,
																			"name": "BinaryOperation",
																			"src": "4543:12:2"
																		}
																	],
																	"id": 640,
																	"name": "FunctionCall",
																	"src": "4529:27:2"
																}
															],
															"id": 641,
															"name": "Assignment",
															"src": "4516:40:2"
														}
													],
													"id": 642,
													"name": "ExpressionStatement",
													"src": "4516:40:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 667,
																		"type": "function (uint256,uint256)",
																		"value": "Params"
																	},
																	"id": 643,
																	"name": "Identifier",
																	"src": "4567:6:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 18,
																		"type": "uint256",
																		"value": "basisPointsRate"
																	},
																	"id": 644,
																	"name": "Identifier",
																	"src": "4574:15:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 21,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 645,
																	"name": "Identifier",
																	"src": "4591:10:2"
																}
															],
															"id": 646,
															"name": "FunctionCall",
															"src": "4567:35:2"
														}
													],
													"id": 647,
													"name": "ExpressionStatement",
													"src": "4567:35:2"
												}
											],
											"id": 648,
											"name": "Block",
											"src": "4304:305:2"
										}
									],
									"id": 649,
									"name": "FunctionDefinition",
									"src": "4231:378:2"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Issue"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "amount",
														"scope": 653,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 650,
															"name": "ElementaryTypeName",
															"src": "4667:4:2"
														}
													],
													"id": 651,
													"name": "VariableDeclaration",
													"src": "4667:11:2"
												}
											],
											"id": 652,
											"name": "ParameterList",
											"src": "4666:13:2"
										}
									],
									"id": 653,
									"name": "EventDefinition",
									"src": "4655:25:2"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Redeem"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "amount",
														"scope": 657,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 654,
															"name": "ElementaryTypeName",
															"src": "4738:4:2"
														}
													],
													"id": 655,
													"name": "VariableDeclaration",
													"src": "4738:11:2"
												}
											],
											"id": 656,
											"name": "ParameterList",
											"src": "4737:13:2"
										}
									],
									"id": 657,
									"name": "EventDefinition",
									"src": "4725:26:2"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Deprecate"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "newAddress",
														"scope": 661,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 658,
															"name": "ElementaryTypeName",
															"src": "4815:7:2"
														}
													],
													"id": 659,
													"name": "VariableDeclaration",
													"src": "4815:18:2"
												}
											],
											"id": 660,
											"name": "ParameterList",
											"src": "4814:20:2"
										}
									],
									"id": 661,
									"name": "EventDefinition",
									"src": "4799:36:2"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Params"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "feeBasisPoints",
														"scope": 667,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 662,
															"name": "ElementaryTypeName",
															"src": "4895:4:2"
														}
													],
													"id": 663,
													"name": "VariableDeclaration",
													"src": "4895:19:2"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "maxFee",
														"scope": 667,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 664,
															"name": "ElementaryTypeName",
															"src": "4916:4:2"
														}
													],
													"id": 665,
													"name": "VariableDeclaration",
													"src": "4916:11:2"
												}
											],
											"id": 666,
											"name": "ParameterList",
											"src": "4894:34:2"
										}
									],
									"id": 667,
									"name": "EventDefinition",
									"src": "4882:47:2"
								}
							],
							"id": 668,
							"name": "ContractDefinition",
							"src": "178:4753:2"
						}
					],
					"id": 669,
					"name": "SourceUnit",
					"src": "32:4900:2"
				}
			},
			"contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							707
						]
					},
					"id": 708,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 670,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "contracts/ERC20Basic.sol",
							"file": "./ERC20Basic.sol",
							"id": 671,
							"nodeType": "ImportDirective",
							"scope": 708,
							"sourceUnit": 742,
							"src": "58:26:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 672,
										"name": "ERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 741,
										"src": "193:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$741",
											"typeString": "contract ERC20Basic"
										}
									},
									"id": 673,
									"nodeType": "InheritanceSpecifier",
									"src": "193:10:3"
								}
							],
							"contractDependencies": [
								741
							],
							"contractKind": "contract",
							"documentation": "@title ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
							"fullyImplemented": false,
							"id": 707,
							"linearizedBaseContracts": [
								707,
								741
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"id": 682,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "229:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "244:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "244:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "228:32:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "286:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "286:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "285:6:3"
									},
									"scope": 707,
									"src": "210:82:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 691,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "319:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "345:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "345:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "318:38:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:0:3"
									},
									"scope": 707,
									"src": "297:67:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 698,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "386:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "403:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "403:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "385:29:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "421:0:3"
									},
									"scope": 707,
									"src": "369:53:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 706,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "442:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "465:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "490:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "490:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "441:60:3"
									},
									"src": "427:75:3"
								}
							],
							"scope": 708,
							"src": "175:329:3"
						}
					],
					"src": "32:473:3"
				},
				"id": 3,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/ERC20.sol",
						"exportedSymbols": {
							"ERC20": [
								707
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 670,
							"name": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"attributes": {
								"SourceUnit": 742,
								"absolutePath": "contracts/ERC20Basic.sol",
								"file": "./ERC20Basic.sol",
								"scope": 708,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 671,
							"name": "ImportDirective",
							"src": "58:26:3"
						},
						{
							"attributes": {
								"contractDependencies": [
									741
								],
								"contractKind": "contract",
								"documentation": "@title ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									707,
									741
								],
								"name": "ERC20",
								"scope": 708
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "ERC20Basic",
												"referencedDeclaration": 741,
												"type": "contract ERC20Basic"
											},
											"id": 672,
											"name": "UserDefinedTypeName",
											"src": "193:10:3"
										}
									],
									"id": 673,
									"name": "InheritanceSpecifier",
									"src": "193:10:3"
								},
								{
									"attributes": {
										"body": null,
										"constant": true,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "allowance",
										"payable": false,
										"scope": 707,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "owner",
														"scope": 682,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 674,
															"name": "ElementaryTypeName",
															"src": "229:7:3"
														}
													],
													"id": 675,
													"name": "VariableDeclaration",
													"src": "229:13:3"
												},
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 682,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 676,
															"name": "ElementaryTypeName",
															"src": "244:7:3"
														}
													],
													"id": 677,
													"name": "VariableDeclaration",
													"src": "244:15:3"
												}
											],
											"id": 678,
											"name": "ParameterList",
											"src": "228:32:3"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 682,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 679,
															"name": "ElementaryTypeName",
															"src": "286:4:3"
														}
													],
													"id": 680,
													"name": "VariableDeclaration",
													"src": "286:4:3"
												}
											],
											"id": 681,
											"name": "ParameterList",
											"src": "285:6:3"
										}
									],
									"id": 682,
									"name": "FunctionDefinition",
									"src": "210:82:3"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transferFrom",
										"payable": false,
										"scope": 707,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 691,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 683,
															"name": "ElementaryTypeName",
															"src": "319:7:3"
														}
													],
													"id": 684,
													"name": "VariableDeclaration",
													"src": "319:12:3"
												},
												{
													"attributes": {
														"constant": false,
														"name": "to",
														"scope": 691,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 685,
															"name": "ElementaryTypeName",
															"src": "333:7:3"
														}
													],
													"id": 686,
													"name": "VariableDeclaration",
													"src": "333:10:3"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 691,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 687,
															"name": "ElementaryTypeName",
															"src": "345:4:3"
														}
													],
													"id": 688,
													"name": "VariableDeclaration",
													"src": "345:10:3"
												}
											],
											"id": 689,
											"name": "ParameterList",
											"src": "318:38:3"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 690,
											"name": "ParameterList",
											"src": "363:0:3"
										}
									],
									"id": 691,
									"name": "FunctionDefinition",
									"src": "297:67:3"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "approve",
										"payable": false,
										"scope": 707,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 698,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 692,
															"name": "ElementaryTypeName",
															"src": "386:7:3"
														}
													],
													"id": 693,
													"name": "VariableDeclaration",
													"src": "386:15:3"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 698,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 694,
															"name": "ElementaryTypeName",
															"src": "403:4:3"
														}
													],
													"id": 695,
													"name": "VariableDeclaration",
													"src": "403:10:3"
												}
											],
											"id": 696,
											"name": "ParameterList",
											"src": "385:29:3"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 697,
											"name": "ParameterList",
											"src": "421:0:3"
										}
									],
									"id": 698,
									"name": "FunctionDefinition",
									"src": "369:53:3"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Approval"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "owner",
														"scope": 706,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 699,
															"name": "ElementaryTypeName",
															"src": "442:7:3"
														}
													],
													"id": 700,
													"name": "VariableDeclaration",
													"src": "442:21:3"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "spender",
														"scope": 706,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 701,
															"name": "ElementaryTypeName",
															"src": "465:7:3"
														}
													],
													"id": 702,
													"name": "VariableDeclaration",
													"src": "465:23:3"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "value",
														"scope": 706,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 703,
															"name": "ElementaryTypeName",
															"src": "490:4:3"
														}
													],
													"id": 704,
													"name": "VariableDeclaration",
													"src": "490:10:3"
												}
											],
											"id": 705,
											"name": "ParameterList",
											"src": "441:60:3"
										}
									],
									"id": 706,
									"name": "EventDefinition",
									"src": "427:75:3"
								}
							],
							"id": 707,
							"name": "ContractDefinition",
							"src": "175:329:3"
						}
					],
					"id": 708,
					"name": "SourceUnit",
					"src": "32:473:3"
				}
			},
			"contracts/ERC20Basic.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20Basic.sol",
					"exportedSymbols": {
						"ERC20Basic": [
							741
						]
					},
					"id": 742,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 709,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title ERC20Basic\n@dev Simpler version of ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
							"fullyImplemented": false,
							"id": 741,
							"linearizedBaseContracts": [
								741
							],
							"name": "ERC20Basic",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 711,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 741,
									"src": "211:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 710,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "211:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 716,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "261:2:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "289:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "289:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "288:6:4"
									},
									"scope": 741,
									"src": "241:54:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 723,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "319:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "318:13:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "357:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "357:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "356:6:4"
									},
									"scope": 741,
									"src": "300:63:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 732,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "386:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "398:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "398:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "385:24:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "427:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "427:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "426:6:4"
									},
									"scope": 741,
									"src": "368:65:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 740,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "453:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "475:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "495:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "495:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "452:54:4"
									},
									"src": "438:69:4"
								}
							],
							"scope": 742,
							"src": "185:324:4"
						}
					],
					"src": "32:478:4"
				},
				"id": 4,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/ERC20Basic.sol",
						"exportedSymbols": {
							"ERC20Basic": [
								741
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 709,
							"name": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": "@title ERC20Basic\n@dev Simpler version of ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									741
								],
								"name": "ERC20Basic",
								"scope": 742
							},
							"children": [
								{
									"attributes": {
										"constant": false,
										"name": "_totalSupply",
										"scope": 741,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 710,
											"name": "ElementaryTypeName",
											"src": "211:4:4"
										}
									],
									"id": 711,
									"name": "VariableDeclaration",
									"src": "211:24:4"
								},
								{
									"attributes": {
										"body": null,
										"constant": true,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "totalSupply",
										"payable": false,
										"scope": 741,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 712,
											"name": "ParameterList",
											"src": "261:2:4"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 716,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 713,
															"name": "ElementaryTypeName",
															"src": "289:4:4"
														}
													],
													"id": 714,
													"name": "VariableDeclaration",
													"src": "289:4:4"
												}
											],
											"id": 715,
											"name": "ParameterList",
											"src": "288:6:4"
										}
									],
									"id": 716,
									"name": "FunctionDefinition",
									"src": "241:54:4"
								},
								{
									"attributes": {
										"body": null,
										"constant": true,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "balanceOf",
										"payable": false,
										"scope": 741,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "who",
														"scope": 723,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 717,
															"name": "ElementaryTypeName",
															"src": "319:7:4"
														}
													],
													"id": 718,
													"name": "VariableDeclaration",
													"src": "319:11:4"
												}
											],
											"id": 719,
											"name": "ParameterList",
											"src": "318:13:4"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 723,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 720,
															"name": "ElementaryTypeName",
															"src": "357:4:4"
														}
													],
													"id": 721,
													"name": "VariableDeclaration",
													"src": "357:4:4"
												}
											],
											"id": 722,
											"name": "ParameterList",
											"src": "356:6:4"
										}
									],
									"id": 723,
									"name": "FunctionDefinition",
									"src": "300:63:4"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transfer",
										"payable": false,
										"scope": 741,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "external"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "to",
														"scope": 732,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 724,
															"name": "ElementaryTypeName",
															"src": "386:7:4"
														}
													],
													"id": 725,
													"name": "VariableDeclaration",
													"src": "386:10:4"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 732,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 726,
															"name": "ElementaryTypeName",
															"src": "398:4:4"
														}
													],
													"id": 727,
													"name": "VariableDeclaration",
													"src": "398:10:4"
												}
											],
											"id": 728,
											"name": "ParameterList",
											"src": "385:24:4"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 732,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 729,
															"name": "ElementaryTypeName",
															"src": "427:4:4"
														}
													],
													"id": 730,
													"name": "VariableDeclaration",
													"src": "427:4:4"
												}
											],
											"id": 731,
											"name": "ParameterList",
											"src": "426:6:4"
										}
									],
									"id": 732,
									"name": "FunctionDefinition",
									"src": "368:65:4"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Transfer"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "from",
														"scope": 740,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 733,
															"name": "ElementaryTypeName",
															"src": "453:7:4"
														}
													],
													"id": 734,
													"name": "VariableDeclaration",
													"src": "453:20:4"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "to",
														"scope": 740,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 735,
															"name": "ElementaryTypeName",
															"src": "475:7:4"
														}
													],
													"id": 736,
													"name": "VariableDeclaration",
													"src": "475:18:4"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "value",
														"scope": 740,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 737,
															"name": "ElementaryTypeName",
															"src": "495:4:4"
														}
													],
													"id": 738,
													"name": "VariableDeclaration",
													"src": "495:10:4"
												}
											],
											"id": 739,
											"name": "ParameterList",
											"src": "452:54:4"
										}
									],
									"id": 740,
									"name": "EventDefinition",
									"src": "438:69:4"
								}
							],
							"id": 741,
							"name": "ContractDefinition",
							"src": "185:324:4"
						}
					],
					"id": 742,
					"name": "SourceUnit",
					"src": "32:478:4"
				}
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							785
						]
					},
					"id": 786,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 743,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".",
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 745,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 785,
									"src": "271:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 744,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "271:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "451:35:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 748,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "461:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 749,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "469:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "469:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "461:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "461:18:5"
											}
										]
									},
									"id": 754,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Ownable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "441:2:5"
									},
									"payable": false,
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:0:5"
									},
									"scope": 785,
									"src": "425:61:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "597:56:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 757,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "615:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "615:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 759,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "629:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "615:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 756,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "607:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "607:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "607:28:5"
											},
											{
												"id": 763,
												"nodeType": "PlaceholderStatement",
												"src": "645:1:5"
											}
										]
									},
									"id": 765,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:2:5"
									},
									"src": "576:77:5",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "883:85:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 772,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "897:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "917:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "909:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "909:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "897:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 782,
												"nodeType": "IfStatement",
												"src": "893:69:5",
												"trueBody": {
													"id": 781,
													"nodeType": "Block",
													"src": "921:41:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 777,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "935:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 778,
																	"name": "newOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "943:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "935:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 780,
															"nodeType": "ExpressionStatement",
															"src": "935:16:5"
														}
													]
												}
											}
										]
									},
									"id": 784,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 770,
											"modifierName": {
												"argumentTypes": null,
												"id": 769,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 765,
												"src": "873:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "873:9:5"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "848:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "847:18:5"
									},
									"payable": false,
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "883:0:5"
									},
									"scope": 785,
									"src": "821:147:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 786,
							"src": "248:723:5"
						}
					],
					"src": "32:940:5"
				},
				"id": 5,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/Ownable.sol",
						"exportedSymbols": {
							"Ownable": [
								785
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 743,
							"name": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": "@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									785
								],
								"name": "Ownable",
								"scope": 786
							},
							"children": [
								{
									"attributes": {
										"constant": false,
										"name": "owner",
										"scope": 785,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 744,
											"name": "ElementaryTypeName",
											"src": "271:7:5"
										}
									],
									"id": 745,
									"name": "VariableDeclaration",
									"src": "271:20:5"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "Ownable",
										"payable": false,
										"scope": 785,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 746,
											"name": "ParameterList",
											"src": "441:2:5"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 747,
											"name": "ParameterList",
											"src": "451:0:5"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 745,
																		"type": "address",
																		"value": "owner"
																	},
																	"id": 748,
																	"name": "Identifier",
																	"src": "461:5:5"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1186,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 749,
																			"name": "Identifier",
																			"src": "469:3:5"
																		}
																	],
																	"id": 750,
																	"name": "MemberAccess",
																	"src": "469:10:5"
																}
															],
															"id": 751,
															"name": "Assignment",
															"src": "461:18:5"
														}
													],
													"id": 752,
													"name": "ExpressionStatement",
													"src": "461:18:5"
												}
											],
											"id": 753,
											"name": "Block",
											"src": "451:35:5"
										}
									],
									"id": 754,
									"name": "FunctionDefinition",
									"src": "425:61:5"
								},
								{
									"attributes": {
										"name": "onlyOwner",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 755,
											"name": "ParameterList",
											"src": "594:2:5"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1204,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 756,
																	"name": "Identifier",
																	"src": "607:7:5"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1186,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 757,
																					"name": "Identifier",
																					"src": "615:3:5"
																				}
																			],
																			"id": 758,
																			"name": "MemberAccess",
																			"src": "615:10:5"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 745,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 759,
																			"name": "Identifier",
																			"src": "629:5:5"
																		}
																	],
																	"id": 760,
																	"name": "BinaryOperation",
																	"src": "615:19:5"
																}
															],
															"id": 761,
															"name": "FunctionCall",
															"src": "607:28:5"
														}
													],
													"id": 762,
													"name": "ExpressionStatement",
													"src": "607:28:5"
												},
												{
													"id": 763,
													"name": "PlaceholderStatement",
													"src": "645:1:5"
												}
											],
											"id": 764,
											"name": "Block",
											"src": "597:56:5"
										}
									],
									"id": 765,
									"name": "ModifierDefinition",
									"src": "576:77:5"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transferOwnership",
										"payable": false,
										"scope": 785,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "newOwner",
														"scope": 784,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 766,
															"name": "ElementaryTypeName",
															"src": "848:7:5"
														}
													],
													"id": 767,
													"name": "VariableDeclaration",
													"src": "848:16:5"
												}
											],
											"id": 768,
											"name": "ParameterList",
											"src": "847:18:5"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 771,
											"name": "ParameterList",
											"src": "883:0:5"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 765,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 769,
													"name": "Identifier",
													"src": "873:9:5"
												}
											],
											"id": 770,
											"name": "ModifierInvocation",
											"src": "873:9:5"
										},
										{
											"children": [
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "!=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 767,
																		"type": "address",
																		"value": "newOwner"
																	},
																	"id": 772,
																	"name": "Identifier",
																	"src": "897:8:5"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "address",
																		"type_conversion": true
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"type": "type(address)",
																				"value": "address"
																			},
																			"id": 773,
																			"name": "ElementaryTypeNameExpression",
																			"src": "909:7:5"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 774,
																			"name": "Literal",
																			"src": "917:1:5"
																		}
																	],
																	"id": 775,
																	"name": "FunctionCall",
																	"src": "909:10:5"
																}
															],
															"id": 776,
															"name": "BinaryOperation",
															"src": "897:22:5"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 745,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 777,
																					"name": "Identifier",
																					"src": "935:5:5"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 767,
																						"type": "address",
																						"value": "newOwner"
																					},
																					"id": 778,
																					"name": "Identifier",
																					"src": "943:8:5"
																				}
																			],
																			"id": 779,
																			"name": "Assignment",
																			"src": "935:16:5"
																		}
																	],
																	"id": 780,
																	"name": "ExpressionStatement",
																	"src": "935:16:5"
																}
															],
															"id": 781,
															"name": "Block",
															"src": "921:41:5"
														}
													],
													"id": 782,
													"name": "IfStatement",
													"src": "893:69:5"
												}
											],
											"id": 783,
											"name": "Block",
											"src": "883:85:5"
										}
									],
									"id": 784,
									"name": "FunctionDefinition",
									"src": "821:147:5"
								}
							],
							"id": 785,
							"name": "ContractDefinition",
							"src": "248:723:5"
						}
					],
					"id": 786,
					"name": "SourceUnit",
					"src": "32:940:5"
				}
			},
			"contracts/Pausable.sol": {
				"ast": {
					"absolutePath": "contracts/Pausable.sol",
					"exportedSymbols": {
						"Pausable": [
							845
						]
					},
					"id": 846,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 788,
							"nodeType": "ImportDirective",
							"scope": 846,
							"sourceUnit": 786,
							"src": "58:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 789,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 785,
										"src": "217:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$785",
											"typeString": "contract Ownable"
										}
									},
									"id": 790,
									"nodeType": "InheritanceSpecifier",
									"src": "217:7:6"
								}
							],
							"contractDependencies": [
								785
							],
							"contractKind": "contract",
							"documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
							"fullyImplemented": true,
							"id": 845,
							"linearizedBaseContracts": [
								845,
								785
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 792,
									"name": "Pause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "240:2:6"
									},
									"src": "229:14:6"
								},
								{
									"anonymous": false,
									"id": 794,
									"name": "Unpause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:2:6"
									},
									"src": "246:16:6"
								},
								{
									"constant": false,
									"id": 797,
									"name": "paused",
									"nodeType": "VariableDeclaration",
									"scope": 845,
									"src": "266:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 795,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "266:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 796,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "287:5:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "420:34:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "434:7:6",
															"subExpression": {
																"argumentTypes": null,
																"id": 800,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "435:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "426:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "426:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "426:16:6"
											},
											{
												"id": 804,
												"nodeType": "PlaceholderStatement",
												"src": "448:1:6"
											}
										]
									},
									"id": 806,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "417:2:6"
									},
									"src": "395:59:6",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "573:33:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 809,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "587:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 808,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "579:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "579:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "579:15:6"
											},
											{
												"id": 812,
												"nodeType": "PlaceholderStatement",
												"src": "600:1:6"
											}
										]
									},
									"id": 814,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "570:2:6"
									},
									"src": "551:55:6",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "733:37:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 821,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "739:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "748:4:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "739:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "739:13:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 825,
														"name": "Pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "758:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "758:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "758:7:6"
											}
										]
									},
									"id": 829,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 817,
											"modifierName": {
												"argumentTypes": null,
												"id": 816,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 765,
												"src": "702:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "702:9:6"
										},
										{
											"arguments": [],
											"id": 819,
											"modifierName": {
												"argumentTypes": null,
												"id": 818,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 806,
												"src": "712:13:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "712:13:6"
										}
									],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "699:2:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:0:6"
									},
									"scope": 845,
									"src": "685:85:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "899:40:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 836,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "905:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "914:5:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "905:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "905:14:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 840,
														"name": "Unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "925:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "925:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "925:9:6"
											}
										]
									},
									"id": 844,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 832,
											"modifierName": {
												"argumentTypes": null,
												"id": 831,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 765,
												"src": "871:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "871:9:6"
										},
										{
											"arguments": [],
											"id": 834,
											"modifierName": {
												"argumentTypes": null,
												"id": 833,
												"name": "whenPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 814,
												"src": "881:10:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "881:10:6"
										}
									],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "868:2:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "899:0:6"
									},
									"scope": 845,
									"src": "852:87:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 846,
							"src": "196:745:6"
						}
					],
					"src": "32:910:6"
				},
				"id": 6,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/Pausable.sol",
						"exportedSymbols": {
							"Pausable": [
								845
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 787,
							"name": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"attributes": {
								"SourceUnit": 786,
								"absolutePath": "contracts/Ownable.sol",
								"file": "./Ownable.sol",
								"scope": 846,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 788,
							"name": "ImportDirective",
							"src": "58:23:6"
						},
						{
							"attributes": {
								"contractDependencies": [
									785
								],
								"contractKind": "contract",
								"documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									845,
									785
								],
								"name": "Pausable",
								"scope": 846
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 785,
												"type": "contract Ownable"
											},
											"id": 789,
											"name": "UserDefinedTypeName",
											"src": "217:7:6"
										}
									],
									"id": 790,
									"name": "InheritanceSpecifier",
									"src": "217:7:6"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Pause"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 791,
											"name": "ParameterList",
											"src": "240:2:6"
										}
									],
									"id": 792,
									"name": "EventDefinition",
									"src": "229:14:6"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Unpause"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 793,
											"name": "ParameterList",
											"src": "259:2:6"
										}
									],
									"id": 794,
									"name": "EventDefinition",
									"src": "246:16:6"
								},
								{
									"attributes": {
										"constant": false,
										"name": "paused",
										"scope": 845,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "bool",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "bool",
												"type": "bool"
											},
											"id": 795,
											"name": "ElementaryTypeName",
											"src": "266:4:6"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "66616c7365",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "bool",
												"type": "bool",
												"value": "false"
											},
											"id": 796,
											"name": "Literal",
											"src": "287:5:6"
										}
									],
									"id": 797,
									"name": "VariableDeclaration",
									"src": "266:26:6"
								},
								{
									"attributes": {
										"name": "whenNotPaused",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 798,
											"name": "ParameterList",
											"src": "417:2:6"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1204,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 799,
																	"name": "Identifier",
																	"src": "426:7:6"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 797,
																				"type": "bool",
																				"value": "paused"
																			},
																			"id": 800,
																			"name": "Identifier",
																			"src": "435:6:6"
																		}
																	],
																	"id": 801,
																	"name": "UnaryOperation",
																	"src": "434:7:6"
																}
															],
															"id": 802,
															"name": "FunctionCall",
															"src": "426:16:6"
														}
													],
													"id": 803,
													"name": "ExpressionStatement",
													"src": "426:16:6"
												},
												{
													"id": 804,
													"name": "PlaceholderStatement",
													"src": "448:1:6"
												}
											],
											"id": 805,
											"name": "Block",
											"src": "420:34:6"
										}
									],
									"id": 806,
									"name": "ModifierDefinition",
									"src": "395:59:6"
								},
								{
									"attributes": {
										"name": "whenPaused",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 807,
											"name": "ParameterList",
											"src": "570:2:6"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1204,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 808,
																	"name": "Identifier",
																	"src": "579:7:6"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 797,
																		"type": "bool",
																		"value": "paused"
																	},
																	"id": 809,
																	"name": "Identifier",
																	"src": "587:6:6"
																}
															],
															"id": 810,
															"name": "FunctionCall",
															"src": "579:15:6"
														}
													],
													"id": 811,
													"name": "ExpressionStatement",
													"src": "579:15:6"
												},
												{
													"id": 812,
													"name": "PlaceholderStatement",
													"src": "600:1:6"
												}
											],
											"id": 813,
											"name": "Block",
											"src": "573:33:6"
										}
									],
									"id": 814,
									"name": "ModifierDefinition",
									"src": "551:55:6"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "pause",
										"payable": false,
										"scope": 845,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 815,
											"name": "ParameterList",
											"src": "699:2:6"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 820,
											"name": "ParameterList",
											"src": "733:0:6"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 765,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 816,
													"name": "Identifier",
													"src": "702:9:6"
												}
											],
											"id": 817,
											"name": "ModifierInvocation",
											"src": "702:9:6"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 806,
														"type": "modifier ()",
														"value": "whenNotPaused"
													},
													"id": 818,
													"name": "Identifier",
													"src": "712:13:6"
												}
											],
											"id": 819,
											"name": "ModifierInvocation",
											"src": "712:13:6"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 797,
																		"type": "bool",
																		"value": "paused"
																	},
																	"id": 821,
																	"name": "Identifier",
																	"src": "739:6:6"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 822,
																	"name": "Literal",
																	"src": "748:4:6"
																}
															],
															"id": 823,
															"name": "Assignment",
															"src": "739:13:6"
														}
													],
													"id": 824,
													"name": "ExpressionStatement",
													"src": "739:13:6"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"arguments": [
																	null
																],
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			null
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 792,
																		"type": "function ()",
																		"value": "Pause"
																	},
																	"id": 825,
																	"name": "Identifier",
																	"src": "758:5:6"
																}
															],
															"id": 826,
															"name": "FunctionCall",
															"src": "758:7:6"
														}
													],
													"id": 827,
													"name": "ExpressionStatement",
													"src": "758:7:6"
												}
											],
											"id": 828,
											"name": "Block",
											"src": "733:37:6"
										}
									],
									"id": 829,
									"name": "FunctionDefinition",
									"src": "685:85:6"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "unpause",
										"payable": false,
										"scope": 845,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 830,
											"name": "ParameterList",
											"src": "868:2:6"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 835,
											"name": "ParameterList",
											"src": "899:0:6"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 765,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 831,
													"name": "Identifier",
													"src": "871:9:6"
												}
											],
											"id": 832,
											"name": "ModifierInvocation",
											"src": "871:9:6"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 814,
														"type": "modifier ()",
														"value": "whenPaused"
													},
													"id": 833,
													"name": "Identifier",
													"src": "881:10:6"
												}
											],
											"id": 834,
											"name": "ModifierInvocation",
											"src": "881:10:6"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 797,
																		"type": "bool",
																		"value": "paused"
																	},
																	"id": 836,
																	"name": "Identifier",
																	"src": "905:6:6"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 837,
																	"name": "Literal",
																	"src": "914:5:6"
																}
															],
															"id": 838,
															"name": "Assignment",
															"src": "905:14:6"
														}
													],
													"id": 839,
													"name": "ExpressionStatement",
													"src": "905:14:6"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"arguments": [
																	null
																],
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			null
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 794,
																		"type": "function ()",
																		"value": "Unpause"
																	},
																	"id": 840,
																	"name": "Identifier",
																	"src": "925:7:6"
																}
															],
															"id": 841,
															"name": "FunctionCall",
															"src": "925:9:6"
														}
													],
													"id": 842,
													"name": "ExpressionStatement",
													"src": "925:9:6"
												}
											],
											"id": 843,
											"name": "Block",
											"src": "899:40:6"
										}
									],
									"id": 844,
									"name": "FunctionDefinition",
									"src": "852:87:6"
								}
							],
							"id": 845,
							"name": "ContractDefinition",
							"src": "196:745:6"
						}
					],
					"id": 846,
					"name": "SourceUnit",
					"src": "32:910:6"
				}
			},
			"contracts/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							943
						]
					},
					"id": 944,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 847,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
							"fullyImplemented": true,
							"id": 943,
							"linearizedBaseContracts": [
								943
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "238:134:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 856,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "252:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "257:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "252:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 862,
												"nodeType": "IfStatement",
												"src": "248:45:7",
												"trueBody": {
													"id": 861,
													"nodeType": "Block",
													"src": "260:33:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "281:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 855,
															"id": 860,
															"nodeType": "Return",
															"src": "274:8:7"
														}
													]
												}
											},
											{
												"assignments": [
													864
												],
												"declarations": [
													{
														"constant": false,
														"id": 864,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 880,
														"src": "302:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 863,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "302:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 868,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 865,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "314:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 866,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "318:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "314:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "302:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 870,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 864,
																	"src": "336:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 871,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "340:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "336:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 873,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "345:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "336:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 869,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "329:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "329:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "329:18:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 877,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 864,
													"src": "364:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 855,
												"id": 878,
												"nodeType": "Return",
												"src": "357:8:7"
											}
										]
									},
									"id": 880,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "184:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "184:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "195:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "195:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "183:22:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "229:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "228:9:7"
									},
									"scope": 943,
									"src": "171:201:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "445:216:7",
										"statements": [
											{
												"assignments": [
													890
												],
												"declarations": [
													{
														"constant": false,
														"id": 890,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 898,
														"src": "533:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 889,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "533:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 894,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 891,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "545:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 892,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "549:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "545:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "533:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 895,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 890,
													"src": "653:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 888,
												"id": 896,
												"nodeType": "Return",
												"src": "646:8:7"
											}
										]
									},
									"id": 898,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "391:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "402:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "390:22:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "436:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "435:9:7"
									},
									"scope": 943,
									"src": "378:283:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "734:53:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 908,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "751:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 909,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "756:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "751:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 907,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "744:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "744:14:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 913,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "775:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 914,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "779:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "775:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 906,
												"id": 916,
												"nodeType": "Return",
												"src": "768:12:7"
											}
										]
									},
									"id": 918,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "680:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "691:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "679:22:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "725:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "724:9:7"
									},
									"scope": 943,
									"src": "667:120:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "860:76:7",
										"statements": [
											{
												"assignments": [
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "870:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 927,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "870:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 932,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 929,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "882:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 930,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "886:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "882:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "870:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 934,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "904:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 935,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "909:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "904:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 933,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "897:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "897:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "897:14:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 939,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 928,
													"src": "928:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 926,
												"id": 940,
												"nodeType": "Return",
												"src": "921:8:7"
											}
										]
									},
									"id": 942,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "806:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "817:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "805:22:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "851:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "850:9:7"
									},
									"scope": 943,
									"src": "793:143:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 944,
							"src": "148:790:7"
						}
					],
					"src": "32:907:7"
				},
				"id": 7,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/SafeMath.sol",
						"exportedSymbols": {
							"SafeMath": [
								943
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 847,
							"name": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "library",
								"documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									943
								],
								"name": "SafeMath",
								"scope": 944
							},
							"children": [
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "mul",
										"payable": false,
										"scope": 943,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 880,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 848,
															"name": "ElementaryTypeName",
															"src": "184:7:7"
														}
													],
													"id": 849,
													"name": "VariableDeclaration",
													"src": "184:9:7"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 880,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 850,
															"name": "ElementaryTypeName",
															"src": "195:7:7"
														}
													],
													"id": 851,
													"name": "VariableDeclaration",
													"src": "195:9:7"
												}
											],
											"id": 852,
											"name": "ParameterList",
											"src": "183:22:7"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 880,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 853,
															"name": "ElementaryTypeName",
															"src": "229:7:7"
														}
													],
													"id": 854,
													"name": "VariableDeclaration",
													"src": "229:7:7"
												}
											],
											"id": 855,
											"name": "ParameterList",
											"src": "228:9:7"
										},
										{
											"children": [
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 849,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 856,
																	"name": "Identifier",
																	"src": "252:1:7"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 857,
																	"name": "Literal",
																	"src": "257:1:7"
																}
															],
															"id": 858,
															"name": "BinaryOperation",
															"src": "252:6:7"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 855
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 859,
																			"name": "Literal",
																			"src": "281:1:7"
																		}
																	],
																	"id": 860,
																	"name": "Return",
																	"src": "274:8:7"
																}
															],
															"id": 861,
															"name": "Block",
															"src": "260:33:7"
														}
													],
													"id": 862,
													"name": "IfStatement",
													"src": "248:45:7"
												},
												{
													"attributes": {
														"assignments": [
															864
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 880,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 863,
																	"name": "ElementaryTypeName",
																	"src": "302:7:7"
																}
															],
															"id": 864,
															"name": "VariableDeclaration",
															"src": "302:9:7"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "*",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 849,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 865,
																	"name": "Identifier",
																	"src": "314:1:7"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 851,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 866,
																	"name": "Identifier",
																	"src": "318:1:7"
																}
															],
															"id": 867,
															"name": "BinaryOperation",
															"src": "314:5:7"
														}
													],
													"id": 868,
													"name": "VariableDeclarationStatement",
													"src": "302:17:7"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1203,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 869,
																	"name": "Identifier",
																	"src": "329:6:7"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "/",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 864,
																						"type": "uint256",
																						"value": "c"
																					},
																					"id": 870,
																					"name": "Identifier",
																					"src": "336:1:7"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 849,
																						"type": "uint256",
																						"value": "a"
																					},
																					"id": 871,
																					"name": "Identifier",
																					"src": "340:1:7"
																				}
																			],
																			"id": 872,
																			"name": "BinaryOperation",
																			"src": "336:5:7"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 851,
																				"type": "uint256",
																				"value": "b"
																			},
																			"id": 873,
																			"name": "Identifier",
																			"src": "345:1:7"
																		}
																	],
																	"id": 874,
																	"name": "BinaryOperation",
																	"src": "336:10:7"
																}
															],
															"id": 875,
															"name": "FunctionCall",
															"src": "329:18:7"
														}
													],
													"id": 876,
													"name": "ExpressionStatement",
													"src": "329:18:7"
												},
												{
													"attributes": {
														"functionReturnParameters": 855
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 864,
																"type": "uint256",
																"value": "c"
															},
															"id": 877,
															"name": "Identifier",
															"src": "364:1:7"
														}
													],
													"id": 878,
													"name": "Return",
													"src": "357:8:7"
												}
											],
											"id": 879,
											"name": "Block",
											"src": "238:134:7"
										}
									],
									"id": 880,
									"name": "FunctionDefinition",
									"src": "171:201:7"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "div",
										"payable": false,
										"scope": 943,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 898,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 881,
															"name": "ElementaryTypeName",
															"src": "391:7:7"
														}
													],
													"id": 882,
													"name": "VariableDeclaration",
													"src": "391:9:7"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 898,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 883,
															"name": "ElementaryTypeName",
															"src": "402:7:7"
														}
													],
													"id": 884,
													"name": "VariableDeclaration",
													"src": "402:9:7"
												}
											],
											"id": 885,
											"name": "ParameterList",
											"src": "390:22:7"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 898,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 886,
															"name": "ElementaryTypeName",
															"src": "436:7:7"
														}
													],
													"id": 887,
													"name": "VariableDeclaration",
													"src": "436:7:7"
												}
											],
											"id": 888,
											"name": "ParameterList",
											"src": "435:9:7"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															890
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 898,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 889,
																	"name": "ElementaryTypeName",
																	"src": "533:7:7"
																}
															],
															"id": 890,
															"name": "VariableDeclaration",
															"src": "533:9:7"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "/",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 882,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 891,
																	"name": "Identifier",
																	"src": "545:1:7"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 884,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 892,
																	"name": "Identifier",
																	"src": "549:1:7"
																}
															],
															"id": 893,
															"name": "BinaryOperation",
															"src": "545:5:7"
														}
													],
													"id": 894,
													"name": "VariableDeclarationStatement",
													"src": "533:17:7"
												},
												{
													"attributes": {
														"functionReturnParameters": 888
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 890,
																"type": "uint256",
																"value": "c"
															},
															"id": 895,
															"name": "Identifier",
															"src": "653:1:7"
														}
													],
													"id": 896,
													"name": "Return",
													"src": "646:8:7"
												}
											],
											"id": 897,
											"name": "Block",
											"src": "445:216:7"
										}
									],
									"id": 898,
									"name": "FunctionDefinition",
									"src": "378:283:7"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "sub",
										"payable": false,
										"scope": 943,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 918,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 899,
															"name": "ElementaryTypeName",
															"src": "680:7:7"
														}
													],
													"id": 900,
													"name": "VariableDeclaration",
													"src": "680:9:7"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 918,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 901,
															"name": "ElementaryTypeName",
															"src": "691:7:7"
														}
													],
													"id": 902,
													"name": "VariableDeclaration",
													"src": "691:9:7"
												}
											],
											"id": 903,
											"name": "ParameterList",
											"src": "679:22:7"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 918,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 904,
															"name": "ElementaryTypeName",
															"src": "725:7:7"
														}
													],
													"id": 905,
													"name": "VariableDeclaration",
													"src": "725:7:7"
												}
											],
											"id": 906,
											"name": "ParameterList",
											"src": "724:9:7"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1203,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 907,
																	"name": "Identifier",
																	"src": "744:6:7"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 902,
																				"type": "uint256",
																				"value": "b"
																			},
																			"id": 908,
																			"name": "Identifier",
																			"src": "751:1:7"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 900,
																				"type": "uint256",
																				"value": "a"
																			},
																			"id": 909,
																			"name": "Identifier",
																			"src": "756:1:7"
																		}
																	],
																	"id": 910,
																	"name": "BinaryOperation",
																	"src": "751:6:7"
																}
															],
															"id": 911,
															"name": "FunctionCall",
															"src": "744:14:7"
														}
													],
													"id": 912,
													"name": "ExpressionStatement",
													"src": "744:14:7"
												},
												{
													"attributes": {
														"functionReturnParameters": 906
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 900,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 913,
																	"name": "Identifier",
																	"src": "775:1:7"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 902,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 914,
																	"name": "Identifier",
																	"src": "779:1:7"
																}
															],
															"id": 915,
															"name": "BinaryOperation",
															"src": "775:5:7"
														}
													],
													"id": 916,
													"name": "Return",
													"src": "768:12:7"
												}
											],
											"id": 917,
											"name": "Block",
											"src": "734:53:7"
										}
									],
									"id": 918,
									"name": "FunctionDefinition",
									"src": "667:120:7"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "add",
										"payable": false,
										"scope": 943,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 942,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 919,
															"name": "ElementaryTypeName",
															"src": "806:7:7"
														}
													],
													"id": 920,
													"name": "VariableDeclaration",
													"src": "806:9:7"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 942,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 921,
															"name": "ElementaryTypeName",
															"src": "817:7:7"
														}
													],
													"id": 922,
													"name": "VariableDeclaration",
													"src": "817:9:7"
												}
											],
											"id": 923,
											"name": "ParameterList",
											"src": "805:22:7"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 942,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 924,
															"name": "ElementaryTypeName",
															"src": "851:7:7"
														}
													],
													"id": 925,
													"name": "VariableDeclaration",
													"src": "851:7:7"
												}
											],
											"id": 926,
											"name": "ParameterList",
											"src": "850:9:7"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															928
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 942,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 927,
																	"name": "ElementaryTypeName",
																	"src": "870:7:7"
																}
															],
															"id": 928,
															"name": "VariableDeclaration",
															"src": "870:9:7"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 920,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 929,
																	"name": "Identifier",
																	"src": "882:1:7"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 922,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 930,
																	"name": "Identifier",
																	"src": "886:1:7"
																}
															],
															"id": 931,
															"name": "BinaryOperation",
															"src": "882:5:7"
														}
													],
													"id": 932,
													"name": "VariableDeclarationStatement",
													"src": "870:17:7"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1203,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 933,
																	"name": "Identifier",
																	"src": "897:6:7"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 928,
																				"type": "uint256",
																				"value": "c"
																			},
																			"id": 934,
																			"name": "Identifier",
																			"src": "904:1:7"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 920,
																				"type": "uint256",
																				"value": "a"
																			},
																			"id": 935,
																			"name": "Identifier",
																			"src": "909:1:7"
																		}
																	],
																	"id": 936,
																	"name": "BinaryOperation",
																	"src": "904:6:7"
																}
															],
															"id": 937,
															"name": "FunctionCall",
															"src": "897:14:7"
														}
													],
													"id": 938,
													"name": "ExpressionStatement",
													"src": "897:14:7"
												},
												{
													"attributes": {
														"functionReturnParameters": 926
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 928,
																"type": "uint256",
																"value": "c"
															},
															"id": 939,
															"name": "Identifier",
															"src": "928:1:7"
														}
													],
													"id": 940,
													"name": "Return",
													"src": "921:8:7"
												}
											],
											"id": 941,
											"name": "Block",
											"src": "860:76:7"
										}
									],
									"id": 942,
									"name": "FunctionDefinition",
									"src": "793:143:7"
								}
							],
							"id": 943,
							"name": "ContractDefinition",
							"src": "148:790:7"
						}
					],
					"id": 944,
					"name": "SourceUnit",
					"src": "32:907:7"
				}
			},
			"contracts/StandardToken.sol": {
				"ast": {
					"absolutePath": "contracts/StandardToken.sol",
					"exportedSymbols": {
						"StandardToken": [
							1146
						]
					},
					"id": 1147,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 945,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "contracts/BasicToken.sol",
							"file": "./BasicToken.sol",
							"id": 946,
							"nodeType": "ImportDirective",
							"scope": 1147,
							"sourceUnit": 151,
							"src": "58:26:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 947,
							"nodeType": "ImportDirective",
							"scope": 1147,
							"sourceUnit": 708,
							"src": "85:21:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 948,
										"name": "BasicToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 150,
										"src": "400:10:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BasicToken_$150",
											"typeString": "contract BasicToken"
										}
									},
									"id": 949,
									"nodeType": "InheritanceSpecifier",
									"src": "400:10:8"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 950,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 707,
										"src": "412:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$707",
											"typeString": "contract ERC20"
										}
									},
									"id": 951,
									"nodeType": "InheritanceSpecifier",
									"src": "412:5:8"
								}
							],
							"contractDependencies": [
								707,
								150,
								741,
								785
							],
							"contractKind": "contract",
							"documentation": "@title Standard ERC20 token\n * @dev Implementation of the basic standard token.\n@dev https://github.com/ethereum/EIPs/issues/20\n@dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol",
							"fullyImplemented": false,
							"id": 1146,
							"linearizedBaseContracts": [
								1146,
								707,
								150,
								741,
								785
							],
							"name": "StandardToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 957,
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 1146,
									"src": "425:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 956,
										"keyType": {
											"id": 952,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "434:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "425:46:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 955,
											"keyType": {
												"id": 953,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "454:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "445:25:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 954,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "465:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 964,
									"name": "MAX_UINT",
									"nodeType": "VariableDeclaration",
									"scope": 1146,
									"src": "493:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 958,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "493:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
										},
										"id": 963,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
											},
											"id": 961,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"hexValue": "32",
												"id": 959,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "525:1:8",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "323536",
												"id": 960,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "528:3:8",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_256_by_1",
													"typeString": "int_const 256"
												},
												"value": "256"
											},
											"src": "525:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31",
											"id": 962,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "534:1:8",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "525:10:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "911:786:8",
										"statements": [
											{
												"assignments": [
													978
												],
												"declarations": [
													{
														"constant": false,
														"id": 978,
														"name": "_allowance",
														"nodeType": "VariableDeclaration",
														"scope": 1081,
														"src": "921:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": null,
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 985,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 979,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "938:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 981,
														"indexExpression": {
															"argumentTypes": null,
															"id": 980,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "946:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "938:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 984,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 982,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "953:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "953:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "938:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "921:43:8"
											},
											{
												"assignments": [
													987
												],
												"declarations": [
													{
														"constant": false,
														"id": 987,
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 1081,
														"src": "1130:8:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 986,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1130:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 996,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1175:5:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 990,
																			"name": "basisPointsRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 18,
																			"src": "1153:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 988,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 970,
																			"src": "1142:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 880,
																		"src": "1142:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1142:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 992,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1141:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 898,
														"src": "1141:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1141:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1130:51:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 997,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "1195:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 998,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1201:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1195:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1005,
												"nodeType": "IfStatement",
												"src": "1191:63:8",
												"trueBody": {
													"id": 1004,
													"nodeType": "Block",
													"src": "1213:41:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1000,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 987,
																	"src": "1227:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1001,
																	"name": "maximumFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "1233:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1227:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1003,
															"nodeType": "ExpressionStatement",
															"src": "1227:16:8"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1006,
														"name": "_allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "1267:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1007,
														"name": "MAX_UINT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "1280:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1267:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1022,
												"nodeType": "IfStatement",
												"src": "1263:103:8",
												"trueBody": {
													"id": 1021,
													"nodeType": "Block",
													"src": "1290:76:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1009,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 957,
																			"src": "1304:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1013,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1010,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 966,
																			"src": "1312:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1304:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1014,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1011,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1186,
																			"src": "1319:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1319:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1304:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1017,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 970,
																			"src": "1348:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1015,
																			"name": "_allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 978,
																			"src": "1333:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 918,
																		"src": "1333:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1333:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1304:51:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1020,
															"nodeType": "ExpressionStatement",
															"src": "1304:51:8"
														}
													]
												}
											},
											{
												"assignments": [
													1024
												],
												"declarations": [
													{
														"constant": false,
														"id": 1024,
														"name": "sendAmount",
														"nodeType": "VariableDeclaration",
														"scope": 1081,
														"src": "1375:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1023,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1375:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1029,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1027,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "1404:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1025,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "1393:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 918,
														"src": "1393:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1375:33:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1030,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1418:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1032,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1031,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "1427:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1418:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1037,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "1456:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1033,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "1436:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1035,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1034,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "1445:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1436:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 918,
															"src": "1436:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1436:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1418:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "1418:45:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1041,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1473:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1043,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1042,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "1482:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1473:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1048,
																"name": "sendAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "1507:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1044,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "1489:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1046,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1045,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "1498:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1489:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 942,
															"src": "1489:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1489:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1473:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "1473:45:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1052,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "1532:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1538:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1532:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1073,
												"nodeType": "IfStatement",
												"src": "1528:121:8",
												"trueBody": {
													"id": 1072,
													"nodeType": "Block",
													"src": "1541:108:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1055,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "1555:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1057,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1056,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "1564:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1555:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1062,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "1593:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1058,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 15,
																				"src": "1573:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1060,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1059,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 745,
																				"src": "1582:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1573:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 942,
																		"src": "1573:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1555:42:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1065,
															"nodeType": "ExpressionStatement",
															"src": "1555:42:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1067,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "1620:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1068,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "1627:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1069,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "1634:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1066,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "1611:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1611:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1071,
															"nodeType": "ExpressionStatement",
															"src": "1611:27:8"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1075,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "1667:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1076,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "1674:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1077,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "1679:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1074,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "1658:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1658:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "1658:32:8"
											}
										]
									},
									"id": 1081,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_96_by_1",
														"typeString": "int_const 96"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "903:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "907:2:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "903:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_96_by_1",
														"typeString": "int_const 96"
													}
												}
											],
											"id": 976,
											"modifierName": {
												"argumentTypes": null,
												"id": 972,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "887:15:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "887:23:8"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "839:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "854:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "867:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "867:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "838:41:8"
									},
									"payable": false,
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:8"
									},
									"scope": 1146,
									"src": "817:880:8",
									"stateMutability": "nonpayable",
									"superFunction": 691,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "2016:484:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2339:56:8",
															"subExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1096,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1094,
																						"name": "_value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1085,
																						"src": "2342:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 1095,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2352:1:8",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "2342:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 1097,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2341:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1105,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 1098,
																								"name": "allowed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 957,
																								"src": "2359:7:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(address => uint256))"
																								}
																							},
																							"id": 1101,
																							"indexExpression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 1099,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1186,
																									"src": "2367:3:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 1100,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": null,
																								"src": "2367:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2359:19:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 1103,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1102,
																							"name": "_spender",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1083,
																							"src": "2379:8:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2359:29:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 1104,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2392:1:8",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "2359:34:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 1106,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2358:36:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2341:53:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1108,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2340:55:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1093,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "2331:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2331:65:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "2331:65:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1112,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "2407:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1116,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1113,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "2415:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2415:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2407:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1117,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1115,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "2427:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2407:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1118,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "2439:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2407:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "2407:38:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1122,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "2464:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2464:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1124,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "2476:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1125,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "2486:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1121,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "2455:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2455:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "2455:38:8"
											}
										]
									},
									"id": 1129,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2008:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 1089,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:2:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "2008:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 1091,
											"modifierName": {
												"argumentTypes": null,
												"id": 1087,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "1992:15:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1992:23:8"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "1954:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1954:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "1972:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1972:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1953:31:8"
									},
									"payable": false,
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2016:0:8"
									},
									"scope": 1146,
									"src": "1937:563:8",
									"stateMutability": "nonpayable",
									"superFunction": 698,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "2919:49:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1138,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "2936:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1140,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1139,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "2944:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2936:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1142,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1141,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "2952:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2936:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1137,
												"id": 1143,
												"nodeType": "Return",
												"src": "2929:32:8"
											}
										]
									},
									"id": 1145,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "2844:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2844:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "2860:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2860:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2843:34:8"
									},
									"payable": false,
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "2903:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2903:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2902:16:8"
									},
									"scope": 1146,
									"src": "2825:143:8",
									"stateMutability": "view",
									"superFunction": 682,
									"visibility": "public"
								}
							],
							"scope": 1147,
							"src": "374:2597:8"
						}
					],
					"src": "32:2940:8"
				},
				"id": 8,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/StandardToken.sol",
						"exportedSymbols": {
							"StandardToken": [
								1146
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 945,
							"name": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"attributes": {
								"SourceUnit": 151,
								"absolutePath": "contracts/BasicToken.sol",
								"file": "./BasicToken.sol",
								"scope": 1147,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 946,
							"name": "ImportDirective",
							"src": "58:26:8"
						},
						{
							"attributes": {
								"SourceUnit": 708,
								"absolutePath": "contracts/ERC20.sol",
								"file": "./ERC20.sol",
								"scope": 1147,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 947,
							"name": "ImportDirective",
							"src": "85:21:8"
						},
						{
							"attributes": {
								"contractDependencies": [
									707,
									150,
									741,
									785
								],
								"contractKind": "contract",
								"documentation": "@title Standard ERC20 token\n * @dev Implementation of the basic standard token.\n@dev https://github.com/ethereum/EIPs/issues/20\n@dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									1146,
									707,
									150,
									741,
									785
								],
								"name": "StandardToken",
								"scope": 1147
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "BasicToken",
												"referencedDeclaration": 150,
												"type": "contract BasicToken"
											},
											"id": 948,
											"name": "UserDefinedTypeName",
											"src": "400:10:8"
										}
									],
									"id": 949,
									"name": "InheritanceSpecifier",
									"src": "400:10:8"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "ERC20",
												"referencedDeclaration": 707,
												"type": "contract ERC20"
											},
											"id": 950,
											"name": "UserDefinedTypeName",
											"src": "412:5:8"
										}
									],
									"id": 951,
									"name": "InheritanceSpecifier",
									"src": "412:5:8"
								},
								{
									"attributes": {
										"constant": false,
										"name": "allowed",
										"scope": 1146,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => mapping(address => uint256))",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => mapping(address => uint256))"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 952,
													"name": "ElementaryTypeName",
													"src": "434:7:8"
												},
												{
													"attributes": {
														"type": "mapping(address => uint256)"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 953,
															"name": "ElementaryTypeName",
															"src": "454:7:8"
														},
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 954,
															"name": "ElementaryTypeName",
															"src": "465:4:8"
														}
													],
													"id": 955,
													"name": "Mapping",
													"src": "445:25:8"
												}
											],
											"id": 956,
											"name": "Mapping",
											"src": "425:46:8"
										}
									],
									"id": 957,
									"name": "VariableDeclaration",
									"src": "425:61:8"
								},
								{
									"attributes": {
										"constant": true,
										"name": "MAX_UINT",
										"scope": 1146,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 958,
											"name": "ElementaryTypeName",
											"src": "493:4:8"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"commonType": {
													"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
													"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
												},
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"operator": "-",
												"type": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
															"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "**",
														"type": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 959,
															"name": "Literal",
															"src": "525:1:8"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "323536",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 256",
																"value": "256"
															},
															"id": 960,
															"name": "Literal",
															"src": "528:3:8"
														}
													],
													"id": 961,
													"name": "BinaryOperation",
													"src": "525:6:8"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"hexvalue": "31",
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"subdenomination": null,
														"token": "number",
														"type": "int_const 1",
														"value": "1"
													},
													"id": 962,
													"name": "Literal",
													"src": "534:1:8"
												}
											],
											"id": 963,
											"name": "BinaryOperation",
											"src": "525:10:8"
										}
									],
									"id": 964,
									"name": "VariableDeclaration",
									"src": "493:42:8"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transferFrom",
										"payable": false,
										"scope": 1146,
										"stateMutability": "nonpayable",
										"superFunction": 691,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_from",
														"scope": 1081,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 965,
															"name": "ElementaryTypeName",
															"src": "839:7:8"
														}
													],
													"id": 966,
													"name": "VariableDeclaration",
													"src": "839:13:8"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 1081,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 967,
															"name": "ElementaryTypeName",
															"src": "854:7:8"
														}
													],
													"id": 968,
													"name": "VariableDeclaration",
													"src": "854:11:8"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 1081,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 969,
															"name": "ElementaryTypeName",
															"src": "867:4:8"
														}
													],
													"id": 970,
													"name": "VariableDeclaration",
													"src": "867:11:8"
												}
											],
											"id": 971,
											"name": "ParameterList",
											"src": "838:41:8"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 977,
											"name": "ParameterList",
											"src": "911:0:8"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 39,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 972,
													"name": "Identifier",
													"src": "887:15:8"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_96_by_1",
															"typeString": "int_const 96"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 96"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "33",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 3",
																"value": "3"
															},
															"id": 973,
															"name": "Literal",
															"src": "903:1:8"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 974,
															"name": "Literal",
															"src": "907:2:8"
														}
													],
													"id": 975,
													"name": "BinaryOperation",
													"src": "903:6:8"
												}
											],
											"id": 976,
											"name": "ModifierInvocation",
											"src": "887:23:8"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															978
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "_allowance",
																"scope": 1081,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"typeName": null,
																"value": null,
																"visibility": "internal"
															},
															"children": [],
															"id": 978,
															"name": "VariableDeclaration",
															"src": "921:14:8"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "mapping(address => uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 957,
																				"type": "mapping(address => mapping(address => uint256))",
																				"value": "allowed"
																			},
																			"id": 979,
																			"name": "Identifier",
																			"src": "938:7:8"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 966,
																				"type": "address",
																				"value": "_from"
																			},
																			"id": 980,
																			"name": "Identifier",
																			"src": "946:5:8"
																		}
																	],
																	"id": 981,
																	"name": "IndexAccess",
																	"src": "938:14:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1186,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 982,
																			"name": "Identifier",
																			"src": "953:3:8"
																		}
																	],
																	"id": 983,
																	"name": "MemberAccess",
																	"src": "953:10:8"
																}
															],
															"id": 984,
															"name": "IndexAccess",
															"src": "938:26:8"
														}
													],
													"id": 985,
													"name": "VariableDeclarationStatement",
													"src": "921:43:8"
												},
												{
													"attributes": {
														"assignments": [
															987
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "fee",
																"scope": 1081,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 986,
																	"name": "ElementaryTypeName",
																	"src": "1130:4:8"
																}
															],
															"id": 987,
															"name": "VariableDeclaration",
															"src": "1130:8:8"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "div",
																		"referencedDeclaration": 898,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "mul",
																								"referencedDeclaration": 880,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 970,
																										"type": "uint256",
																										"value": "_value"
																									},
																									"id": 988,
																									"name": "Identifier",
																									"src": "1142:6:8"
																								}
																							],
																							"id": 989,
																							"name": "MemberAccess",
																							"src": "1142:10:8"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 18,
																								"type": "uint256",
																								"value": "basisPointsRate"
																							},
																							"id": 990,
																							"name": "Identifier",
																							"src": "1153:15:8"
																						}
																					],
																					"id": 991,
																					"name": "FunctionCall",
																					"src": "1142:27:8"
																				}
																			],
																			"id": 992,
																			"name": "TupleExpression",
																			"src": "1141:29:8"
																		}
																	],
																	"id": 993,
																	"name": "MemberAccess",
																	"src": "1141:33:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "3130303030",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 10000",
																		"value": "10000"
																	},
																	"id": 994,
																	"name": "Literal",
																	"src": "1175:5:8"
																}
															],
															"id": 995,
															"name": "FunctionCall",
															"src": "1141:40:8"
														}
													],
													"id": 996,
													"name": "VariableDeclarationStatement",
													"src": "1130:51:8"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 987,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 997,
																	"name": "Identifier",
																	"src": "1195:3:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 21,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 998,
																	"name": "Identifier",
																	"src": "1201:10:8"
																}
															],
															"id": 999,
															"name": "BinaryOperation",
															"src": "1195:16:8"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 987,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 1000,
																					"name": "Identifier",
																					"src": "1227:3:8"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 21,
																						"type": "uint256",
																						"value": "maximumFee"
																					},
																					"id": 1001,
																					"name": "Identifier",
																					"src": "1233:10:8"
																				}
																			],
																			"id": 1002,
																			"name": "Assignment",
																			"src": "1227:16:8"
																		}
																	],
																	"id": 1003,
																	"name": "ExpressionStatement",
																	"src": "1227:16:8"
																}
															],
															"id": 1004,
															"name": "Block",
															"src": "1213:41:8"
														}
													],
													"id": 1005,
													"name": "IfStatement",
													"src": "1191:63:8"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "<",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 978,
																		"type": "uint256",
																		"value": "_allowance"
																	},
																	"id": 1006,
																	"name": "Identifier",
																	"src": "1267:10:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 964,
																		"type": "uint256",
																		"value": "MAX_UINT"
																	},
																	"id": 1007,
																	"name": "Identifier",
																	"src": "1280:8:8"
																}
															],
															"id": 1008,
															"name": "BinaryOperation",
															"src": "1267:21:8"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"type": "mapping(address => uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 957,
																										"type": "mapping(address => mapping(address => uint256))",
																										"value": "allowed"
																									},
																									"id": 1009,
																									"name": "Identifier",
																									"src": "1304:7:8"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 966,
																										"type": "address",
																										"value": "_from"
																									},
																									"id": 1010,
																									"name": "Identifier",
																									"src": "1312:5:8"
																								}
																							],
																							"id": 1013,
																							"name": "IndexAccess",
																							"src": "1304:14:8"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1186,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 1011,
																									"name": "Identifier",
																									"src": "1319:3:8"
																								}
																							],
																							"id": 1012,
																							"name": "MemberAccess",
																							"src": "1319:10:8"
																						}
																					],
																					"id": 1014,
																					"name": "IndexAccess",
																					"src": "1304:26:8"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sub",
																								"referencedDeclaration": 918,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 978,
																										"type": "uint256",
																										"value": "_allowance"
																									},
																									"id": 1015,
																									"name": "Identifier",
																									"src": "1333:10:8"
																								}
																							],
																							"id": 1016,
																							"name": "MemberAccess",
																							"src": "1333:14:8"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 970,
																								"type": "uint256",
																								"value": "_value"
																							},
																							"id": 1017,
																							"name": "Identifier",
																							"src": "1348:6:8"
																						}
																					],
																					"id": 1018,
																					"name": "FunctionCall",
																					"src": "1333:22:8"
																				}
																			],
																			"id": 1019,
																			"name": "Assignment",
																			"src": "1304:51:8"
																		}
																	],
																	"id": 1020,
																	"name": "ExpressionStatement",
																	"src": "1304:51:8"
																}
															],
															"id": 1021,
															"name": "Block",
															"src": "1290:76:8"
														}
													],
													"id": 1022,
													"name": "IfStatement",
													"src": "1263:103:8"
												},
												{
													"attributes": {
														"assignments": [
															1024
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "sendAmount",
																"scope": 1081,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 1023,
																	"name": "ElementaryTypeName",
																	"src": "1375:4:8"
																}
															],
															"id": 1024,
															"name": "VariableDeclaration",
															"src": "1375:15:8"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sub",
																		"referencedDeclaration": 918,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 970,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 1025,
																			"name": "Identifier",
																			"src": "1393:6:8"
																		}
																	],
																	"id": 1026,
																	"name": "MemberAccess",
																	"src": "1393:10:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 987,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 1027,
																	"name": "Identifier",
																	"src": "1404:3:8"
																}
															],
															"id": 1028,
															"name": "FunctionCall",
															"src": "1393:15:8"
														}
													],
													"id": 1029,
													"name": "VariableDeclarationStatement",
													"src": "1375:33:8"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 15,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 1030,
																			"name": "Identifier",
																			"src": "1418:8:8"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 966,
																				"type": "address",
																				"value": "_from"
																			},
																			"id": 1031,
																			"name": "Identifier",
																			"src": "1427:5:8"
																		}
																	],
																	"id": 1032,
																	"name": "IndexAccess",
																	"src": "1418:15:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sub",
																				"referencedDeclaration": 918,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 15,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 1033,
																							"name": "Identifier",
																							"src": "1436:8:8"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 966,
																								"type": "address",
																								"value": "_from"
																							},
																							"id": 1034,
																							"name": "Identifier",
																							"src": "1445:5:8"
																						}
																					],
																					"id": 1035,
																					"name": "IndexAccess",
																					"src": "1436:15:8"
																				}
																			],
																			"id": 1036,
																			"name": "MemberAccess",
																			"src": "1436:19:8"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 970,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 1037,
																			"name": "Identifier",
																			"src": "1456:6:8"
																		}
																	],
																	"id": 1038,
																	"name": "FunctionCall",
																	"src": "1436:27:8"
																}
															],
															"id": 1039,
															"name": "Assignment",
															"src": "1418:45:8"
														}
													],
													"id": 1040,
													"name": "ExpressionStatement",
													"src": "1418:45:8"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 15,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 1041,
																			"name": "Identifier",
																			"src": "1473:8:8"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 968,
																				"type": "address",
																				"value": "_to"
																			},
																			"id": 1042,
																			"name": "Identifier",
																			"src": "1482:3:8"
																		}
																	],
																	"id": 1043,
																	"name": "IndexAccess",
																	"src": "1473:13:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "add",
																				"referencedDeclaration": 942,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 15,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 1044,
																							"name": "Identifier",
																							"src": "1489:8:8"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 968,
																								"type": "address",
																								"value": "_to"
																							},
																							"id": 1045,
																							"name": "Identifier",
																							"src": "1498:3:8"
																						}
																					],
																					"id": 1046,
																					"name": "IndexAccess",
																					"src": "1489:13:8"
																				}
																			],
																			"id": 1047,
																			"name": "MemberAccess",
																			"src": "1489:17:8"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1024,
																				"type": "uint256",
																				"value": "sendAmount"
																			},
																			"id": 1048,
																			"name": "Identifier",
																			"src": "1507:10:8"
																		}
																	],
																	"id": 1049,
																	"name": "FunctionCall",
																	"src": "1489:29:8"
																}
															],
															"id": 1050,
															"name": "Assignment",
															"src": "1473:45:8"
														}
													],
													"id": 1051,
													"name": "ExpressionStatement",
													"src": "1473:45:8"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 987,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 1052,
																	"name": "Identifier",
																	"src": "1532:3:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 1053,
																	"name": "Literal",
																	"src": "1538:1:8"
																}
															],
															"id": 1054,
															"name": "BinaryOperation",
															"src": "1532:7:8"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 15,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 1055,
																							"name": "Identifier",
																							"src": "1555:8:8"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 745,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 1056,
																							"name": "Identifier",
																							"src": "1564:5:8"
																						}
																					],
																					"id": 1057,
																					"name": "IndexAccess",
																					"src": "1555:15:8"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "add",
																								"referencedDeclaration": 942,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 15,
																												"type": "mapping(address => uint256)",
																												"value": "balances"
																											},
																											"id": 1058,
																											"name": "Identifier",
																											"src": "1573:8:8"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 745,
																												"type": "address",
																												"value": "owner"
																											},
																											"id": 1059,
																											"name": "Identifier",
																											"src": "1582:5:8"
																										}
																									],
																									"id": 1060,
																									"name": "IndexAccess",
																									"src": "1573:15:8"
																								}
																							],
																							"id": 1061,
																							"name": "MemberAccess",
																							"src": "1573:19:8"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 987,
																								"type": "uint256",
																								"value": "fee"
																							},
																							"id": 1062,
																							"name": "Identifier",
																							"src": "1593:3:8"
																						}
																					],
																					"id": 1063,
																					"name": "FunctionCall",
																					"src": "1573:24:8"
																				}
																			],
																			"id": 1064,
																			"name": "Assignment",
																			"src": "1555:42:8"
																		}
																	],
																	"id": 1065,
																	"name": "ExpressionStatement",
																	"src": "1555:42:8"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 740,
																						"type": "function (address,address,uint256)",
																						"value": "Transfer"
																					},
																					"id": 1066,
																					"name": "Identifier",
																					"src": "1611:8:8"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 966,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 1067,
																					"name": "Identifier",
																					"src": "1620:5:8"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 745,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 1068,
																					"name": "Identifier",
																					"src": "1627:5:8"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 987,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 1069,
																					"name": "Identifier",
																					"src": "1634:3:8"
																				}
																			],
																			"id": 1070,
																			"name": "FunctionCall",
																			"src": "1611:27:8"
																		}
																	],
																	"id": 1071,
																	"name": "ExpressionStatement",
																	"src": "1611:27:8"
																}
															],
															"id": 1072,
															"name": "Block",
															"src": "1541:108:8"
														}
													],
													"id": 1073,
													"name": "IfStatement",
													"src": "1528:121:8"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 740,
																		"type": "function (address,address,uint256)",
																		"value": "Transfer"
																	},
																	"id": 1074,
																	"name": "Identifier",
																	"src": "1658:8:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 966,
																		"type": "address",
																		"value": "_from"
																	},
																	"id": 1075,
																	"name": "Identifier",
																	"src": "1667:5:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 968,
																		"type": "address",
																		"value": "_to"
																	},
																	"id": 1076,
																	"name": "Identifier",
																	"src": "1674:3:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1024,
																		"type": "uint256",
																		"value": "sendAmount"
																	},
																	"id": 1077,
																	"name": "Identifier",
																	"src": "1679:10:8"
																}
															],
															"id": 1078,
															"name": "FunctionCall",
															"src": "1658:32:8"
														}
													],
													"id": 1079,
													"name": "ExpressionStatement",
													"src": "1658:32:8"
												}
											],
											"id": 1080,
											"name": "Block",
											"src": "911:786:8"
										}
									],
									"id": 1081,
									"name": "FunctionDefinition",
									"src": "817:880:8"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "approve",
										"payable": false,
										"scope": 1146,
										"stateMutability": "nonpayable",
										"superFunction": 698,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 1129,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1082,
															"name": "ElementaryTypeName",
															"src": "1954:7:8"
														}
													],
													"id": 1083,
													"name": "VariableDeclaration",
													"src": "1954:16:8"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 1129,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1084,
															"name": "ElementaryTypeName",
															"src": "1972:4:8"
														}
													],
													"id": 1085,
													"name": "VariableDeclaration",
													"src": "1972:11:8"
												}
											],
											"id": 1086,
											"name": "ParameterList",
											"src": "1953:31:8"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1092,
											"name": "ParameterList",
											"src": "2016:0:8"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 39,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 1087,
													"name": "Identifier",
													"src": "1992:15:8"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 64"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 1088,
															"name": "Literal",
															"src": "2008:1:8"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 1089,
															"name": "Literal",
															"src": "2012:2:8"
														}
													],
													"id": 1090,
													"name": "BinaryOperation",
													"src": "2008:6:8"
												}
											],
											"id": 1091,
											"name": "ModifierInvocation",
											"src": "1992:23:8"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1204,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1093,
																	"name": "Identifier",
																	"src": "2331:7:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "&&",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"type": "bool"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"operator": "!=",
																										"type": "bool"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 1085,
																												"type": "uint256",
																												"value": "_value"
																											},
																											"id": 1094,
																											"name": "Identifier",
																											"src": "2342:6:8"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"hexvalue": "30",
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"subdenomination": null,
																												"token": "number",
																												"type": "int_const 0",
																												"value": "0"
																											},
																											"id": 1095,
																											"name": "Literal",
																											"src": "2352:1:8"
																										}
																									],
																									"id": 1096,
																									"name": "BinaryOperation",
																									"src": "2342:11:8"
																								}
																							],
																							"id": 1097,
																							"name": "TupleExpression",
																							"src": "2341:13:8"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"type": "bool"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"operator": "!=",
																										"type": "bool"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"type": "uint256"
																											},
																											"children": [
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"isConstant": false,
																														"isLValue": true,
																														"isPure": false,
																														"lValueRequested": false,
																														"type": "mapping(address => uint256)"
																													},
																													"children": [
																														{
																															"attributes": {
																																"argumentTypes": null,
																																"overloadedDeclarations": [
																																	null
																																],
																																"referencedDeclaration": 957,
																																"type": "mapping(address => mapping(address => uint256))",
																																"value": "allowed"
																															},
																															"id": 1098,
																															"name": "Identifier",
																															"src": "2359:7:8"
																														},
																														{
																															"attributes": {
																																"argumentTypes": null,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"member_name": "sender",
																																"referencedDeclaration": null,
																																"type": "address"
																															},
																															"children": [
																																{
																																	"attributes": {
																																		"argumentTypes": null,
																																		"overloadedDeclarations": [
																																			null
																																		],
																																		"referencedDeclaration": 1186,
																																		"type": "msg",
																																		"value": "msg"
																																	},
																																	"id": 1099,
																																	"name": "Identifier",
																																	"src": "2367:3:8"
																																}
																															],
																															"id": 1100,
																															"name": "MemberAccess",
																															"src": "2367:10:8"
																														}
																													],
																													"id": 1101,
																													"name": "IndexAccess",
																													"src": "2359:19:8"
																												},
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"overloadedDeclarations": [
																															null
																														],
																														"referencedDeclaration": 1083,
																														"type": "address",
																														"value": "_spender"
																													},
																													"id": 1102,
																													"name": "Identifier",
																													"src": "2379:8:8"
																												}
																											],
																											"id": 1103,
																											"name": "IndexAccess",
																											"src": "2359:29:8"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"hexvalue": "30",
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"subdenomination": null,
																												"token": "number",
																												"type": "int_const 0",
																												"value": "0"
																											},
																											"id": 1104,
																											"name": "Literal",
																											"src": "2392:1:8"
																										}
																									],
																									"id": 1105,
																									"name": "BinaryOperation",
																									"src": "2359:34:8"
																								}
																							],
																							"id": 1106,
																							"name": "TupleExpression",
																							"src": "2358:36:8"
																						}
																					],
																					"id": 1107,
																					"name": "BinaryOperation",
																					"src": "2341:53:8"
																				}
																			],
																			"id": 1108,
																			"name": "TupleExpression",
																			"src": "2340:55:8"
																		}
																	],
																	"id": 1109,
																	"name": "UnaryOperation",
																	"src": "2339:56:8"
																}
															],
															"id": 1110,
															"name": "FunctionCall",
															"src": "2331:65:8"
														}
													],
													"id": 1111,
													"name": "ExpressionStatement",
													"src": "2331:65:8"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "mapping(address => uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 957,
																						"type": "mapping(address => mapping(address => uint256))",
																						"value": "allowed"
																					},
																					"id": 1112,
																					"name": "Identifier",
																					"src": "2407:7:8"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1186,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 1113,
																							"name": "Identifier",
																							"src": "2415:3:8"
																						}
																					],
																					"id": 1114,
																					"name": "MemberAccess",
																					"src": "2415:10:8"
																				}
																			],
																			"id": 1116,
																			"name": "IndexAccess",
																			"src": "2407:19:8"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1083,
																				"type": "address",
																				"value": "_spender"
																			},
																			"id": 1115,
																			"name": "Identifier",
																			"src": "2427:8:8"
																		}
																	],
																	"id": 1117,
																	"name": "IndexAccess",
																	"src": "2407:29:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1085,
																		"type": "uint256",
																		"value": "_value"
																	},
																	"id": 1118,
																	"name": "Identifier",
																	"src": "2439:6:8"
																}
															],
															"id": 1119,
															"name": "Assignment",
															"src": "2407:38:8"
														}
													],
													"id": 1120,
													"name": "ExpressionStatement",
													"src": "2407:38:8"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 706,
																		"type": "function (address,address,uint256)",
																		"value": "Approval"
																	},
																	"id": 1121,
																	"name": "Identifier",
																	"src": "2455:8:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1186,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 1122,
																			"name": "Identifier",
																			"src": "2464:3:8"
																		}
																	],
																	"id": 1123,
																	"name": "MemberAccess",
																	"src": "2464:10:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1083,
																		"type": "address",
																		"value": "_spender"
																	},
																	"id": 1124,
																	"name": "Identifier",
																	"src": "2476:8:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1085,
																		"type": "uint256",
																		"value": "_value"
																	},
																	"id": 1125,
																	"name": "Identifier",
																	"src": "2486:6:8"
																}
															],
															"id": 1126,
															"name": "FunctionCall",
															"src": "2455:38:8"
														}
													],
													"id": 1127,
													"name": "ExpressionStatement",
													"src": "2455:38:8"
												}
											],
											"id": 1128,
											"name": "Block",
											"src": "2016:484:8"
										}
									],
									"id": 1129,
									"name": "FunctionDefinition",
									"src": "1937:563:8"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "allowance",
										"payable": false,
										"scope": 1146,
										"stateMutability": "view",
										"superFunction": 682,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 1145,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1130,
															"name": "ElementaryTypeName",
															"src": "2844:7:8"
														}
													],
													"id": 1131,
													"name": "VariableDeclaration",
													"src": "2844:14:8"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 1145,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1132,
															"name": "ElementaryTypeName",
															"src": "2860:7:8"
														}
													],
													"id": 1133,
													"name": "VariableDeclaration",
													"src": "2860:16:8"
												}
											],
											"id": 1134,
											"name": "ParameterList",
											"src": "2843:34:8"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "remaining",
														"scope": 1145,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1135,
															"name": "ElementaryTypeName",
															"src": "2903:4:8"
														}
													],
													"id": 1136,
													"name": "VariableDeclaration",
													"src": "2903:14:8"
												}
											],
											"id": 1137,
											"name": "ParameterList",
											"src": "2902:16:8"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 1137
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "mapping(address => uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 957,
																				"type": "mapping(address => mapping(address => uint256))",
																				"value": "allowed"
																			},
																			"id": 1138,
																			"name": "Identifier",
																			"src": "2936:7:8"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1131,
																				"type": "address",
																				"value": "_owner"
																			},
																			"id": 1139,
																			"name": "Identifier",
																			"src": "2944:6:8"
																		}
																	],
																	"id": 1140,
																	"name": "IndexAccess",
																	"src": "2936:15:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1133,
																		"type": "address",
																		"value": "_spender"
																	},
																	"id": 1141,
																	"name": "Identifier",
																	"src": "2952:8:8"
																}
															],
															"id": 1142,
															"name": "IndexAccess",
															"src": "2936:25:8"
														}
													],
													"id": 1143,
													"name": "Return",
													"src": "2929:32:8"
												}
											],
											"id": 1144,
											"name": "Block",
											"src": "2919:49:8"
										}
									],
									"id": 1145,
									"name": "FunctionDefinition",
									"src": "2825:143:8"
								}
							],
							"id": 1146,
							"name": "ContractDefinition",
							"src": "374:2597:8"
						}
					],
					"id": 1147,
					"name": "SourceUnit",
					"src": "32:2940:8"
				}
			},
			"contracts/UpgradedStandardToken.sol": {
				"ast": {
					"absolutePath": "contracts/UpgradedStandardToken.sol",
					"exportedSymbols": {
						"UpgradedStandardToken": [
							1183
						]
					},
					"id": 1184,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1148,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "contracts/StandardToken.sol",
							"file": "./StandardToken.sol",
							"id": 1149,
							"nodeType": "ImportDirective",
							"scope": 1184,
							"sourceUnit": 1147,
							"src": "58:29:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 1150,
										"name": "StandardToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1146,
										"src": "123:13:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StandardToken_$1146",
											"typeString": "contract StandardToken"
										}
									},
									"id": 1151,
									"nodeType": "InheritanceSpecifier",
									"src": "123:13:9"
								}
							],
							"contractDependencies": [
								707,
								150,
								741,
								785,
								1146
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1183,
							"linearizedBaseContracts": [
								1183,
								1146,
								707,
								150,
								741,
								785
							],
							"name": "UpgradedStandardToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"id": 1162,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "289:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "303:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "303:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "315:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "315:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "288:38:9"
									},
									"payable": false,
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "342:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1159,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "342:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "341:6:9"
									},
									"scope": 1183,
									"src": "263:85:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 1173,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFromByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "383:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "383:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "399:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "399:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "413:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "413:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "430:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "382:59:9"
									},
									"payable": false,
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "448:0:9"
									},
									"scope": 1183,
									"src": "353:96:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 1182,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approveByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "479:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "493:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "510:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "510:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "478:43:9"
									},
									"payable": false,
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "528:0:9"
									},
									"scope": 1183,
									"src": "454:75:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1184,
							"src": "89:442:9"
						}
					],
					"src": "32:500:9"
				},
				"id": 9,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/UpgradedStandardToken.sol",
						"exportedSymbols": {
							"UpgradedStandardToken": [
								1183
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 1148,
							"name": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"attributes": {
								"SourceUnit": 1147,
								"absolutePath": "contracts/StandardToken.sol",
								"file": "./StandardToken.sol",
								"scope": 1184,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 1149,
							"name": "ImportDirective",
							"src": "58:29:9"
						},
						{
							"attributes": {
								"contractDependencies": [
									707,
									150,
									741,
									785,
									1146
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									1183,
									1146,
									707,
									150,
									741,
									785
								],
								"name": "UpgradedStandardToken",
								"scope": 1184
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "StandardToken",
												"referencedDeclaration": 1146,
												"type": "contract StandardToken"
											},
											"id": 1150,
											"name": "UserDefinedTypeName",
											"src": "123:13:9"
										}
									],
									"id": 1151,
									"name": "InheritanceSpecifier",
									"src": "123:13:9"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transferByLegacy",
										"payable": false,
										"scope": 1183,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 1162,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1152,
															"name": "ElementaryTypeName",
															"src": "289:7:9"
														}
													],
													"id": 1153,
													"name": "VariableDeclaration",
													"src": "289:12:9"
												},
												{
													"attributes": {
														"constant": false,
														"name": "to",
														"scope": 1162,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1154,
															"name": "ElementaryTypeName",
															"src": "303:7:9"
														}
													],
													"id": 1155,
													"name": "VariableDeclaration",
													"src": "303:10:9"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 1162,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1156,
															"name": "ElementaryTypeName",
															"src": "315:4:9"
														}
													],
													"id": 1157,
													"name": "VariableDeclaration",
													"src": "315:10:9"
												}
											],
											"id": 1158,
											"name": "ParameterList",
											"src": "288:38:9"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 1162,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 1159,
															"name": "ElementaryTypeName",
															"src": "342:4:9"
														}
													],
													"id": 1160,
													"name": "VariableDeclaration",
													"src": "342:4:9"
												}
											],
											"id": 1161,
											"name": "ParameterList",
											"src": "341:6:9"
										}
									],
									"id": 1162,
									"name": "FunctionDefinition",
									"src": "263:85:9"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transferFromByLegacy",
										"payable": false,
										"scope": 1183,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "sender",
														"scope": 1173,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1163,
															"name": "ElementaryTypeName",
															"src": "383:7:9"
														}
													],
													"id": 1164,
													"name": "VariableDeclaration",
													"src": "383:14:9"
												},
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 1173,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1165,
															"name": "ElementaryTypeName",
															"src": "399:7:9"
														}
													],
													"id": 1166,
													"name": "VariableDeclaration",
													"src": "399:12:9"
												},
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 1173,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1167,
															"name": "ElementaryTypeName",
															"src": "413:7:9"
														}
													],
													"id": 1168,
													"name": "VariableDeclaration",
													"src": "413:15:9"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 1173,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1169,
															"name": "ElementaryTypeName",
															"src": "430:4:9"
														}
													],
													"id": 1170,
													"name": "VariableDeclaration",
													"src": "430:10:9"
												}
											],
											"id": 1171,
											"name": "ParameterList",
											"src": "382:59:9"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1172,
											"name": "ParameterList",
											"src": "448:0:9"
										}
									],
									"id": 1173,
									"name": "FunctionDefinition",
									"src": "353:96:9"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "approveByLegacy",
										"payable": false,
										"scope": 1183,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 1182,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1174,
															"name": "ElementaryTypeName",
															"src": "479:7:9"
														}
													],
													"id": 1175,
													"name": "VariableDeclaration",
													"src": "479:12:9"
												},
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 1182,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1176,
															"name": "ElementaryTypeName",
															"src": "493:7:9"
														}
													],
													"id": 1177,
													"name": "VariableDeclaration",
													"src": "493:15:9"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 1182,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1178,
															"name": "ElementaryTypeName",
															"src": "510:4:9"
														}
													],
													"id": 1179,
													"name": "VariableDeclaration",
													"src": "510:10:9"
												}
											],
											"id": 1180,
											"name": "ParameterList",
											"src": "478:43:9"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1181,
											"name": "ParameterList",
											"src": "528:0:9"
										}
									],
									"id": 1182,
									"name": "FunctionDefinition",
									"src": "454:75:9"
								}
							],
							"id": 1183,
							"name": "ContractDefinition",
							"src": "89:442:9"
						}
					],
					"id": 1184,
					"name": "SourceUnit",
					"src": "32:500:9"
				}
			}
		}
	}
}