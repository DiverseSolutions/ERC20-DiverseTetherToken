{
	"id": "b6277ba22c4b07d927b532b13208c1b6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.17",
	"solcLongVersion": "0.4.17+commit.bdeb9e52",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DiverseTetherToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\nimport \"./Pausable.sol\";\nimport \"./StandardToken.sol\";\nimport \"./UpgradedStandardToken.sol\";\nimport \"./Blacklist.sol\";\n\ncontract DiverseTetherToken is Pausable, StandardToken, BlackList {\n\n    string public name;\n    string public symbol;\n    uint public decimals;\n    address public upgradedAddress;\n    bool public deprecated;\n\n    //  The contract can be initialized with a number of tokens\n    //  All the tokens are deposited to the owner address\n    //\n    // @param _balance Initial supply of the contract\n    // @param _name Token Name\n    // @param _symbol Token symbol\n    // @param _decimals Token decimals\n    function DiverseTetherToken() public {\n        _totalSupply = 10000000000 * 10 ** 6;\n        name = \"dTether USD\";\n        symbol = \"dUSDT\";\n        decimals = 6;\n        balances[owner] = 10000000000 * 10 ** 6;\n        deprecated = false;\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function transfer(address _to, uint _value) public whenNotPaused {\n        require(!isBlackListed[msg.sender]);\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\n        } else {\n            return super.transfer(_to, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\n        require(!isBlackListed[_from]);\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\n        } else {\n            return super.transferFrom(_from, _to, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function balanceOf(address who) public constant returns (uint) {\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\n        } else {\n            return super.balanceOf(who);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\n        } else {\n            return super.approve(_spender, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\n        if (deprecated) {\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\n        } else {\n            return super.allowance(_owner, _spender);\n        }\n    }\n\n    // deprecate current contract in favour of a new one\n    function deprecate(address _upgradedAddress) public onlyOwner {\n        deprecated = true;\n        upgradedAddress = _upgradedAddress;\n        Deprecate(_upgradedAddress);\n    }\n\n    // deprecate current contract if favour of a new one\n    function totalSupply() public constant returns (uint) {\n        if (deprecated) {\n            return StandardToken(upgradedAddress).totalSupply();\n        } else {\n            return _totalSupply;\n        }\n    }\n\n    // Issue a new amount of tokens\n    // these tokens are deposited into the owner address\n    //\n    // @param _amount Number of tokens to be issued\n    function issue(uint amount) public onlyOwner {\n        require(_totalSupply + amount > _totalSupply);\n        require(balances[owner] + amount > balances[owner]);\n\n        balances[owner] += amount;\n        _totalSupply += amount;\n        Issue(amount);\n    }\n\n    // Redeem tokens.\n    // These tokens are withdrawn from the owner address\n    // if the balance must be enough to cover the redeem\n    // or the call will fail.\n    // @param _amount Number of tokens to be issued\n    function redeem(uint amount) public onlyOwner {\n        require(_totalSupply >= amount);\n        require(balances[owner] >= amount);\n\n        _totalSupply -= amount;\n        balances[owner] -= amount;\n        Redeem(amount);\n    }\n\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\n        require(newBasisPoints < 20);\n        require(newMaxFee < 50);\n\n        basisPointsRate = newBasisPoints;\n        maximumFee = newMaxFee.mul(10**decimals);\n\n        Params(basisPointsRate, maximumFee);\n    }\n\n    // Called when new token are issued\n    event Issue(uint amount);\n\n    // Called when tokens are redeemed\n    event Redeem(uint amount);\n\n    // Called when contract is deprecated\n    event Deprecate(address newAddress);\n\n    // Called if contract ever adds fees\n    event Params(uint feeBasisPoints, uint maxFee);\n}\n"
			},
			"contracts/Blacklist.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\nimport \"./Ownable.sol\";\nimport \"./BasicToken.sol\";\n\ncontract BlackList is Ownable, BasicToken {\n\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\n    function getBlackListStatus(address _maker) external constant returns (bool) {\n        return isBlackListed[_maker];\n    }\n\n    function getOwner() external constant returns (address) {\n        return owner;\n    }\n\n    mapping (address => bool) public isBlackListed;\n    \n    function addBlackList (address _evilUser) public onlyOwner {\n        isBlackListed[_evilUser] = true;\n        AddedBlackList(_evilUser);\n    }\n\n    function removeBlackList (address _clearedUser) public onlyOwner {\n        isBlackListed[_clearedUser] = false;\n        RemovedBlackList(_clearedUser);\n    }\n\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\n        require(isBlackListed[_blackListedUser]);\n        uint dirtyFunds = balanceOf(_blackListedUser);\n        balances[_blackListedUser] = 0;\n        _totalSupply -= dirtyFunds;\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\n    }\n\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\n\n    event AddedBlackList(address _user);\n\n    event RemovedBlackList(address _user);\n\n}\n"
			},
			"contracts/UpgradedStandardToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\nimport \"./StandardToken.sol\";\n\ncontract UpgradedStandardToken is StandardToken{\n    // those methods are called by the legacy contract\n    // and they must ensure msg.sender to be the contract address\n    function transferByLegacy(address from, address to, uint value) public;\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\n    function approveByLegacy(address from, address spender, uint value) public;\n}\n"
			},
			"contracts/StandardToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\nimport \"./BasicToken.sol\";\nimport \"./ERC20.sol\";\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is BasicToken, ERC20 {\n\n    mapping (address => mapping (address => uint)) public allowed;\n\n    uint public constant MAX_UINT = 2**256 - 1;\n\n    /**\n    * @dev Transfer tokens from one address to another\n    * @param _from address The address which you want to send tokens from\n    * @param _to address The address which you want to transfer to\n    * @param _value uint the amount of tokens to be transferred\n    */\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\n        var _allowance = allowed[_from][msg.sender];\n\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\n        // if (_value > _allowance) throw;\n\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\n        if (fee > maximumFee) {\n            fee = maximumFee;\n        }\n        if (_allowance < MAX_UINT) {\n            allowed[_from][msg.sender] = _allowance.sub(_value);\n        }\n        uint sendAmount = _value.sub(fee);\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(sendAmount);\n        if (fee > 0) {\n            balances[owner] = balances[owner].add(fee);\n            Transfer(_from, owner, fee);\n        }\n        Transfer(_from, _to, sendAmount);\n    }\n\n    /**\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n    * @param _spender The address which will spend the funds.\n    * @param _value The amount of tokens to be spent.\n    */\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\n\n        // To change the approve amount you first have to reduce the addresses`\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\n        //  already 0 to mitigate the race condition described here:\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\n\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n    }\n\n    /**\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\n    * @param _owner address The address which owns the funds.\n    * @param _spender address The address which will spend the funds.\n    * @return A uint specifying the amount of tokens still available for the spender.\n    */\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\n        return allowed[_owner][_spender];\n    }\n\n}\n"
			},
			"contracts/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\nimport \"./Ownable.sol\";\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    Unpause();\n  }\n}\n"
			},
			"contracts/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\nimport \"./ERC20Basic.sol\";\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public constant returns (uint);\n    function transferFrom(address from, address to, uint value) public;\n    function approve(address spender, uint value) public;\n    event Approval(address indexed owner, address indexed spender, uint value);\n}\n"
			},
			"contracts/BasicToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\nimport \"./Ownable.sol\";\nimport \"./ERC20Basic.sol\";\nimport \"./SafeMath.sol\";\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is Ownable, ERC20Basic {\n    using SafeMath for uint;\n\n    mapping(address => uint) public balances;\n\n    // additional variables for use if transaction fees ever became necessary\n    uint public basisPointsRate = 0;\n    uint public maximumFee = 0;\n\n    /**\n    * @dev Fix for the ERC20 short address attack.\n    */\n    modifier onlyPayloadSize(uint size) {\n        require(!(msg.data.length < size + 4));\n        _;\n    }\n\n    /**\n    * @dev transfer token for a specified address\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint _value) public {\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\n        if (fee > maximumFee) {\n            fee = maximumFee;\n        }\n        uint sendAmount = _value.sub(fee);\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(sendAmount);\n        if (fee > 0) {\n            balances[owner] = balances[owner].add(fee);\n            Transfer(msg.sender, owner, fee);\n        }\n        Transfer(msg.sender, _to, sendAmount);\n    }\n\n    /**\n    * @dev Gets the balance of the specified address.\n    * @param _owner The address to query the the balance of.\n    * @return An uint representing the amount owned by the passed address.\n    */\n    function balanceOf(address _owner) public constant returns (uint balance) {\n        return balances[_owner];\n    }\n\n}\n"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address public owner;\n\n    /**\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n      * account.\n      */\n    function Ownable() public {\n        owner = msg.sender;\n    }\n\n    /**\n      * @dev Throws if called by any account other than the owner.\n      */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    /**\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\n    * @param newOwner The address to transfer ownership to.\n    */\n    function transferOwnership(address newOwner) public onlyOwner {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n\n}\n"
			},
			"contracts/ERC20Basic.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20Basic {\n    uint public _totalSupply;\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address who) public constant returns (uint);\n    function transfer(address to, uint value) public;\n    event Transfer(address indexed from, address indexed to, uint value);\n}\n"
			},
			"contracts/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.17;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/BasicToken.sol": {
				"BasicToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint representing the amount owned by the passed address."
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						},
						"title": "Basic token"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/Blacklist.sol": {
				"BlackList": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_evilUser",
									"type": "address"
								}
							],
							"name": "addBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_maker",
									"type": "address"
								}
							],
							"name": "getBlackListStatus",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlackListed",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_clearedUser",
									"type": "address"
								}
							],
							"name": "removeBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_blackListedUser",
									"type": "address"
								}
							],
							"name": "destroyBlackFunds",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_blackListedUser",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "DestroyedBlackFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "AddedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "RemovedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint representing the amount owned by the passed address."
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"addBlackList(address)": "0ecb93c0",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"destroyBlackFunds(address)": "f3bdc228",
							"getBlackListStatus(address)": "59bf1abe",
							"getOwner()": "893d20e8",
							"isBlackListed(address)": "e47d6060",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"removeBlackList(address)": "e4997dc5",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {
							"getBlackListStatus(address)": {
								"notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////"
							}
						}
					}
				}
			},
			"contracts/DiverseTetherToken.sol": {
				"DiverseTetherToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_upgradedAddress",
									"type": "address"
								}
							],
							"name": "deprecate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "deprecated",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_evilUser",
									"type": "address"
								}
							],
							"name": "addBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "upgradedAddress",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_maker",
									"type": "address"
								}
							],
							"name": "getBlackListStatus",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newBasisPoints",
									"type": "uint256"
								},
								{
									"name": "newMaxFee",
									"type": "uint256"
								}
							],
							"name": "setParams",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "issue",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "redeem",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlackListed",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_clearedUser",
									"type": "address"
								}
							],
							"name": "removeBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_blackListedUser",
									"type": "address"
								}
							],
							"name": "destroyBlackFunds",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Issue",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Redeem",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "Deprecate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "feeBasisPoints",
									"type": "uint256"
								},
								{
									"indexed": false,
									"name": "maxFee",
									"type": "uint256"
								}
							],
							"name": "Params",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_blackListedUser",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "DestroyedBlackFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "AddedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "RemovedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state"
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state"
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/DiverseTetherToken.sol\":178:4922  contract DiverseTetherToken is Pausable, StandardToken, BlackList {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/Pausable.sol\":287:292  false */\n  0x0\n    /* \"contracts/Pausable.sol\":266:292  bool public paused = false */\n  dup1\n  exp(0x100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BasicToken.sol\":459:460  0 */\n  0x0\n    /* \"contracts/BasicToken.sol\":429:460  uint public basisPointsRate = 0 */\n  0x3\n  sstore\n    /* \"contracts/BasicToken.sol\":491:492  0 */\n  0x0\n    /* \"contracts/BasicToken.sol\":466:492  uint public maximumFee = 0 */\n  0x4\n  sstore\n    /* \"contracts/DiverseTetherToken.sol\":680:925  function DiverseTetherToken() public {... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n    /* \"contracts/Ownable.sol\":469:479  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":461:466  owner */\n  0x0\n  dup1\n    /* \"contracts/Ownable.sol\":461:479  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiverseTetherToken.sol\":742:763  10000000000 * 10 ** 6 */\n  0x2386f26fc10000\n    /* \"contracts/DiverseTetherToken.sol\":727:739  _totalSupply */\n  0x1\n    /* \"contracts/DiverseTetherToken.sol\":727:763  _totalSupply = 10000000000 * 10 ** 6 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiverseTetherToken.sol\":773:793  name = \"dTether USD\" */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  0xb\n  dup2\n  mstore\n  0x20\n  add\n  0x6454657468657220555344000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/DiverseTetherToken.sol\":773:777  name */\n  0x7\n    /* \"contracts/DiverseTetherToken.sol\":773:793  name = \"dTether USD\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_7)\ntag_6:\n  pop\n    /* \"contracts/DiverseTetherToken.sol\":803:819  symbol = \"dUSDT\" */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  0x5\n  dup2\n  mstore\n  0x20\n  add\n  0x6455534454000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/DiverseTetherToken.sol\":803:809  symbol */\n  0x8\n    /* \"contracts/DiverseTetherToken.sol\":803:819  symbol = \"dUSDT\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_7)\ntag_8:\n  pop\n    /* \"contracts/DiverseTetherToken.sol\":840:841  6 */\n  0x6\n    /* \"contracts/DiverseTetherToken.sol\":829:837  decimals */\n  0x9\n    /* \"contracts/DiverseTetherToken.sol\":829:841  decimals = 6 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiverseTetherToken.sol\":869:890  10000000000 * 10 ** 6 */\n  0x2386f26fc10000\n    /* \"contracts/DiverseTetherToken.sol\":851:859  balances */\n  0x2\n    /* \"contracts/DiverseTetherToken.sol\":851:866  balances[owner] */\n  0x0\n    /* \"contracts/DiverseTetherToken.sol\":860:865  owner */\n  dup1\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/DiverseTetherToken.sol\":851:866  balances[owner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"contracts/DiverseTetherToken.sol\":851:890  balances[owner] = 10000000000 * 10 ** 6 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiverseTetherToken.sol\":913:918  false */\n  0x0\n    /* \"contracts/DiverseTetherToken.sol\":900:910  deprecated */\n  0xa\n  0x14\n    /* \"contracts/DiverseTetherToken.sol\":900:918  deprecated = false */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DiverseTetherToken.sol\":178:4922  contract DiverseTetherToken is Pausable, StandardToken, BlackList {... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_11\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_10)\ntag_11:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_10\n  jumpi\n  swap2\n  dup3\n  add\ntag_12:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_12)\ntag_13:\ntag_10:\n  pop\n  swap1\n  pop\n  tag_14\n  swap2\n  swap1\n  jump\t// in(tag_15)\ntag_14:\n  pop\n  swap1\n  jump\t// out\ntag_15:\n  tag_16\n  swap2\n  swap1\ntag_17:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_18\n  jumpi\n  0x0\n  dup2\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_17)\ntag_18:\n  pop\n  swap1\n  jump\ntag_16:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DiverseTetherToken.sol\":178:4922  contract DiverseTetherToken is Pausable, StandardToken, BlackList {... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, iszero(calldatasize))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x6fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x753c30c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe136b19\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xecb93c0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x26976e3f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x35390714\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3eaaf86b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x59bf1abe\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5c658165\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc0324c77\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xcc872b66\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdb006a75\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd644f72\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe47d6060\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe4997dc5\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe5b5019a\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf3bdc228\n      eq\n      tag_33\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/DiverseTetherToken.sol\":251:269  string public name */\n    tag_2:\n      jumpi(tag_34, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_34:\n      tag_35\n      jump(tag_36)\n    tag_35:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_37:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_37)\n    tag_38:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_40\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_40:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiverseTetherToken.sol\":2893:3070  function deprecate(address _upgradedAddress) public onlyOwner {... */\n    tag_3:\n      jumpi(tag_41, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_41:\n      tag_42\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_43)\n    tag_42:\n      stop\n        /* \"contracts/DiverseTetherToken.sol\":2165:2461  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_4:\n      jumpi(tag_44, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_44:\n      tag_45\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_46)\n    tag_45:\n      stop\n        /* \"contracts/DiverseTetherToken.sol\":363:385  bool public deprecated */\n    tag_5:\n      jumpi(tag_47, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_47:\n      tag_48\n      jump(tag_49)\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Blacklist.sol\":554:696  function addBlackList (address _evilUser) public onlyOwner {... */\n    tag_6:\n      jumpi(tag_50, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_50:\n      tag_51\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_52)\n    tag_51:\n      stop\n        /* \"contracts/DiverseTetherToken.sol\":3133:3345  function totalSupply() public constant returns (uint) {... */\n    tag_7:\n      jumpi(tag_53, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_53:\n      tag_54\n      jump(tag_55)\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiverseTetherToken.sol\":1408:1763  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {... */\n    tag_8:\n      jumpi(tag_56, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_56:\n      tag_57\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_58)\n    tag_57:\n      stop\n        /* \"contracts/DiverseTetherToken.sol\":327:357  address public upgradedAddress */\n    tag_9:\n      jumpi(tag_59, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_59:\n      tag_60\n      jump(tag_61)\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BasicToken.sol\":304:344  mapping(address => uint) public balances */\n    tag_10:\n      jumpi(tag_62, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_62:\n      tag_63\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_64)\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiverseTetherToken.sol\":301:321  uint public decimals */\n    tag_11:\n      jumpi(tag_65, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_65:\n      tag_66\n      jump(tag_67)\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BasicToken.sol\":466:492  uint public maximumFee = 0 */\n    tag_12:\n      jumpi(tag_68, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_68:\n      tag_69\n      jump(tag_70)\n    tag_69:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20Basic.sol\":211:235  uint public _totalSupply */\n    tag_13:\n      jumpi(tag_71, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_71:\n      tag_72\n      jump(tag_73)\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pausable.sol\":852:939  function unpause() onlyOwner whenPaused public {... */\n    tag_14:\n      jumpi(tag_74, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_74:\n      tag_75\n      jump(tag_76)\n    tag_75:\n      stop\n        /* \"contracts/Blacklist.sol\":278:400  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n    tag_15:\n      jumpi(tag_77, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_77:\n      tag_78\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_79)\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StandardToken.sol\":425:486  mapping (address => mapping (address => uint)) public allowed */\n    tag_16:\n      jumpi(tag_80, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_80:\n      tag_81\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_82)\n    tag_81:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pausable.sol\":266:292  bool public paused = false */\n    tag_17:\n      jumpi(tag_83, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_83:\n      tag_84\n      jump(tag_85)\n    tag_84:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiverseTetherToken.sol\":1845:2083  function balanceOf(address who) public constant returns (uint) {... */\n    tag_18:\n      jumpi(tag_86, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_86:\n      tag_87\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_88)\n    tag_87:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pausable.sol\":685:770  function pause() onlyOwner whenNotPaused public {... */\n    tag_19:\n      jumpi(tag_89, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_89:\n      tag_90\n      jump(tag_91)\n    tag_90:\n      stop\n        /* \"contracts/Blacklist.sol\":406:491  function getOwner() external constant returns (address) {... */\n    tag_20:\n      jumpi(tag_92, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_92:\n      tag_93\n      jump(tag_94)\n    tag_93:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":271:291  address public owner */\n    tag_21:\n      jumpi(tag_95, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_95:\n      tag_96\n      jump(tag_97)\n    tag_96:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiverseTetherToken.sol\":275:295  string public symbol */\n    tag_22:\n      jumpi(tag_98, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_98:\n      tag_99\n      jump(tag_100)\n    tag_99:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_101:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_102\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_101)\n    tag_102:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_104:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DiverseTetherToken.sol\":1007:1326  function transfer(address _to, uint _value) public whenNotPaused {... */\n    tag_23:\n      jumpi(tag_105, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_105:\n      tag_106\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_107)\n    tag_106:\n      stop\n        /* \"contracts/DiverseTetherToken.sol\":4222:4600  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n    tag_24:\n      jumpi(tag_108, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_108:\n      tag_109\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_110)\n    tag_109:\n      stop\n        /* \"contracts/DiverseTetherToken.sol\":3503:3762  function issue(uint amount) public onlyOwner {... */\n    tag_25:\n      jumpi(tag_111, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_111:\n      tag_112\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_113)\n    tag_112:\n      stop\n        /* \"contracts/DiverseTetherToken.sol\":3986:4216  function redeem(uint amount) public onlyOwner {... */\n    tag_26:\n      jumpi(tag_114, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_114:\n      tag_115\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_116)\n    tag_115:\n      stop\n        /* \"contracts/DiverseTetherToken.sol\":2543:2830  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_27:\n      jumpi(tag_117, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_117:\n      tag_118\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_119)\n    tag_118:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BasicToken.sol\":429:460  uint public basisPointsRate = 0 */\n    tag_28:\n      jumpi(tag_120, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_120:\n      tag_121\n      jump(tag_122)\n    tag_121:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Blacklist.sol\":497:543  mapping (address => bool) public isBlackListed */\n    tag_29:\n      jumpi(tag_123, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_123:\n      tag_124\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_125)\n    tag_124:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Blacklist.sol\":702:859  function removeBlackList (address _clearedUser) public onlyOwner {... */\n    tag_30:\n      jumpi(tag_126, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_126:\n      tag_127\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_128)\n    tag_127:\n      stop\n        /* \"contracts/StandardToken.sol\":493:535  uint public constant MAX_UINT = 2**256 - 1 */\n    tag_31:\n      jumpi(tag_129, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_129:\n      tag_130\n      jump(tag_131)\n    tag_130:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":821:968  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_32:\n      jumpi(tag_132, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_132:\n      tag_133\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_134)\n    tag_133:\n      stop\n        /* \"contracts/Blacklist.sol\":865:1183  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n    tag_33:\n      jumpi(tag_135, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_135:\n      tag_136\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_137)\n    tag_136:\n      stop\n        /* \"contracts/DiverseTetherToken.sol\":251:269  string public name */\n    tag_36:\n      0x7\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_139\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_138)\n    tag_139:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_140:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_140\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":2893:3070  function deprecate(address _upgradedAddress) public onlyOwner {... */\n    tag_43:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_142\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_142:\n        /* \"contracts/DiverseTetherToken.sol\":2978:2982  true */\n      0x1\n        /* \"contracts/DiverseTetherToken.sol\":2965:2975  deprecated */\n      0xa\n      0x14\n        /* \"contracts/DiverseTetherToken.sol\":2965:2982  deprecated = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":3010:3026  _upgradedAddress */\n      dup1\n        /* \"contracts/DiverseTetherToken.sol\":2992:3007  upgradedAddress */\n      0xa\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":2992:3026  upgradedAddress = _upgradedAddress */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":3036:3063  Deprecate(_upgradedAddress) */\n      0xcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e\n        /* \"contracts/DiverseTetherToken.sol\":3046:3062  _upgradedAddress */\n      dup2\n        /* \"contracts/DiverseTetherToken.sol\":3036:3063  Deprecate(_upgradedAddress) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DiverseTetherToken.sol\":2893:3070  function deprecate(address _upgradedAddress) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":2165:2461  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_46:\n        /* \"contracts/DiverseTetherToken.sol\":2236:2242  2 * 32 */\n      0x40\n        /* \"contracts/BasicToken.sol\":646:647  4 */\n      0x4\n        /* \"contracts/BasicToken.sol\":639:643  size */\n      dup2\n        /* \"contracts/BasicToken.sol\":639:647  size + 4 */\n      add\n        /* \"contracts/BasicToken.sol\":621:629  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/BasicToken.sol\":621:636  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/BasicToken.sol\":621:647  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/BasicToken.sol\":619:648  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/BasicToken.sol\":611:649  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_145\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_145:\n        /* \"contracts/DiverseTetherToken.sol\":2258:2268  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":2254:2455  if (deprecated) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"contracts/DiverseTetherToken.sol\":2313:2328  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":2291:2345  UpgradedStandardToken(upgradedAddress).approveByLegacy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaee92d33\n        /* \"contracts/DiverseTetherToken.sol\":2346:2356  msg.sender */\n      caller\n        /* \"contracts/DiverseTetherToken.sol\":2358:2366  _spender */\n      dup6\n        /* \"contracts/DiverseTetherToken.sol\":2368:2374  _value */\n      dup6\n        /* \"contracts/DiverseTetherToken.sol\":2291:2375  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_148\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_148:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_149\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_149:\n      pop\n      pop\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":2284:2375  return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      jump(tag_146)\n        /* \"contracts/DiverseTetherToken.sol\":2254:2455  if (deprecated) {... */\n    tag_147:\n        /* \"contracts/DiverseTetherToken.sol\":2413:2444  super.approve(_spender, _value) */\n      tag_151\n        /* \"contracts/DiverseTetherToken.sol\":2427:2435  _spender */\n      dup4\n        /* \"contracts/DiverseTetherToken.sol\":2437:2443  _value */\n      dup4\n        /* \"contracts/DiverseTetherToken.sol\":2413:2426  super.approve */\n      tag_152\n        /* \"contracts/DiverseTetherToken.sol\":2413:2444  super.approve(_spender, _value) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/BasicToken.sol\":659:660  _ */\n    tag_146:\n        /* \"contracts/DiverseTetherToken.sol\":2165:2461  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":363:385  bool public deprecated */\n    tag_49:\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Blacklist.sol\":554:696  function addBlackList (address _evilUser) public onlyOwner {... */\n    tag_52:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_154\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_154:\n        /* \"contracts/Blacklist.sol\":650:654  true */\n      0x1\n        /* \"contracts/Blacklist.sol\":623:636  isBlackListed */\n      0x6\n        /* \"contracts/Blacklist.sol\":623:647  isBlackListed[_evilUser] */\n      0x0\n        /* \"contracts/Blacklist.sol\":637:646  _evilUser */\n      dup4\n        /* \"contracts/Blacklist.sol\":623:647  isBlackListed[_evilUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/Blacklist.sol\":623:654  isBlackListed[_evilUser] = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Blacklist.sol\":664:689  AddedBlackList(_evilUser) */\n      0x42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc\n        /* \"contracts/Blacklist.sol\":679:688  _evilUser */\n      dup2\n        /* \"contracts/Blacklist.sol\":664:689  AddedBlackList(_evilUser) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Blacklist.sol\":554:696  function addBlackList (address _evilUser) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":3133:3345  function totalSupply() public constant returns (uint) {... */\n    tag_55:\n        /* \"contracts/DiverseTetherToken.sol\":3181:3185  uint */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":3201:3211  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":3197:3339  if (deprecated) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"contracts/DiverseTetherToken.sol\":3248:3263  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":3234:3276  StandardToken(upgradedAddress).totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/DiverseTetherToken.sol\":3234:3278  StandardToken(upgradedAddress).totalSupply() */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_158\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_158:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_159\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_159:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":3227:3278  return StandardToken(upgradedAddress).totalSupply() */\n      swap1\n      pop\n      jump(tag_156)\n        /* \"contracts/DiverseTetherToken.sol\":3197:3339  if (deprecated) {... */\n    tag_157:\n        /* \"contracts/DiverseTetherToken.sol\":3316:3328  _totalSupply */\n      sload(0x1)\n        /* \"contracts/DiverseTetherToken.sol\":3309:3328  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":3133:3345  function totalSupply() public constant returns (uint) {... */\n    tag_156:\n      swap1\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":1408:1763  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {... */\n    tag_58:\n        /* \"contracts/Pausable.sol\":435:441  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":434:441  !paused */\n      iszero\n        /* \"contracts/Pausable.sol\":426:442  require(!paused) */\n      iszero\n      iszero\n      tag_162\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_162:\n        /* \"contracts/DiverseTetherToken.sol\":1511:1524  isBlackListed */\n      0x6\n        /* \"contracts/DiverseTetherToken.sol\":1511:1531  isBlackListed[_from] */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":1525:1530  _from */\n      dup5\n        /* \"contracts/DiverseTetherToken.sol\":1511:1531  isBlackListed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":1510:1531  !isBlackListed[_from] */\n      iszero\n        /* \"contracts/DiverseTetherToken.sol\":1502:1532  require(!isBlackListed[_from]) */\n      iszero\n      iszero\n      tag_164\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_164:\n        /* \"contracts/DiverseTetherToken.sol\":1546:1556  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":1542:1757  if (deprecated) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"contracts/DiverseTetherToken.sol\":1601:1616  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":1579:1638  UpgradedStandardToken(upgradedAddress).transferFromByLegacy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8b477adb\n        /* \"contracts/DiverseTetherToken.sol\":1639:1649  msg.sender */\n      caller\n        /* \"contracts/DiverseTetherToken.sol\":1651:1656  _from */\n      dup6\n        /* \"contracts/DiverseTetherToken.sol\":1658:1661  _to */\n      dup6\n        /* \"contracts/DiverseTetherToken.sol\":1663:1669  _value */\n      dup6\n        /* \"contracts/DiverseTetherToken.sol\":1579:1670  UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_166\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_166:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_167\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_167:\n      pop\n      pop\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":1572:1670  return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      jump(tag_163)\n        /* \"contracts/DiverseTetherToken.sol\":1542:1757  if (deprecated) {... */\n    tag_165:\n        /* \"contracts/DiverseTetherToken.sol\":1708:1746  super.transferFrom(_from, _to, _value) */\n      tag_169\n        /* \"contracts/DiverseTetherToken.sol\":1727:1732  _from */\n      dup4\n        /* \"contracts/DiverseTetherToken.sol\":1734:1737  _to */\n      dup4\n        /* \"contracts/DiverseTetherToken.sol\":1739:1745  _value */\n      dup4\n        /* \"contracts/DiverseTetherToken.sol\":1708:1726  super.transferFrom */\n      tag_170\n        /* \"contracts/DiverseTetherToken.sol\":1708:1746  super.transferFrom(_from, _to, _value) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/Pausable.sol\":448:449  _ */\n    tag_163:\n        /* \"contracts/DiverseTetherToken.sol\":1408:1763  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":327:357  address public upgradedAddress */\n    tag_61:\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/BasicToken.sol\":304:344  mapping(address => uint) public balances */\n    tag_64:\n      mstore(0x20, 0x2)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":301:321  uint public decimals */\n    tag_67:\n      sload(0x9)\n      dup2\n      jump\t// out\n        /* \"contracts/BasicToken.sol\":466:492  uint public maximumFee = 0 */\n    tag_70:\n      sload(0x4)\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20Basic.sol\":211:235  uint public _totalSupply */\n    tag_73:\n      sload(0x1)\n      dup2\n      jump\t// out\n        /* \"contracts/Pausable.sol\":852:939  function unpause() onlyOwner whenPaused public {... */\n    tag_76:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_172\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_172:\n        /* \"contracts/Pausable.sol\":587:593  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":579:594  require(paused) */\n      iszero\n      iszero\n      tag_174\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_174:\n        /* \"contracts/Pausable.sol\":914:919  false */\n      0x0\n        /* \"contracts/Pausable.sol\":905:911  paused */\n      dup1\n      0x14\n        /* \"contracts/Pausable.sol\":905:919  paused = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pausable.sol\":925:934  Unpause() */\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Pausable.sol\":852:939  function unpause() onlyOwner whenPaused public {... */\n      jump\t// out\n        /* \"contracts/Blacklist.sol\":278:400  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n    tag_79:\n        /* \"contracts/Blacklist.sol\":349:353  bool */\n      0x0\n        /* \"contracts/Blacklist.sol\":372:385  isBlackListed */\n      0x6\n        /* \"contracts/Blacklist.sol\":372:393  isBlackListed[_maker] */\n      0x0\n        /* \"contracts/Blacklist.sol\":386:392  _maker */\n      dup4\n        /* \"contracts/Blacklist.sol\":372:393  isBlackListed[_maker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Blacklist.sol\":365:393  return isBlackListed[_maker] */\n      swap1\n      pop\n        /* \"contracts/Blacklist.sol\":278:400  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StandardToken.sol\":425:486  mapping (address => mapping (address => uint)) public allowed */\n    tag_82:\n      mstore(0x20, 0x5)\n      dup2\n      0x0\n      mstore\n      mstore(0x20, keccak256(0x0, 0x40))\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Pausable.sol\":266:292  bool public paused = false */\n    tag_85:\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":1845:2083  function balanceOf(address who) public constant returns (uint) {... */\n    tag_88:\n        /* \"contracts/DiverseTetherToken.sol\":1902:1906  uint */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":1922:1932  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":1918:2077  if (deprecated) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"contracts/DiverseTetherToken.sol\":1977:1992  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":1955:2003  UpgradedStandardToken(upgradedAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/DiverseTetherToken.sol\":2004:2007  who */\n      dup4\n        /* \"contracts/DiverseTetherToken.sol\":1955:2008  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_179\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_179:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_180\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_180:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":1948:2008  return UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      swap1\n      pop\n      jump(tag_177)\n        /* \"contracts/DiverseTetherToken.sol\":1918:2077  if (deprecated) {... */\n    tag_178:\n        /* \"contracts/DiverseTetherToken.sol\":2046:2066  super.balanceOf(who) */\n      tag_182\n        /* \"contracts/DiverseTetherToken.sol\":2062:2065  who */\n      dup3\n        /* \"contracts/DiverseTetherToken.sol\":2046:2061  super.balanceOf */\n      tag_183\n        /* \"contracts/DiverseTetherToken.sol\":2046:2066  super.balanceOf(who) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/DiverseTetherToken.sol\":2039:2066  return super.balanceOf(who) */\n      swap1\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":1845:2083  function balanceOf(address who) public constant returns (uint) {... */\n    tag_177:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Pausable.sol\":685:770  function pause() onlyOwner whenNotPaused public {... */\n    tag_91:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_185\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_185:\n        /* \"contracts/Pausable.sol\":435:441  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":434:441  !paused */\n      iszero\n        /* \"contracts/Pausable.sol\":426:442  require(!paused) */\n      iszero\n      iszero\n      tag_187\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_187:\n        /* \"contracts/Pausable.sol\":748:752  true */\n      0x1\n        /* \"contracts/Pausable.sol\":739:745  paused */\n      0x0\n      0x14\n        /* \"contracts/Pausable.sol\":739:752  paused = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pausable.sol\":758:765  Pause() */\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Pausable.sol\":685:770  function pause() onlyOwner whenNotPaused public {... */\n      jump\t// out\n        /* \"contracts/Blacklist.sol\":406:491  function getOwner() external constant returns (address) {... */\n    tag_94:\n        /* \"contracts/Blacklist.sol\":453:460  address */\n      0x0\n        /* \"contracts/Blacklist.sol\":479:484  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Blacklist.sol\":472:484  return owner */\n      swap1\n      pop\n        /* \"contracts/Blacklist.sol\":406:491  function getOwner() external constant returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":271:291  address public owner */\n    tag_97:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":275:295  string public symbol */\n    tag_100:\n      0x8\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_190\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_191\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_190)\n    tag_191:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_192:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_192\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":1007:1326  function transfer(address _to, uint _value) public whenNotPaused {... */\n    tag_107:\n        /* \"contracts/Pausable.sol\":435:441  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":434:441  !paused */\n      iszero\n        /* \"contracts/Pausable.sol\":426:442  require(!paused) */\n      iszero\n      iszero\n      tag_194\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_194:\n        /* \"contracts/DiverseTetherToken.sol\":1091:1104  isBlackListed */\n      0x6\n        /* \"contracts/DiverseTetherToken.sol\":1091:1116  isBlackListed[msg.sender] */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":1105:1115  msg.sender */\n      caller\n        /* \"contracts/DiverseTetherToken.sol\":1091:1116  isBlackListed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":1090:1116  !isBlackListed[msg.sender] */\n      iszero\n        /* \"contracts/DiverseTetherToken.sol\":1082:1117  require(!isBlackListed[msg.sender]) */\n      iszero\n      iszero\n      tag_196\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_196:\n        /* \"contracts/DiverseTetherToken.sol\":1131:1141  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":1127:1320  if (deprecated) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/DiverseTetherToken.sol\":1186:1201  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":1164:1219  UpgradedStandardToken(upgradedAddress).transferByLegacy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6e18980a\n        /* \"contracts/DiverseTetherToken.sol\":1220:1230  msg.sender */\n      caller\n        /* \"contracts/DiverseTetherToken.sol\":1232:1235  _to */\n      dup5\n        /* \"contracts/DiverseTetherToken.sol\":1237:1243  _value */\n      dup5\n        /* \"contracts/DiverseTetherToken.sol\":1164:1244  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_198\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_198:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_199\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_199:\n      pop\n      pop\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":1157:1244  return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      jump(tag_195)\n        /* \"contracts/DiverseTetherToken.sol\":1127:1320  if (deprecated) {... */\n    tag_197:\n        /* \"contracts/DiverseTetherToken.sol\":1282:1309  super.transfer(_to, _value) */\n      tag_201\n        /* \"contracts/DiverseTetherToken.sol\":1297:1300  _to */\n      dup3\n        /* \"contracts/DiverseTetherToken.sol\":1302:1308  _value */\n      dup3\n        /* \"contracts/DiverseTetherToken.sol\":1282:1296  super.transfer */\n      tag_202\n        /* \"contracts/DiverseTetherToken.sol\":1282:1309  super.transfer(_to, _value) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/Pausable.sol\":448:449  _ */\n    tag_195:\n        /* \"contracts/DiverseTetherToken.sol\":1007:1326  function transfer(address _to, uint _value) public whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":4222:4600  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n    tag_110:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_204\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_204:\n        /* \"contracts/DiverseTetherToken.sol\":4418:4420  20 */\n      0x14\n        /* \"contracts/DiverseTetherToken.sol\":4401:4415  newBasisPoints */\n      dup3\n        /* \"contracts/DiverseTetherToken.sol\":4401:4420  newBasisPoints < 20 */\n      lt\n        /* \"contracts/DiverseTetherToken.sol\":4393:4421  require(newBasisPoints < 20) */\n      iszero\n      iszero\n      tag_206\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_206:\n        /* \"contracts/DiverseTetherToken.sol\":4451:4453  50 */\n      0x32\n        /* \"contracts/DiverseTetherToken.sol\":4439:4448  newMaxFee */\n      dup2\n        /* \"contracts/DiverseTetherToken.sol\":4439:4453  newMaxFee < 50 */\n      lt\n        /* \"contracts/DiverseTetherToken.sol\":4431:4454  require(newMaxFee < 50) */\n      iszero\n      iszero\n      tag_207\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_207:\n        /* \"contracts/DiverseTetherToken.sol\":4483:4497  newBasisPoints */\n      dup2\n        /* \"contracts/DiverseTetherToken.sol\":4465:4480  basisPointsRate */\n      0x3\n        /* \"contracts/DiverseTetherToken.sol\":4465:4497  basisPointsRate = newBasisPoints */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":4520:4547  newMaxFee.mul(10**decimals) */\n      tag_208\n        /* \"contracts/DiverseTetherToken.sol\":4538:4546  decimals */\n      sload(0x9)\n        /* \"contracts/DiverseTetherToken.sol\":4534:4536  10 */\n      0xa\n        /* \"contracts/DiverseTetherToken.sol\":4534:4546  10**decimals */\n      exp\n        /* \"contracts/DiverseTetherToken.sol\":4520:4529  newMaxFee */\n      dup3\n        /* \"contracts/DiverseTetherToken.sol\":4520:4533  newMaxFee.mul */\n      tag_209\n      swap1\n        /* \"contracts/DiverseTetherToken.sol\":4520:4547  newMaxFee.mul(10**decimals) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"contracts/DiverseTetherToken.sol\":4507:4517  maximumFee */\n      0x4\n        /* \"contracts/DiverseTetherToken.sol\":4507:4547  maximumFee = newMaxFee.mul(10**decimals) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":4558:4593  Params(basisPointsRate, maximumFee) */\n      0xb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e\n        /* \"contracts/DiverseTetherToken.sol\":4565:4580  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/DiverseTetherToken.sol\":4582:4592  maximumFee */\n      sload(0x4)\n        /* \"contracts/DiverseTetherToken.sol\":4558:4593  Params(basisPointsRate, maximumFee) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DiverseTetherToken.sol\":4222:4600  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":3503:3762  function issue(uint amount) public onlyOwner {... */\n    tag_113:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_211\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_211:\n        /* \"contracts/DiverseTetherToken.sol\":3590:3602  _totalSupply */\n      sload(0x1)\n        /* \"contracts/DiverseTetherToken.sol\":3581:3587  amount */\n      dup2\n        /* \"contracts/DiverseTetherToken.sol\":3566:3578  _totalSupply */\n      sload(0x1)\n        /* \"contracts/DiverseTetherToken.sol\":3566:3587  _totalSupply + amount */\n      add\n        /* \"contracts/DiverseTetherToken.sol\":3566:3602  _totalSupply + amount > _totalSupply */\n      gt\n        /* \"contracts/DiverseTetherToken.sol\":3558:3603  require(_totalSupply + amount > _totalSupply) */\n      iszero\n      iszero\n      tag_213\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_213:\n        /* \"contracts/DiverseTetherToken.sol\":3648:3656  balances */\n      0x2\n        /* \"contracts/DiverseTetherToken.sol\":3648:3663  balances[owner] */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":3657:3662  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":3648:3663  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/DiverseTetherToken.sol\":3639:3645  amount */\n      dup2\n        /* \"contracts/DiverseTetherToken.sol\":3621:3629  balances */\n      0x2\n        /* \"contracts/DiverseTetherToken.sol\":3621:3636  balances[owner] */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":3630:3635  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":3621:3636  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/DiverseTetherToken.sol\":3621:3645  balances[owner] + amount */\n      add\n        /* \"contracts/DiverseTetherToken.sol\":3621:3663  balances[owner] + amount > balances[owner] */\n      gt\n        /* \"contracts/DiverseTetherToken.sol\":3613:3664  require(balances[owner] + amount > balances[owner]) */\n      iszero\n      iszero\n      tag_214\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_214:\n        /* \"contracts/DiverseTetherToken.sol\":3694:3700  amount */\n      dup1\n        /* \"contracts/DiverseTetherToken.sol\":3675:3683  balances */\n      0x2\n        /* \"contracts/DiverseTetherToken.sol\":3675:3690  balances[owner] */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":3684:3689  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":3675:3690  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":3675:3700  balances[owner] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":3726:3732  amount */\n      dup1\n        /* \"contracts/DiverseTetherToken.sol\":3710:3722  _totalSupply */\n      0x1\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":3710:3732  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":3742:3755  Issue(amount) */\n      0xcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a\n        /* \"contracts/DiverseTetherToken.sol\":3748:3754  amount */\n      dup2\n        /* \"contracts/DiverseTetherToken.sol\":3742:3755  Issue(amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DiverseTetherToken.sol\":3503:3762  function issue(uint amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":3986:4216  function redeem(uint amount) public onlyOwner {... */\n    tag_116:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_216\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_216:\n        /* \"contracts/DiverseTetherToken.sol\":4066:4072  amount */\n      dup1\n        /* \"contracts/DiverseTetherToken.sol\":4050:4062  _totalSupply */\n      sload(0x1)\n        /* \"contracts/DiverseTetherToken.sol\":4050:4072  _totalSupply >= amount */\n      lt\n      iszero\n        /* \"contracts/DiverseTetherToken.sol\":4042:4073  require(_totalSupply >= amount) */\n      iszero\n      iszero\n      tag_218\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_218:\n        /* \"contracts/DiverseTetherToken.sol\":4110:4116  amount */\n      dup1\n        /* \"contracts/DiverseTetherToken.sol\":4091:4099  balances */\n      0x2\n        /* \"contracts/DiverseTetherToken.sol\":4091:4106  balances[owner] */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":4100:4105  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":4091:4106  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/DiverseTetherToken.sol\":4091:4116  balances[owner] >= amount */\n      lt\n      iszero\n        /* \"contracts/DiverseTetherToken.sol\":4083:4117  require(balances[owner] >= amount) */\n      iszero\n      iszero\n      tag_219\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_219:\n        /* \"contracts/DiverseTetherToken.sol\":4144:4150  amount */\n      dup1\n        /* \"contracts/DiverseTetherToken.sol\":4128:4140  _totalSupply */\n      0x1\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":4128:4150  _totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":4179:4185  amount */\n      dup1\n        /* \"contracts/DiverseTetherToken.sol\":4160:4168  balances */\n      0x2\n        /* \"contracts/DiverseTetherToken.sol\":4160:4175  balances[owner] */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":4169:4174  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":4160:4175  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":4160:4185  balances[owner] -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":4195:4209  Redeem(amount) */\n      0x702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44\n        /* \"contracts/DiverseTetherToken.sol\":4202:4208  amount */\n      dup2\n        /* \"contracts/DiverseTetherToken.sol\":4195:4209  Redeem(amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DiverseTetherToken.sol\":3986:4216  function redeem(uint amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DiverseTetherToken.sol\":2543:2830  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_119:\n        /* \"contracts/DiverseTetherToken.sol\":2621:2635  uint remaining */\n      0x0\n        /* \"contracts/DiverseTetherToken.sol\":2651:2661  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":2647:2824  if (deprecated) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"contracts/DiverseTetherToken.sol\":2698:2713  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DiverseTetherToken.sol\":2684:2724  StandardToken(upgradedAddress).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/DiverseTetherToken.sol\":2725:2731  _owner */\n      dup5\n        /* \"contracts/DiverseTetherToken.sol\":2733:2741  _spender */\n      dup5\n        /* \"contracts/DiverseTetherToken.sol\":2684:2742  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_222\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_222:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_223\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_223:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":2677:2742  return StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      swap1\n      pop\n      jump(tag_220)\n        /* \"contracts/DiverseTetherToken.sol\":2647:2824  if (deprecated) {... */\n    tag_221:\n        /* \"contracts/DiverseTetherToken.sol\":2780:2813  super.allowance(_owner, _spender) */\n      tag_225\n        /* \"contracts/DiverseTetherToken.sol\":2796:2802  _owner */\n      dup4\n        /* \"contracts/DiverseTetherToken.sol\":2804:2812  _spender */\n      dup4\n        /* \"contracts/DiverseTetherToken.sol\":2780:2795  super.allowance */\n      tag_226\n        /* \"contracts/DiverseTetherToken.sol\":2780:2813  super.allowance(_owner, _spender) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/DiverseTetherToken.sol\":2773:2813  return super.allowance(_owner, _spender) */\n      swap1\n      pop\n        /* \"contracts/DiverseTetherToken.sol\":2543:2830  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_220:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BasicToken.sol\":429:460  uint public basisPointsRate = 0 */\n    tag_122:\n      sload(0x3)\n      dup2\n      jump\t// out\n        /* \"contracts/Blacklist.sol\":497:543  mapping (address => bool) public isBlackListed */\n    tag_125:\n      mstore(0x20, 0x6)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Blacklist.sol\":702:859  function removeBlackList (address _clearedUser) public onlyOwner {... */\n    tag_128:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_228\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_228:\n        /* \"contracts/Blacklist.sol\":807:812  false */\n      0x0\n        /* \"contracts/Blacklist.sol\":777:790  isBlackListed */\n      0x6\n        /* \"contracts/Blacklist.sol\":777:804  isBlackListed[_clearedUser] */\n      0x0\n        /* \"contracts/Blacklist.sol\":791:803  _clearedUser */\n      dup4\n        /* \"contracts/Blacklist.sol\":777:804  isBlackListed[_clearedUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/Blacklist.sol\":777:812  isBlackListed[_clearedUser] = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Blacklist.sol\":822:852  RemovedBlackList(_clearedUser) */\n      0xd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c\n        /* \"contracts/Blacklist.sol\":839:851  _clearedUser */\n      dup2\n        /* \"contracts/Blacklist.sol\":822:852  RemovedBlackList(_clearedUser) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Blacklist.sol\":702:859  function removeBlackList (address _clearedUser) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/StandardToken.sol\":493:535  uint public constant MAX_UINT = 2**256 - 1 */\n    tag_131:\n        /* \"contracts/StandardToken.sol\":525:535  2**256 - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/StandardToken.sol\":493:535  uint public constant MAX_UINT = 2**256 - 1 */\n      dup2\n      jump\t// out\n        /* \"contracts/Ownable.sol\":821:968  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_134:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_231\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_231:\n        /* \"contracts/Ownable.sol\":917:918  0 */\n      0x0\n        /* \"contracts/Ownable.sol\":897:919  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":897:905  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":897:919  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Ownable.sol\":893:962  if (newOwner != address(0)) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"contracts/Ownable.sol\":943:951  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":935:940  owner */\n      0x0\n      dup1\n        /* \"contracts/Ownable.sol\":935:951  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":893:962  if (newOwner != address(0)) {... */\n    tag_233:\n        /* \"contracts/Ownable.sol\":821:968  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Blacklist.sol\":865:1183  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n    tag_137:\n        /* \"contracts/Blacklist.sol\":996:1011  uint dirtyFunds */\n      0x0\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_235\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_235:\n        /* \"contracts/Blacklist.sol\":954:967  isBlackListed */\n      0x6\n        /* \"contracts/Blacklist.sol\":954:985  isBlackListed[_blackListedUser] */\n      0x0\n        /* \"contracts/Blacklist.sol\":968:984  _blackListedUser */\n      dup4\n        /* \"contracts/Blacklist.sol\":954:985  isBlackListed[_blackListedUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Blacklist.sol\":946:986  require(isBlackListed[_blackListedUser]) */\n      iszero\n      iszero\n      tag_237\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_237:\n        /* \"contracts/Blacklist.sol\":1014:1041  balanceOf(_blackListedUser) */\n      tag_238\n        /* \"contracts/Blacklist.sol\":1024:1040  _blackListedUser */\n      dup3\n        /* \"contracts/Blacklist.sol\":1014:1023  balanceOf */\n      tag_88\n        /* \"contracts/Blacklist.sol\":1014:1041  balanceOf(_blackListedUser) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/Blacklist.sol\":996:1041  uint dirtyFunds = balanceOf(_blackListedUser) */\n      swap1\n      pop\n        /* \"contracts/Blacklist.sol\":1080:1081  0 */\n      0x0\n        /* \"contracts/Blacklist.sol\":1051:1059  balances */\n      0x2\n        /* \"contracts/Blacklist.sol\":1051:1077  balances[_blackListedUser] */\n      0x0\n        /* \"contracts/Blacklist.sol\":1060:1076  _blackListedUser */\n      dup5\n        /* \"contracts/Blacklist.sol\":1051:1077  balances[_blackListedUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/Blacklist.sol\":1051:1081  balances[_blackListedUser] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Blacklist.sol\":1107:1117  dirtyFunds */\n      dup1\n        /* \"contracts/Blacklist.sol\":1091:1103  _totalSupply */\n      0x1\n      0x0\n        /* \"contracts/Blacklist.sol\":1091:1117  _totalSupply -= dirtyFunds */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Blacklist.sol\":1127:1176  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      0x61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c6\n        /* \"contracts/Blacklist.sol\":1147:1163  _blackListedUser */\n      dup3\n        /* \"contracts/Blacklist.sol\":1165:1175  dirtyFunds */\n      dup3\n        /* \"contracts/Blacklist.sol\":1127:1176  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Blacklist.sol\":865:1183  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StandardToken.sol\":1937:2500  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_152:\n        /* \"contracts/StandardToken.sol\":2008:2014  2 * 32 */\n      0x40\n        /* \"contracts/BasicToken.sol\":646:647  4 */\n      0x4\n        /* \"contracts/BasicToken.sol\":639:643  size */\n      dup2\n        /* \"contracts/BasicToken.sol\":639:647  size + 4 */\n      add\n        /* \"contracts/BasicToken.sol\":621:629  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/BasicToken.sol\":621:636  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/BasicToken.sol\":621:647  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/BasicToken.sol\":619:648  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/BasicToken.sol\":611:649  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_240\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_240:\n        /* \"contracts/StandardToken.sol\":2352:2353  0 */\n      0x0\n        /* \"contracts/StandardToken.sol\":2342:2348  _value */\n      dup3\n        /* \"contracts/StandardToken.sol\":2342:2353  _value != 0 */\n      eq\n      iszero\n        /* \"contracts/StandardToken.sol\":2341:2394  (_value != 0) && (allowed[msg.sender][_spender] != 0) */\n      dup1\n      iszero\n      tag_242\n      jumpi\n      pop\n        /* \"contracts/StandardToken.sol\":2392:2393  0 */\n      0x0\n        /* \"contracts/StandardToken.sol\":2359:2366  allowed */\n      0x5\n        /* \"contracts/StandardToken.sol\":2359:2378  allowed[msg.sender] */\n      0x0\n        /* \"contracts/StandardToken.sol\":2367:2377  msg.sender */\n      caller\n        /* \"contracts/StandardToken.sol\":2359:2378  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":2359:2388  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/StandardToken.sol\":2379:2387  _spender */\n      dup6\n        /* \"contracts/StandardToken.sol\":2359:2388  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StandardToken.sol\":2359:2393  allowed[msg.sender][_spender] != 0 */\n      eq\n      iszero\n        /* \"contracts/StandardToken.sol\":2341:2394  (_value != 0) && (allowed[msg.sender][_spender] != 0) */\n    tag_242:\n        /* \"contracts/StandardToken.sol\":2339:2395  !((_value != 0) && (allowed[msg.sender][_spender] != 0)) */\n      iszero\n        /* \"contracts/StandardToken.sol\":2331:2396  require(!((_value != 0) && (allowed[msg.sender][_spender] != 0))) */\n      iszero\n      iszero\n      tag_243\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_243:\n        /* \"contracts/StandardToken.sol\":2439:2445  _value */\n      dup2\n        /* \"contracts/StandardToken.sol\":2407:2414  allowed */\n      0x5\n        /* \"contracts/StandardToken.sol\":2407:2426  allowed[msg.sender] */\n      0x0\n        /* \"contracts/StandardToken.sol\":2415:2425  msg.sender */\n      caller\n        /* \"contracts/StandardToken.sol\":2407:2426  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":2407:2436  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/StandardToken.sol\":2427:2435  _spender */\n      dup6\n        /* \"contracts/StandardToken.sol\":2407:2436  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":2407:2445  allowed[msg.sender][_spender] = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StandardToken.sol\":2476:2484  _spender */\n      dup3\n        /* \"contracts/StandardToken.sol\":2455:2493  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StandardToken.sol\":2464:2474  msg.sender */\n      caller\n        /* \"contracts/StandardToken.sol\":2455:2493  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/StandardToken.sol\":2486:2492  _value */\n      dup5\n        /* \"contracts/StandardToken.sol\":2455:2493  Approval(msg.sender, _spender, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/StandardToken.sol\":1937:2500  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StandardToken.sol\":817:1697  function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {... */\n    tag_170:\n        /* \"contracts/StandardToken.sol\":921:935  var _allowance */\n      0x0\n        /* \"contracts/StandardToken.sol\":1130:1138  uint fee */\n      dup1\n        /* \"contracts/StandardToken.sol\":1375:1390  uint sendAmount */\n      0x0\n        /* \"contracts/StandardToken.sol\":903:909  3 * 32 */\n      0x60\n        /* \"contracts/BasicToken.sol\":646:647  4 */\n      0x4\n        /* \"contracts/BasicToken.sol\":639:643  size */\n      dup2\n        /* \"contracts/BasicToken.sol\":639:647  size + 4 */\n      add\n        /* \"contracts/BasicToken.sol\":621:629  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/BasicToken.sol\":621:636  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/BasicToken.sol\":621:647  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/BasicToken.sol\":619:648  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/BasicToken.sol\":611:649  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_245\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_245:\n        /* \"contracts/StandardToken.sol\":938:945  allowed */\n      0x5\n        /* \"contracts/StandardToken.sol\":938:952  allowed[_from] */\n      0x0\n        /* \"contracts/StandardToken.sol\":946:951  _from */\n      dup9\n        /* \"contracts/StandardToken.sol\":938:952  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":938:964  allowed[_from][msg.sender] */\n      0x0\n        /* \"contracts/StandardToken.sol\":953:963  msg.sender */\n      caller\n        /* \"contracts/StandardToken.sol\":938:964  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StandardToken.sol\":921:964  var _allowance = allowed[_from][msg.sender] */\n      swap4\n      pop\n        /* \"contracts/StandardToken.sol\":1141:1181  (_value.mul(basisPointsRate)).div(10000) */\n      tag_247\n        /* \"contracts/StandardToken.sol\":1175:1180  10000 */\n      0x2710\n        /* \"contracts/StandardToken.sol\":1142:1169  _value.mul(basisPointsRate) */\n      tag_248\n        /* \"contracts/StandardToken.sol\":1153:1168  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/StandardToken.sol\":1142:1148  _value */\n      dup9\n        /* \"contracts/StandardToken.sol\":1142:1152  _value.mul */\n      tag_209\n      swap1\n        /* \"contracts/StandardToken.sol\":1142:1169  _value.mul(basisPointsRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"contracts/StandardToken.sol\":1141:1174  (_value.mul(basisPointsRate)).div */\n      tag_249\n      swap1\n        /* \"contracts/StandardToken.sol\":1141:1181  (_value.mul(basisPointsRate)).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"contracts/StandardToken.sol\":1130:1181  uint fee = (_value.mul(basisPointsRate)).div(10000) */\n      swap3\n      pop\n        /* \"contracts/StandardToken.sol\":1201:1211  maximumFee */\n      sload(0x4)\n        /* \"contracts/StandardToken.sol\":1195:1198  fee */\n      dup4\n        /* \"contracts/StandardToken.sol\":1195:1211  fee > maximumFee */\n      gt\n        /* \"contracts/StandardToken.sol\":1191:1254  if (fee > maximumFee) {... */\n      iszero\n      tag_250\n      jumpi\n        /* \"contracts/StandardToken.sol\":1233:1243  maximumFee */\n      sload(0x4)\n        /* \"contracts/StandardToken.sol\":1227:1243  fee = maximumFee */\n      swap3\n      pop\n        /* \"contracts/StandardToken.sol\":1191:1254  if (fee > maximumFee) {... */\n    tag_250:\n        /* \"contracts/StandardToken.sol\":525:535  2**256 - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/StandardToken.sol\":1267:1277  _allowance */\n      dup5\n        /* \"contracts/StandardToken.sol\":1267:1288  _allowance < MAX_UINT */\n      lt\n        /* \"contracts/StandardToken.sol\":1263:1366  if (_allowance < MAX_UINT) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"contracts/StandardToken.sol\":1333:1355  _allowance.sub(_value) */\n      tag_252\n        /* \"contracts/StandardToken.sol\":1348:1354  _value */\n      dup6\n        /* \"contracts/StandardToken.sol\":1333:1343  _allowance */\n      dup6\n        /* \"contracts/StandardToken.sol\":1333:1347  _allowance.sub */\n      tag_253\n      swap1\n        /* \"contracts/StandardToken.sol\":1333:1355  _allowance.sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_252:\n        /* \"contracts/StandardToken.sol\":1304:1311  allowed */\n      0x5\n        /* \"contracts/StandardToken.sol\":1304:1318  allowed[_from] */\n      0x0\n        /* \"contracts/StandardToken.sol\":1312:1317  _from */\n      dup10\n        /* \"contracts/StandardToken.sol\":1304:1318  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":1304:1330  allowed[_from][msg.sender] */\n      0x0\n        /* \"contracts/StandardToken.sol\":1319:1329  msg.sender */\n      caller\n        /* \"contracts/StandardToken.sol\":1304:1330  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":1304:1355  allowed[_from][msg.sender] = _allowance.sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StandardToken.sol\":1263:1366  if (_allowance < MAX_UINT) {... */\n    tag_251:\n        /* \"contracts/StandardToken.sol\":1393:1408  _value.sub(fee) */\n      tag_254\n        /* \"contracts/StandardToken.sol\":1404:1407  fee */\n      dup4\n        /* \"contracts/StandardToken.sol\":1393:1399  _value */\n      dup7\n        /* \"contracts/StandardToken.sol\":1393:1403  _value.sub */\n      tag_253\n      swap1\n        /* \"contracts/StandardToken.sol\":1393:1408  _value.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_254:\n        /* \"contracts/StandardToken.sol\":1375:1408  uint sendAmount = _value.sub(fee) */\n      swap2\n      pop\n        /* \"contracts/StandardToken.sol\":1436:1463  balances[_from].sub(_value) */\n      tag_255\n        /* \"contracts/StandardToken.sol\":1456:1462  _value */\n      dup6\n        /* \"contracts/StandardToken.sol\":1436:1444  balances */\n      0x2\n        /* \"contracts/StandardToken.sol\":1436:1451  balances[_from] */\n      0x0\n        /* \"contracts/StandardToken.sol\":1445:1450  _from */\n      dup11\n        /* \"contracts/StandardToken.sol\":1436:1451  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StandardToken.sol\":1436:1455  balances[_from].sub */\n      tag_253\n      swap1\n        /* \"contracts/StandardToken.sol\":1436:1463  balances[_from].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"contracts/StandardToken.sol\":1418:1426  balances */\n      0x2\n        /* \"contracts/StandardToken.sol\":1418:1433  balances[_from] */\n      0x0\n        /* \"contracts/StandardToken.sol\":1427:1432  _from */\n      dup10\n        /* \"contracts/StandardToken.sol\":1418:1433  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":1418:1463  balances[_from] = balances[_from].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StandardToken.sol\":1489:1518  balances[_to].add(sendAmount) */\n      tag_256\n        /* \"contracts/StandardToken.sol\":1507:1517  sendAmount */\n      dup3\n        /* \"contracts/StandardToken.sol\":1489:1497  balances */\n      0x2\n        /* \"contracts/StandardToken.sol\":1489:1502  balances[_to] */\n      0x0\n        /* \"contracts/StandardToken.sol\":1498:1501  _to */\n      dup10\n        /* \"contracts/StandardToken.sol\":1489:1502  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StandardToken.sol\":1489:1506  balances[_to].add */\n      tag_257\n      swap1\n        /* \"contracts/StandardToken.sol\":1489:1518  balances[_to].add(sendAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"contracts/StandardToken.sol\":1473:1481  balances */\n      0x2\n        /* \"contracts/StandardToken.sol\":1473:1486  balances[_to] */\n      0x0\n        /* \"contracts/StandardToken.sol\":1482:1485  _to */\n      dup9\n        /* \"contracts/StandardToken.sol\":1473:1486  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":1473:1518  balances[_to] = balances[_to].add(sendAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StandardToken.sol\":1538:1539  0 */\n      0x0\n        /* \"contracts/StandardToken.sol\":1532:1535  fee */\n      dup4\n        /* \"contracts/StandardToken.sol\":1532:1539  fee > 0 */\n      gt\n        /* \"contracts/StandardToken.sol\":1528:1649  if (fee > 0) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"contracts/StandardToken.sol\":1573:1597  balances[owner].add(fee) */\n      tag_259\n        /* \"contracts/StandardToken.sol\":1593:1596  fee */\n      dup4\n        /* \"contracts/StandardToken.sol\":1573:1581  balances */\n      0x2\n        /* \"contracts/StandardToken.sol\":1573:1588  balances[owner] */\n      0x0\n        /* \"contracts/StandardToken.sol\":1582:1587  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StandardToken.sol\":1573:1588  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StandardToken.sol\":1573:1592  balances[owner].add */\n      tag_257\n      swap1\n        /* \"contracts/StandardToken.sol\":1573:1597  balances[owner].add(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_259:\n        /* \"contracts/StandardToken.sol\":1555:1563  balances */\n      0x2\n        /* \"contracts/StandardToken.sol\":1555:1570  balances[owner] */\n      0x0\n        /* \"contracts/StandardToken.sol\":1564:1569  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StandardToken.sol\":1555:1570  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":1555:1597  balances[owner] = balances[owner].add(fee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StandardToken.sol\":1627:1632  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StandardToken.sol\":1611:1638  Transfer(_from, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StandardToken.sol\":1620:1625  _from */\n      dup8\n        /* \"contracts/StandardToken.sol\":1611:1638  Transfer(_from, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/StandardToken.sol\":1634:1637  fee */\n      dup6\n        /* \"contracts/StandardToken.sol\":1611:1638  Transfer(_from, owner, fee) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/StandardToken.sol\":1528:1649  if (fee > 0) {... */\n    tag_258:\n        /* \"contracts/StandardToken.sol\":1674:1677  _to */\n      dup6\n        /* \"contracts/StandardToken.sol\":1658:1690  Transfer(_from, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StandardToken.sol\":1667:1672  _from */\n      dup8\n        /* \"contracts/StandardToken.sol\":1658:1690  Transfer(_from, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/StandardToken.sol\":1679:1689  sendAmount */\n      dup5\n        /* \"contracts/StandardToken.sol\":1658:1690  Transfer(_from, _to, sendAmount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/StandardToken.sol\":817:1697  function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BasicToken.sol\":1580:1694  function balanceOf(address _owner) public constant returns (uint balance) {... */\n    tag_183:\n        /* \"contracts/BasicToken.sol\":1640:1652  uint balance */\n      0x0\n        /* \"contracts/BasicToken.sol\":1671:1679  balances */\n      0x2\n        /* \"contracts/BasicToken.sol\":1671:1687  balances[_owner] */\n      0x0\n        /* \"contracts/BasicToken.sol\":1680:1686  _owner */\n      dup4\n        /* \"contracts/BasicToken.sol\":1671:1687  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/BasicToken.sol\":1664:1687  return balances[_owner] */\n      swap1\n      pop\n        /* \"contracts/BasicToken.sol\":1580:1694  function balanceOf(address _owner) public constant returns (uint balance) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BasicToken.sol\":833:1369  function transfer(address _to, uint _value) public {... */\n    tag_202:\n        /* \"contracts/BasicToken.sol\":894:902  uint fee */\n      0x0\n        /* \"contracts/BasicToken.sol\":1027:1042  uint sendAmount */\n      dup1\n        /* \"contracts/BasicToken.sol\":905:945  (_value.mul(basisPointsRate)).div(10000) */\n      tag_262\n        /* \"contracts/BasicToken.sol\":939:944  10000 */\n      0x2710\n        /* \"contracts/BasicToken.sol\":906:933  _value.mul(basisPointsRate) */\n      tag_263\n        /* \"contracts/BasicToken.sol\":917:932  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/BasicToken.sol\":906:912  _value */\n      dup7\n        /* \"contracts/BasicToken.sol\":906:916  _value.mul */\n      tag_209\n      swap1\n        /* \"contracts/BasicToken.sol\":906:933  _value.mul(basisPointsRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_263:\n        /* \"contracts/BasicToken.sol\":905:938  (_value.mul(basisPointsRate)).div */\n      tag_249\n      swap1\n        /* \"contracts/BasicToken.sol\":905:945  (_value.mul(basisPointsRate)).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_262:\n        /* \"contracts/BasicToken.sol\":894:945  uint fee = (_value.mul(basisPointsRate)).div(10000) */\n      swap2\n      pop\n        /* \"contracts/BasicToken.sol\":965:975  maximumFee */\n      sload(0x4)\n        /* \"contracts/BasicToken.sol\":959:962  fee */\n      dup3\n        /* \"contracts/BasicToken.sol\":959:975  fee > maximumFee */\n      gt\n        /* \"contracts/BasicToken.sol\":955:1018  if (fee > maximumFee) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"contracts/BasicToken.sol\":997:1007  maximumFee */\n      sload(0x4)\n        /* \"contracts/BasicToken.sol\":991:1007  fee = maximumFee */\n      swap2\n      pop\n        /* \"contracts/BasicToken.sol\":955:1018  if (fee > maximumFee) {... */\n    tag_264:\n        /* \"contracts/BasicToken.sol\":1045:1060  _value.sub(fee) */\n      tag_265\n        /* \"contracts/BasicToken.sol\":1056:1059  fee */\n      dup3\n        /* \"contracts/BasicToken.sol\":1045:1051  _value */\n      dup5\n        /* \"contracts/BasicToken.sol\":1045:1055  _value.sub */\n      tag_253\n      swap1\n        /* \"contracts/BasicToken.sol\":1045:1060  _value.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_265:\n        /* \"contracts/BasicToken.sol\":1027:1060  uint sendAmount = _value.sub(fee) */\n      swap1\n      pop\n        /* \"contracts/BasicToken.sol\":1093:1125  balances[msg.sender].sub(_value) */\n      tag_266\n        /* \"contracts/BasicToken.sol\":1118:1124  _value */\n      dup4\n        /* \"contracts/BasicToken.sol\":1093:1101  balances */\n      0x2\n        /* \"contracts/BasicToken.sol\":1093:1113  balances[msg.sender] */\n      0x0\n        /* \"contracts/BasicToken.sol\":1102:1112  msg.sender */\n      caller\n        /* \"contracts/BasicToken.sol\":1093:1113  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/BasicToken.sol\":1093:1117  balances[msg.sender].sub */\n      tag_253\n      swap1\n        /* \"contracts/BasicToken.sol\":1093:1125  balances[msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_266:\n        /* \"contracts/BasicToken.sol\":1070:1078  balances */\n      0x2\n        /* \"contracts/BasicToken.sol\":1070:1090  balances[msg.sender] */\n      0x0\n        /* \"contracts/BasicToken.sol\":1079:1089  msg.sender */\n      caller\n        /* \"contracts/BasicToken.sol\":1070:1090  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BasicToken.sol\":1070:1125  balances[msg.sender] = balances[msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BasicToken.sol\":1151:1180  balances[_to].add(sendAmount) */\n      tag_267\n        /* \"contracts/BasicToken.sol\":1169:1179  sendAmount */\n      dup2\n        /* \"contracts/BasicToken.sol\":1151:1159  balances */\n      0x2\n        /* \"contracts/BasicToken.sol\":1151:1164  balances[_to] */\n      0x0\n        /* \"contracts/BasicToken.sol\":1160:1163  _to */\n      dup8\n        /* \"contracts/BasicToken.sol\":1151:1164  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/BasicToken.sol\":1151:1168  balances[_to].add */\n      tag_257\n      swap1\n        /* \"contracts/BasicToken.sol\":1151:1180  balances[_to].add(sendAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_267:\n        /* \"contracts/BasicToken.sol\":1135:1143  balances */\n      0x2\n        /* \"contracts/BasicToken.sol\":1135:1148  balances[_to] */\n      0x0\n        /* \"contracts/BasicToken.sol\":1144:1147  _to */\n      dup7\n        /* \"contracts/BasicToken.sol\":1135:1148  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BasicToken.sol\":1135:1180  balances[_to] = balances[_to].add(sendAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BasicToken.sol\":1200:1201  0 */\n      0x0\n        /* \"contracts/BasicToken.sol\":1194:1197  fee */\n      dup3\n        /* \"contracts/BasicToken.sol\":1194:1201  fee > 0 */\n      gt\n        /* \"contracts/BasicToken.sol\":1190:1316  if (fee > 0) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"contracts/BasicToken.sol\":1235:1259  balances[owner].add(fee) */\n      tag_269\n        /* \"contracts/BasicToken.sol\":1255:1258  fee */\n      dup3\n        /* \"contracts/BasicToken.sol\":1235:1243  balances */\n      0x2\n        /* \"contracts/BasicToken.sol\":1235:1250  balances[owner] */\n      0x0\n        /* \"contracts/BasicToken.sol\":1244:1249  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BasicToken.sol\":1235:1250  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/BasicToken.sol\":1235:1254  balances[owner].add */\n      tag_257\n      swap1\n        /* \"contracts/BasicToken.sol\":1235:1259  balances[owner].add(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_269:\n        /* \"contracts/BasicToken.sol\":1217:1225  balances */\n      0x2\n        /* \"contracts/BasicToken.sol\":1217:1232  balances[owner] */\n      0x0\n        /* \"contracts/BasicToken.sol\":1226:1231  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BasicToken.sol\":1217:1232  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BasicToken.sol\":1217:1259  balances[owner] = balances[owner].add(fee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BasicToken.sol\":1294:1299  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BasicToken.sol\":1273:1305  Transfer(msg.sender, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BasicToken.sol\":1282:1292  msg.sender */\n      caller\n        /* \"contracts/BasicToken.sol\":1273:1305  Transfer(msg.sender, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BasicToken.sol\":1301:1304  fee */\n      dup5\n        /* \"contracts/BasicToken.sol\":1273:1305  Transfer(msg.sender, owner, fee) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BasicToken.sol\":1190:1316  if (fee > 0) {... */\n    tag_268:\n        /* \"contracts/BasicToken.sol\":1346:1349  _to */\n      dup4\n        /* \"contracts/BasicToken.sol\":1325:1362  Transfer(msg.sender, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BasicToken.sol\":1334:1344  msg.sender */\n      caller\n        /* \"contracts/BasicToken.sol\":1325:1362  Transfer(msg.sender, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BasicToken.sol\":1351:1361  sendAmount */\n      dup4\n        /* \"contracts/BasicToken.sol\":1325:1362  Transfer(msg.sender, _to, sendAmount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BasicToken.sol\":833:1369  function transfer(address _to, uint _value) public {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":171:372  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_209:\n        /* \"contracts/SafeMath.sol\":229:236  uint256 */\n      0x0\n        /* \"contracts/SafeMath.sol\":302:311  uint256 c */\n      dup1\n        /* \"contracts/SafeMath.sol\":257:258  0 */\n      0x0\n        /* \"contracts/SafeMath.sol\":252:253  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":252:258  a == 0 */\n      eq\n        /* \"contracts/SafeMath.sol\":248:293  if (a == 0) {... */\n      iszero\n      tag_271\n      jumpi\n        /* \"contracts/SafeMath.sol\":281:282  0 */\n      0x0\n        /* \"contracts/SafeMath.sol\":274:282  return 0 */\n      swap2\n      pop\n      jump(tag_270)\n        /* \"contracts/SafeMath.sol\":248:293  if (a == 0) {... */\n    tag_271:\n        /* \"contracts/SafeMath.sol\":318:319  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":314:315  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":314:319  a * b */\n      mul\n        /* \"contracts/SafeMath.sol\":302:319  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":345:346  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":340:341  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":336:337  c */\n      dup3\n        /* \"contracts/SafeMath.sol\":336:341  c / a */\n      dup2\n      iszero\n      iszero\n      tag_272\n      jumpi\n      invalid\n    tag_272:\n      div\n        /* \"contracts/SafeMath.sol\":336:346  c / a == b */\n      eq\n        /* \"contracts/SafeMath.sol\":329:347  assert(c / a == b) */\n      iszero\n      iszero\n      tag_273\n      jumpi\n      invalid\n    tag_273:\n        /* \"contracts/SafeMath.sol\":364:365  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":357:365  return c */\n      swap2\n      pop\n        /* \"contracts/SafeMath.sol\":171:372  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_270:\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StandardToken.sol\":2825:2968  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_226:\n        /* \"contracts/StandardToken.sol\":2903:2917  uint remaining */\n      0x0\n        /* \"contracts/StandardToken.sol\":2936:2943  allowed */\n      0x5\n        /* \"contracts/StandardToken.sol\":2936:2951  allowed[_owner] */\n      0x0\n        /* \"contracts/StandardToken.sol\":2944:2950  _owner */\n      dup5\n        /* \"contracts/StandardToken.sol\":2936:2951  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StandardToken.sol\":2936:2961  allowed[_owner][_spender] */\n      0x0\n        /* \"contracts/StandardToken.sol\":2952:2960  _spender */\n      dup4\n        /* \"contracts/StandardToken.sol\":2936:2961  allowed[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StandardToken.sol\":2929:2961  return allowed[_owner][_spender] */\n      swap1\n      pop\n        /* \"contracts/StandardToken.sol\":2825:2968  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":378:661  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_249:\n        /* \"contracts/SafeMath.sol\":436:443  uint256 */\n      0x0\n        /* \"contracts/SafeMath.sol\":533:542  uint256 c */\n      dup1\n        /* \"contracts/SafeMath.sol\":549:550  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":545:546  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":545:550  a / b */\n      dup2\n      iszero\n      iszero\n      tag_276\n      jumpi\n      invalid\n    tag_276:\n      div\n        /* \"contracts/SafeMath.sol\":533:550  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":653:654  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":646:654  return c */\n      swap2\n      pop\n        /* \"contracts/SafeMath.sol\":378:661  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":667:787  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_253:\n        /* \"contracts/SafeMath.sol\":725:732  uint256 */\n      0x0\n        /* \"contracts/SafeMath.sol\":756:757  a */\n      dup3\n        /* \"contracts/SafeMath.sol\":751:752  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":751:757  b <= a */\n      gt\n      iszero\n        /* \"contracts/SafeMath.sol\":744:758  assert(b <= a) */\n      iszero\n      iszero\n      tag_278\n      jumpi\n      invalid\n    tag_278:\n        /* \"contracts/SafeMath.sol\":779:780  b */\n      dup2\n        /* \"contracts/SafeMath.sol\":775:776  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":775:780  a - b */\n      sub\n        /* \"contracts/SafeMath.sol\":768:780  return a - b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":667:787  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":793:936  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_257:\n        /* \"contracts/SafeMath.sol\":851:858  uint256 */\n      0x0\n        /* \"contracts/SafeMath.sol\":870:879  uint256 c */\n      dup1\n        /* \"contracts/SafeMath.sol\":886:887  b */\n      dup3\n        /* \"contracts/SafeMath.sol\":882:883  a */\n      dup5\n        /* \"contracts/SafeMath.sol\":882:887  a + b */\n      add\n        /* \"contracts/SafeMath.sol\":870:887  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":909:910  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":904:905  c */\n      dup2\n        /* \"contracts/SafeMath.sol\":904:910  c >= a */\n      lt\n      iszero\n        /* \"contracts/SafeMath.sol\":897:911  assert(c >= a) */\n      iszero\n      iszero\n      tag_280\n      jumpi\n      invalid\n    tag_280:\n        /* \"contracts/SafeMath.sol\":928:929  c */\n      dup1\n        /* \"contracts/SafeMath.sol\":921:929  return c */\n      swap2\n      pop\n        /* \"contracts/SafeMath.sol\":793:936  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820f2f042dbcd03bc16b7c5e1f7fa97c1a2836f359992249c6650124fde3a51b7f00029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "606060405260008060146101000a81548160ff0219169083151502179055506000600355600060045534156200003457600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550662386f26fc100006001819055506040805190810160405280600b81526020017f645465746865722055534400000000000000000000000000000000000000000081525060079080519060200190620000cf929190620001b3565b506040805190810160405280600581526020017f6455534454000000000000000000000000000000000000000000000000000000815250600890805190602001906200011d929190620001b3565b506006600981905550662386f26fc10000600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600a60146101000a81548160ff02191690831515021790555062000262565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001f657805160ff191683800117855562000227565b8280016001018555821562000227579182015b828111156200022657825182559160200191906001019062000209565b5b5090506200023691906200023a565b5090565b6200025f91905b808211156200025b57600081600090555060010162000241565b5090565b90565b612b2880620002726000396000f30060606040523615610194576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101995780630753c30c14610227578063095ea7b3146102605780630e136b19146102a25780630ecb93c0146102cf57806318160ddd1461030857806323b872dd1461033157806326976e3f1461039257806327e235e3146103e7578063313ce56714610434578063353907141461045d5780633eaaf86b146104865780633f4ba83a146104af57806359bf1abe146104c45780635c658165146105155780635c975abb1461058157806370a08231146105ae5780638456cb59146105fb578063893d20e8146106105780638da5cb5b1461066557806395d89b41146106ba578063a9059cbb14610748578063c0324c771461078a578063cc872b66146107b6578063db006a75146107d9578063dd62ed3e146107fc578063dd644f7214610868578063e47d606014610891578063e4997dc5146108e2578063e5b5019a1461091b578063f2fde38b14610944578063f3bdc2281461097d575b600080fd5b34156101a457600080fd5b6101ac6109b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ec5780820151818401526020810190506101d1565b50505050905090810190601f1680156102195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561023257600080fd5b61025e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a54565b005b341561026b57600080fd5b6102a0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610b71565b005b34156102ad57600080fd5b6102b5610cbf565b604051808215151515815260200191505060405180910390f35b34156102da57600080fd5b610306600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610cd2565b005b341561031357600080fd5b61031b610deb565b6040518082815260200191505060405180910390f35b341561033c57600080fd5b610390600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ebb565b005b341561039d57600080fd5b6103a561109b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103f257600080fd5b61041e600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110c1565b6040518082815260200191505060405180910390f35b341561043f57600080fd5b6104476110d9565b6040518082815260200191505060405180910390f35b341561046857600080fd5b6104706110df565b6040518082815260200191505060405180910390f35b341561049157600080fd5b6104996110e5565b6040518082815260200191505060405180910390f35b34156104ba57600080fd5b6104c26110eb565b005b34156104cf57600080fd5b6104fb600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111a9565b604051808215151515815260200191505060405180910390f35b341561052057600080fd5b61056b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111ff565b6040518082815260200191505060405180910390f35b341561058c57600080fd5b610594611224565b604051808215151515815260200191505060405180910390f35b34156105b957600080fd5b6105e5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611237565b6040518082815260200191505060405180910390f35b341561060657600080fd5b61060e611346565b005b341561061b57600080fd5b610623611406565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561067057600080fd5b61067861142f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106c557600080fd5b6106cd611454565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561070d5780820151818401526020810190506106f2565b50505050905090810190601f16801561073a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561075357600080fd5b610788600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506114f2565b005b341561079557600080fd5b6107b4600480803590602001909190803590602001909190505061169c565b005b34156107c157600080fd5b6107d76004808035906020019091905050611781565b005b34156107e457600080fd5b6107fa6004808035906020019091905050611978565b005b341561080757600080fd5b610852600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611b0b565b6040518082815260200191505060405180910390f35b341561087357600080fd5b61087b611c50565b6040518082815260200191505060405180910390f35b341561089c57600080fd5b6108c8600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c56565b604051808215151515815260200191505060405180910390f35b34156108ed57600080fd5b610919600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c76565b005b341561092657600080fd5b61092e611d8f565b6040518082815260200191505060405180910390f35b341561094f57600080fd5b61097b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611db3565b005b341561098857600080fd5b6109b4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611e88565b005b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a4c5780601f10610a2157610100808354040283529160200191610a4c565b820191906000526020600020905b815481529060010190602001808311610a2f57829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610aaf57600080fd5b6001600a60146101000a81548160ff02191690831515021790555080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b604060048101600036905010151515610b8957600080fd5b600a60149054906101000a900460ff1615610caf57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aee92d333385856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1515610c9657600080fd5b6102c65a03f11515610ca757600080fd5b505050610cba565b610cb9838361200c565b5b505050565b600a60149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d2d57600080fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615610eb257600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610e9057600080fd5b6102c65a03f11515610ea157600080fd5b505050604051805190509050610eb8565b60015490505b90565b600060149054906101000a900460ff16151515610ed757600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610f3057600080fd5b600a60149054906101000a900460ff161561108a57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b477adb338585856040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050600060405180830381600087803b151561107157600080fd5b6102c65a03f1151561108257600080fd5b505050611096565b6110958383836121a9565b5b505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b60095481565b60045481565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561114657600080fd5b600060149054906101000a900460ff16151561116157600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600060149054906101000a900460ff1681565b6000600a60149054906101000a900460ff161561133557600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561131357600080fd5b6102c65a03f1151561132457600080fd5b505050604051805190509050611341565b61133e82612650565b90505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a157600080fd5b600060149054906101000a900460ff161515156113bd57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114ea5780601f106114bf576101008083540402835291602001916114ea565b820191906000526020600020905b8154815290600101906020018083116114cd57829003601f168201915b505050505081565b600060149054906101000a900460ff1615151561150e57600080fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561156757600080fd5b600a60149054906101000a900460ff161561168d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e18980a3384846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b151561167457600080fd5b6102c65a03f1151561168557600080fd5b505050611698565b6116978282612699565b5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156116f757600080fd5b60148210151561170657600080fd5b60328110151561171557600080fd5b81600381905550611734600954600a0a826129e890919063ffffffff16565b6004819055507fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e600354600454604051808381526020018281526020019250505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117dc57600080fd5b60015481600154011115156117f057600080fd5b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011115156118c057600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550806001600082825401925050819055507fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a816040518082815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119d357600080fd5b80600154101515156119e457600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515611a5357600080fd5b8060016000828254039250508190555080600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44816040518082815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615611c3d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1515611c1b57600080fd5b6102c65a03f11515611c2c57600080fd5b505050604051805190509050611c4a565b611c478383612a23565b90505b92915050565b60035481565b60066020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cd157600080fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e0e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515611e8557806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ee557600080fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611f3d57600080fd5b611f4682611237565b90506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806001600082825403925050819055507f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c68282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60406004810160003690501015151561202457600080fd5b600082141580156120b257506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b1515156120be57600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3505050565b60008060006060600481016000369050101515156121c657600080fd5b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054935061226e612710612260600354886129e890919063ffffffff16565b612aaa90919063ffffffff16565b92506004548311156122805760045492505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84101561233c576122bb8585612ac590919063ffffffff16565b600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61234f8386612ac590919063ffffffff16565b91506123a385600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ac590919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061243882600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008311156125e2576124f783600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806126c56127106126b7600354866129e890919063ffffffff16565b612aaa90919063ffffffff16565b91506004548211156126d75760045491505b6126ea8284612ac590919063ffffffff16565b905061273e83600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ac590919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506127d381600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600082111561297d5761289282600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505050565b60008060008414156129fd5760009150612a1c565b8284029050828482811515612a0e57fe5b04141515612a1857fe5b8091505b5092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000808284811515612ab857fe5b0490508091505092915050565b6000828211151515612ad357fe5b818303905092915050565b6000808284019050838110151515612af257fe5b80915050929150505600a165627a7a72305820f2f042dbcd03bc16b7c5e1f7fa97c1a2836f359992249c6650124fde3a51b7f00029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SSTORE PUSH1 0x0 PUSH1 0x4 SSTORE CALLVALUE ISZERO PUSH3 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x2386F26FC10000 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6454657468657220555344000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xCF SWAP3 SWAP2 SWAP1 PUSH3 0x1B3 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6455534454000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x11D SWAP3 SWAP2 SWAP1 PUSH3 0x1B3 JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH7 0x2386F26FC10000 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x262 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x1F6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x227 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x227 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x226 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x209 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x236 SWAP2 SWAP1 PUSH3 0x23A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x25F SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x25B JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x241 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2B28 DUP1 PUSH3 0x272 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5AE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6BA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x78A JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x7B6 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x7D9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x868 JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x891 JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x8E2 JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x91B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x944 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x97D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AC PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x219 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xA54 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xB71 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B5 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xCD2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31B PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x390 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xEBB JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A5 PUSH2 0x109B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x447 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x470 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x499 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C2 PUSH2 0x10EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4FB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x594 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E5 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60E PUSH2 0x1346 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x623 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x678 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6CD PUSH2 0x1454 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x70D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6F2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x73A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x788 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x14F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x169C JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D7 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1781 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7FA PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1978 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x852 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87B PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x89C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C8 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x919 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x92E PUSH2 0x1D8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x94F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x97B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1DB3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1E88 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xAAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0xB89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCAF JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAEE92D33 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0xCBA JUMP JUMPDEST PUSH2 0xCB9 DUP4 DUP4 PUSH2 0x200C JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xD2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xEB2 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xE90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xF30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x108A JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8B477ADB CALLER DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1071 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1082 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1096 JUMP JUMPDEST PUSH2 0x1095 DUP4 DUP4 DUP4 PUSH2 0x21A9 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1335 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x133E DUP3 PUSH2 0x2650 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x14EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x150E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x168D JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E18980A CALLER DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1697 DUP3 DUP3 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x16F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 DUP3 LT ISZERO ISZERO PUSH2 0x1706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 LT ISZERO ISZERO PUSH2 0x1715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1734 PUSH1 0x9 SLOAD PUSH1 0xA EXP DUP3 PUSH2 0x29E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x17DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 PUSH1 0x1 SLOAD ADD GT ISZERO ISZERO PUSH2 0x17F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD GT ISZERO ISZERO PUSH2 0x18C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x19D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x19E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x1A53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C3D JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP5 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1C1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1C2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x1C47 DUP4 DUP4 PUSH2 0x2A23 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E85 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1EE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1F3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F46 DUP3 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x2024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x20B2 JUMPI POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x20BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x21C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP PUSH2 0x226E PUSH2 0x2710 PUSH2 0x2260 PUSH1 0x3 SLOAD DUP9 PUSH2 0x29E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x2280 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 LT ISZERO PUSH2 0x233C JUMPI PUSH2 0x22BB DUP6 DUP6 PUSH2 0x2AC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x234F DUP4 DUP7 PUSH2 0x2AC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x23A3 DUP6 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2438 DUP3 PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x25E2 JUMPI PUSH2 0x24F7 DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x26C5 PUSH2 0x2710 PUSH2 0x26B7 PUSH1 0x3 SLOAD DUP7 PUSH2 0x29E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x4 SLOAD DUP3 GT ISZERO PUSH2 0x26D7 JUMPI PUSH1 0x4 SLOAD SWAP2 POP JUMPDEST PUSH2 0x26EA DUP3 DUP5 PUSH2 0x2AC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x273E DUP4 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x27D3 DUP2 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x297D JUMPI PUSH2 0x2892 DUP3 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x29FD JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x2A1C JUMP JUMPDEST DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x2A0E JUMPI INVALID JUMPDEST DIV EQ ISZERO ISZERO PUSH2 0x2A18 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x2AB8 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x2AD3 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x2AF2 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 CALLCODE CREATE TIMESTAMP 0xdb 0xcd SUB 0xbc AND 0xb7 0xc5 0xe1 0xf7 STATICCALL SWAP8 0xc1 LOG2 DUP4 PUSH16 0x359992249C6650124FDE3A51B7F00029 ",
							"sourceMap": "178:4744:2:-;;;287:5:6;266:26;;;;;;;;;;;;;;;;;;;;459:1:0;429:31;;491:1;466:26;;680:245:2;;;;;;;;469:10:5;461:5;;:18;;;;;;;;;;;;;;;;;;742:21:2;727:12;:36;;;;773:20;;;;;;;;;;;;;;;;;;:4;:20;;;;;;;;;;;;:::i;:::-;;803:16;;;;;;;;;;;;;;;;;;:6;:16;;;;;;;;;;;;:::i;:::-;;840:1;829:8;:12;;;;869:21;851:8;:15;860:5;;;;;;;;;;;851:15;;;;;;;;;;;;;;;:39;;;;913:5;900:10;;:18;;;;;;;;;;;;;;;;;;178:4744;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60606040523615610194576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101995780630753c30c14610227578063095ea7b3146102605780630e136b19146102a25780630ecb93c0146102cf57806318160ddd1461030857806323b872dd1461033157806326976e3f1461039257806327e235e3146103e7578063313ce56714610434578063353907141461045d5780633eaaf86b146104865780633f4ba83a146104af57806359bf1abe146104c45780635c658165146105155780635c975abb1461058157806370a08231146105ae5780638456cb59146105fb578063893d20e8146106105780638da5cb5b1461066557806395d89b41146106ba578063a9059cbb14610748578063c0324c771461078a578063cc872b66146107b6578063db006a75146107d9578063dd62ed3e146107fc578063dd644f7214610868578063e47d606014610891578063e4997dc5146108e2578063e5b5019a1461091b578063f2fde38b14610944578063f3bdc2281461097d575b600080fd5b34156101a457600080fd5b6101ac6109b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ec5780820151818401526020810190506101d1565b50505050905090810190601f1680156102195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561023257600080fd5b61025e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a54565b005b341561026b57600080fd5b6102a0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610b71565b005b34156102ad57600080fd5b6102b5610cbf565b604051808215151515815260200191505060405180910390f35b34156102da57600080fd5b610306600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610cd2565b005b341561031357600080fd5b61031b610deb565b6040518082815260200191505060405180910390f35b341561033c57600080fd5b610390600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ebb565b005b341561039d57600080fd5b6103a561109b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103f257600080fd5b61041e600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110c1565b6040518082815260200191505060405180910390f35b341561043f57600080fd5b6104476110d9565b6040518082815260200191505060405180910390f35b341561046857600080fd5b6104706110df565b6040518082815260200191505060405180910390f35b341561049157600080fd5b6104996110e5565b6040518082815260200191505060405180910390f35b34156104ba57600080fd5b6104c26110eb565b005b34156104cf57600080fd5b6104fb600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111a9565b604051808215151515815260200191505060405180910390f35b341561052057600080fd5b61056b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111ff565b6040518082815260200191505060405180910390f35b341561058c57600080fd5b610594611224565b604051808215151515815260200191505060405180910390f35b34156105b957600080fd5b6105e5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611237565b6040518082815260200191505060405180910390f35b341561060657600080fd5b61060e611346565b005b341561061b57600080fd5b610623611406565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561067057600080fd5b61067861142f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106c557600080fd5b6106cd611454565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561070d5780820151818401526020810190506106f2565b50505050905090810190601f16801561073a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561075357600080fd5b610788600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506114f2565b005b341561079557600080fd5b6107b4600480803590602001909190803590602001909190505061169c565b005b34156107c157600080fd5b6107d76004808035906020019091905050611781565b005b34156107e457600080fd5b6107fa6004808035906020019091905050611978565b005b341561080757600080fd5b610852600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611b0b565b6040518082815260200191505060405180910390f35b341561087357600080fd5b61087b611c50565b6040518082815260200191505060405180910390f35b341561089c57600080fd5b6108c8600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c56565b604051808215151515815260200191505060405180910390f35b34156108ed57600080fd5b610919600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c76565b005b341561092657600080fd5b61092e611d8f565b6040518082815260200191505060405180910390f35b341561094f57600080fd5b61097b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611db3565b005b341561098857600080fd5b6109b4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611e88565b005b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a4c5780601f10610a2157610100808354040283529160200191610a4c565b820191906000526020600020905b815481529060010190602001808311610a2f57829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610aaf57600080fd5b6001600a60146101000a81548160ff02191690831515021790555080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b604060048101600036905010151515610b8957600080fd5b600a60149054906101000a900460ff1615610caf57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aee92d333385856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1515610c9657600080fd5b6102c65a03f11515610ca757600080fd5b505050610cba565b610cb9838361200c565b5b505050565b600a60149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d2d57600080fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615610eb257600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610e9057600080fd5b6102c65a03f11515610ea157600080fd5b505050604051805190509050610eb8565b60015490505b90565b600060149054906101000a900460ff16151515610ed757600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610f3057600080fd5b600a60149054906101000a900460ff161561108a57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b477adb338585856040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050600060405180830381600087803b151561107157600080fd5b6102c65a03f1151561108257600080fd5b505050611096565b6110958383836121a9565b5b505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b60095481565b60045481565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561114657600080fd5b600060149054906101000a900460ff16151561116157600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600060149054906101000a900460ff1681565b6000600a60149054906101000a900460ff161561133557600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561131357600080fd5b6102c65a03f1151561132457600080fd5b505050604051805190509050611341565b61133e82612650565b90505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a157600080fd5b600060149054906101000a900460ff161515156113bd57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114ea5780601f106114bf576101008083540402835291602001916114ea565b820191906000526020600020905b8154815290600101906020018083116114cd57829003601f168201915b505050505081565b600060149054906101000a900460ff1615151561150e57600080fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561156757600080fd5b600a60149054906101000a900460ff161561168d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e18980a3384846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b151561167457600080fd5b6102c65a03f1151561168557600080fd5b505050611698565b6116978282612699565b5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156116f757600080fd5b60148210151561170657600080fd5b60328110151561171557600080fd5b81600381905550611734600954600a0a826129e890919063ffffffff16565b6004819055507fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e600354600454604051808381526020018281526020019250505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117dc57600080fd5b60015481600154011115156117f057600080fd5b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011115156118c057600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550806001600082825401925050819055507fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a816040518082815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119d357600080fd5b80600154101515156119e457600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515611a5357600080fd5b8060016000828254039250508190555080600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44816040518082815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615611c3d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1515611c1b57600080fd5b6102c65a03f11515611c2c57600080fd5b505050604051805190509050611c4a565b611c478383612a23565b90505b92915050565b60035481565b60066020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cd157600080fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e0e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515611e8557806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ee557600080fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611f3d57600080fd5b611f4682611237565b90506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806001600082825403925050819055507f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c68282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60406004810160003690501015151561202457600080fd5b600082141580156120b257506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b1515156120be57600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3505050565b60008060006060600481016000369050101515156121c657600080fd5b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054935061226e612710612260600354886129e890919063ffffffff16565b612aaa90919063ffffffff16565b92506004548311156122805760045492505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84101561233c576122bb8585612ac590919063ffffffff16565b600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61234f8386612ac590919063ffffffff16565b91506123a385600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ac590919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061243882600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008311156125e2576124f783600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806126c56127106126b7600354866129e890919063ffffffff16565b612aaa90919063ffffffff16565b91506004548211156126d75760045491505b6126ea8284612ac590919063ffffffff16565b905061273e83600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ac590919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506127d381600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600082111561297d5761289282600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505050565b60008060008414156129fd5760009150612a1c565b8284029050828482811515612a0e57fe5b04141515612a1857fe5b8091505b5092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000808284811515612ab857fe5b0490508091505092915050565b6000828211151515612ad357fe5b818303905092915050565b6000808284019050838110151515612af257fe5b80915050929150505600a165627a7a72305820f2f042dbcd03bc16b7c5e1f7fa97c1a2836f359992249c6650124fde3a51b7f00029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5AE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6BA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x78A JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x7B6 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x7D9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x868 JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x891 JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x8E2 JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x91B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x944 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x97D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AC PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x219 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xA54 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xB71 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B5 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xCD2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31B PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x390 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xEBB JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A5 PUSH2 0x109B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x447 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x470 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x499 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C2 PUSH2 0x10EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4FB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x594 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E5 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60E PUSH2 0x1346 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x623 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x678 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6CD PUSH2 0x1454 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x70D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6F2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x73A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x788 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x14F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x169C JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D7 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1781 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7FA PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1978 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x852 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87B PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x89C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C8 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x919 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x92E PUSH2 0x1D8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x94F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x97B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1DB3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1E88 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xAAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0xB89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCAF JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAEE92D33 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0xCBA JUMP JUMPDEST PUSH2 0xCB9 DUP4 DUP4 PUSH2 0x200C JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xD2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xEB2 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xE90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xF30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x108A JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8B477ADB CALLER DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1071 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1082 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1096 JUMP JUMPDEST PUSH2 0x1095 DUP4 DUP4 DUP4 PUSH2 0x21A9 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1335 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x133E DUP3 PUSH2 0x2650 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x14EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x150E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x168D JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E18980A CALLER DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1697 DUP3 DUP3 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x16F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 DUP3 LT ISZERO ISZERO PUSH2 0x1706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 LT ISZERO ISZERO PUSH2 0x1715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1734 PUSH1 0x9 SLOAD PUSH1 0xA EXP DUP3 PUSH2 0x29E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x17DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 PUSH1 0x1 SLOAD ADD GT ISZERO ISZERO PUSH2 0x17F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD GT ISZERO ISZERO PUSH2 0x18C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x19D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x19E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x1A53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C3D JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP5 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1C1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1C2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x1C47 DUP4 DUP4 PUSH2 0x2A23 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E85 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1EE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1F3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F46 DUP3 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x2024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x20B2 JUMPI POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x20BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x21C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP PUSH2 0x226E PUSH2 0x2710 PUSH2 0x2260 PUSH1 0x3 SLOAD DUP9 PUSH2 0x29E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x2280 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 LT ISZERO PUSH2 0x233C JUMPI PUSH2 0x22BB DUP6 DUP6 PUSH2 0x2AC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x234F DUP4 DUP7 PUSH2 0x2AC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x23A3 DUP6 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2438 DUP3 PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x25E2 JUMPI PUSH2 0x24F7 DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x26C5 PUSH2 0x2710 PUSH2 0x26B7 PUSH1 0x3 SLOAD DUP7 PUSH2 0x29E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x4 SLOAD DUP3 GT ISZERO PUSH2 0x26D7 JUMPI PUSH1 0x4 SLOAD SWAP2 POP JUMPDEST PUSH2 0x26EA DUP3 DUP5 PUSH2 0x2AC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x273E DUP4 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x27D3 DUP2 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x297D JUMPI PUSH2 0x2892 DUP3 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x29FD JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x2A1C JUMP JUMPDEST DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x2A0E JUMPI INVALID JUMPDEST DIV EQ ISZERO ISZERO PUSH2 0x2A18 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x2AB8 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x2AD3 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x2AF2 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 CALLCODE CREATE TIMESTAMP 0xdb 0xcd SUB 0xbc AND 0xb7 0xc5 0xe1 0xf7 STATICCALL SWAP8 0xc1 LOG2 DUP4 PUSH16 0x359992249C6650124FDE3A51B7F00029 ",
							"sourceMap": "178:4744:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;251:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2893:177:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;2165:296;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;363:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;554:142:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;3133:212:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1408:355;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;301:20:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;466:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;211:24:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;852:87:6;;;;;;;;;;;;;;278:122:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;425:61:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;266:26:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1845:238:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:85:6;;;;;;;;;;;;;;406::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;271:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;275::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1007:319:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4222:378;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3503:259;;;;;;;;;;;;;;;;;;;;;;;;;;3986:230;;;;;;;;;;;;;;;;;;;;;;;;;;2543:287;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;429:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;497:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:42:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;821:147:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:318:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;251:18:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2893:177::-;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;2978:4:2;2965:10;;:17;;;;;;;;;;;;;;;;;;3010:16;2992:15;;:34;;;;;;;;;;;;;;;;;;3036:27;3046:16;3036:27;;;;;;;;;;;;;;;;;;;;;;2893:177;:::o;2165:296::-;2236:6;646:1:0;639:4;:8;621;;:15;;:26;619:29;611:38;;;;;;;;2258:10:2;;;;;;;;;;;2254:201;;;2313:15;;;;;;;;;;;2291:54;;;2346:10;2358:8;2368:6;2291:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2284:91;;2254:201;2413:31;2427:8;2437:6;2413:13;:31::i;:::-;659:1:0;2165:296:2;;;:::o;363:22::-;;;;;;;;;;;;;:::o;554:142:1:-;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;650:4:1;623:13;:24;637:9;623:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;664:25;679:9;664:25;;;;;;;;;;;;;;;;;;;;;;554:142;:::o;3133:212:2:-;3181:4;3201:10;;;;;;;;;;;3197:142;;;3248:15;;;;;;;;;;;3234:42;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3227:51;;;;3197:142;3316:12;;3309:19;;3133:212;;:::o;1408:355::-;435:6:6;;;;;;;;;;;434:7;426:16;;;;;;;;1511:13:2;:20;1525:5;1511:20;;;;;;;;;;;;;;;;;;;;;;;;;1510:21;1502:30;;;;;;;;1546:10;;;;;;;;;;;1542:215;;;1601:15;;;;;;;;;;;1579:59;;;1639:10;1651:5;1658:3;1663:6;1579:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1572:98;;1542:215;1708:38;1727:5;1734:3;1739:6;1708:18;:38::i;:::-;448:1:6;1408:355:2;;;:::o;327:30::-;;;;;;;;;;;;;:::o;304:40:0:-;;;;;;;;;;;;;;;;;:::o;301:20:2:-;;;;:::o;466:26:0:-;;;;:::o;211:24:4:-;;;;:::o;852:87:6:-;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;587:6:6;;;;;;;;;;;579:15;;;;;;;;914:5;905:6;;:14;;;;;;;;;;;;;;;;;;925:9;;;;;;;;;;852:87::o;278:122:1:-;349:4;372:13;:21;386:6;372:21;;;;;;;;;;;;;;;;;;;;;;;;;365:28;;278:122;;;:::o;425:61:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;266:26:6:-;;;;;;;;;;;;;:::o;1845:238:2:-;1902:4;1922:10;;;;;;;;;;;1918:159;;;1977:15;;;;;;;;;;;1955:48;;;2004:3;1955:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1948:60;;;;1918:159;2046:20;2062:3;2046:15;:20::i;:::-;2039:27;;1845:238;;;;:::o;685:85:6:-;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;435:6:6;;;;;;;;;;;434:7;426:16;;;;;;;;748:4;739:6;;:13;;;;;;;;;;;;;;;;;;758:7;;;;;;;;;;685:85::o;406::1:-;453:7;479:5;;;;;;;;;;;472:12;;406:85;:::o;271:20:5:-;;;;;;;;;;;;;:::o;275::2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1007:319::-;435:6:6;;;;;;;;;;;434:7;426:16;;;;;;;;1091:13:2;:25;1105:10;1091:25;;;;;;;;;;;;;;;;;;;;;;;;;1090:26;1082:35;;;;;;;;1131:10;;;;;;;;;;;1127:193;;;1186:15;;;;;;;;;;;1164:55;;;1220:10;1232:3;1237:6;1164:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1157:87;;1127:193;1282:27;1297:3;1302:6;1282:14;:27::i;:::-;448:1:6;1007:319:2;;:::o;4222:378::-;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;4418:2:2;4401:14;:19;4393:28;;;;;;;;4451:2;4439:9;:14;4431:23;;;;;;;;4483:14;4465:15;:32;;;;4520:27;4538:8;;4534:2;:12;4520:9;:13;;:27;;;;:::i;:::-;4507:10;:40;;;;4558:35;4565:15;;4582:10;;4558:35;;;;;;;;;;;;;;;;;;;;;;;;4222:378;;:::o;3503:259::-;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;3590:12:2;;3581:6;3566:12;;:21;:36;3558:45;;;;;;;;3648:8;:15;3657:5;;;;;;;;;;;3648:15;;;;;;;;;;;;;;;;3639:6;3621:8;:15;3630:5;;;;;;;;;;;3621:15;;;;;;;;;;;;;;;;:24;:42;3613:51;;;;;;;;3694:6;3675:8;:15;3684:5;;;;;;;;;;;3675:15;;;;;;;;;;;;;;;;:25;;;;;;;;;;;3726:6;3710:12;;:22;;;;;;;;;;;3742:13;3748:6;3742:13;;;;;;;;;;;;;;;;;;3503:259;:::o;3986:230::-;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;4066:6:2;4050:12;;:22;;4042:31;;;;;;;;4110:6;4091:8;:15;4100:5;;;;;;;;;;;4091:15;;;;;;;;;;;;;;;;:25;;4083:34;;;;;;;;4144:6;4128:12;;:22;;;;;;;;;;;4179:6;4160:8;:15;4169:5;;;;;;;;;;;4160:15;;;;;;;;;;;;;;;;:25;;;;;;;;;;;4195:14;4202:6;4195:14;;;;;;;;;;;;;;;;;;3986:230;:::o;2543:287::-;2621:14;2651:10;;;;;;;;;;;2647:177;;;2698:15;;;;;;;;;;;2684:40;;;2725:6;2733:8;2684:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2677:65;;;;2647:177;2780:33;2796:6;2804:8;2780:15;:33::i;:::-;2773:40;;2543:287;;;;;:::o;429:31:0:-;;;;:::o;497:46:1:-;;;;;;;;;;;;;;;;;;;;;;:::o;702:157::-;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;807:5:1;777:13;:27;791:12;777:27;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;822:30;839:12;822:30;;;;;;;;;;;;;;;;;;;;;;702:157;:::o;493:42:8:-;525:10;493:42;:::o;821:147:5:-;629:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;917:1;897:22;;:8;:22;;;;893:69;;;943:8;935:5;;:16;;;;;;;;;;;;;;;;;;893:69;821:147;:::o;865:318:1:-;996:15;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;954:13:1;:31;968:16;954:31;;;;;;;;;;;;;;;;;;;;;;;;;946:40;;;;;;;;1014:27;1024:16;1014:9;:27::i;:::-;996:45;;1080:1;1051:8;:26;1060:16;1051:26;;;;;;;;;;;;;;;:30;;;;1107:10;1091:12;;:26;;;;;;;;;;;1127:49;1147:16;1165:10;1127:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:318;;:::o;1937:563:8:-;2008:6;646:1:0;639:4;:8;621;;:15;;:26;619:29;611:38;;;;;;;;2352:1:8;2342:6;:11;;2341:53;;;;;2392:1;2359:7;:19;2367:10;2359:19;;;;;;;;;;;;;;;:29;2379:8;2359:29;;;;;;;;;;;;;;;;:34;;2341:53;2339:56;2331:65;;;;;;;;2439:6;2407:7;:19;2415:10;2407:19;;;;;;;;;;;;;;;:29;2427:8;2407:29;;;;;;;;;;;;;;;:38;;;;2476:8;2455:38;;2464:10;2455:38;;;2486:6;2455:38;;;;;;;;;;;;;;;;;;1937:563;;;:::o;817:880::-;921:14;1130:8;1375:15;903:6;646:1:0;639:4;:8;621;;:15;;:26;619:29;611:38;;;;;;;;938:7:8;:14;946:5;938:14;;;;;;;;;;;;;;;:26;953:10;938:26;;;;;;;;;;;;;;;;921:43;;1141:40;1175:5;1142:27;1153:15;;1142:6;:10;;:27;;;;:::i;:::-;1141:33;;:40;;;;:::i;:::-;1130:51;;1201:10;;1195:3;:16;1191:63;;;1233:10;;1227:16;;1191:63;525:10;1267;:21;1263:103;;;1333:22;1348:6;1333:10;:14;;:22;;;;:::i;:::-;1304:7;:14;1312:5;1304:14;;;;;;;;;;;;;;;:26;1319:10;1304:26;;;;;;;;;;;;;;;:51;;;;1263:103;1393:15;1404:3;1393:6;:10;;:15;;;;:::i;:::-;1375:33;;1436:27;1456:6;1436:8;:15;1445:5;1436:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;1418:8;:15;1427:5;1418:15;;;;;;;;;;;;;;;:45;;;;1489:29;1507:10;1489:8;:13;1498:3;1489:13;;;;;;;;;;;;;;;;:17;;:29;;;;:::i;:::-;1473:8;:13;1482:3;1473:13;;;;;;;;;;;;;;;:45;;;;1538:1;1532:3;:7;1528:121;;;1573:24;1593:3;1573:8;:15;1582:5;;;;;;;;;;;1573:15;;;;;;;;;;;;;;;;:19;;:24;;;;:::i;:::-;1555:8;:15;1564:5;;;;;;;;;;;1555:15;;;;;;;;;;;;;;;:42;;;;1627:5;;;;;;;;;;;1611:27;;1620:5;1611:27;;;1634:3;1611:27;;;;;;;;;;;;;;;;;;1528:121;1674:3;1658:32;;1667:5;1658:32;;;1679:10;1658:32;;;;;;;;;;;;;;;;;;817:880;;;;;;;:::o;1580:114:0:-;1640:12;1671:8;:16;1680:6;1671:16;;;;;;;;;;;;;;;;1664:23;;1580:114;;;:::o;833:536::-;894:8;1027:15;905:40;939:5;906:27;917:15;;906:6;:10;;:27;;;;:::i;:::-;905:33;;:40;;;;:::i;:::-;894:51;;965:10;;959:3;:16;955:63;;;997:10;;991:16;;955:63;1045:15;1056:3;1045:6;:10;;:15;;;;:::i;:::-;1027:33;;1093:32;1118:6;1093:8;:20;1102:10;1093:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;1070:8;:20;1079:10;1070:20;;;;;;;;;;;;;;;:55;;;;1151:29;1169:10;1151:8;:13;1160:3;1151:13;;;;;;;;;;;;;;;;:17;;:29;;;;:::i;:::-;1135:8;:13;1144:3;1135:13;;;;;;;;;;;;;;;:45;;;;1200:1;1194:3;:7;1190:126;;;1235:24;1255:3;1235:8;:15;1244:5;;;;;;;;;;;1235:15;;;;;;;;;;;;;;;;:19;;:24;;;;:::i;:::-;1217:8;:15;1226:5;;;;;;;;;;;1217:15;;;;;;;;;;;;;;;:42;;;;1294:5;;;;;;;;;;;1273:32;;1282:10;1273:32;;;1301:3;1273:32;;;;;;;;;;;;;;;;;;1190:126;1346:3;1325:37;;1334:10;1325:37;;;1351:10;1325:37;;;;;;;;;;;;;;;;;;833:536;;;;:::o;171:201:7:-;229:7;302:9;257:1;252;:6;248:45;;;281:1;274:8;;;;248:45;318:1;314;:5;302:17;;345:1;340;336;:5;;;;;;;;:10;329:18;;;;;;364:1;357:8;;171:201;;;;;;:::o;2825:143:8:-;2903:14;2936:7;:15;2944:6;2936:15;;;;;;;;;;;;;;;:25;2952:8;2936:25;;;;;;;;;;;;;;;;2929:32;;2825:143;;;;:::o;378:283:7:-;436:7;533:9;549:1;545;:5;;;;;;;;533:17;;653:1;646:8;;378:283;;;;;:::o;667:120::-;725:7;756:1;751;:6;;744:14;;;;;;779:1;775;:5;768:12;;667:120;;;;:::o;793:143::-;851:7;870:9;886:1;882;:5;870:17;;909:1;904;:6;;897:14;;;;;;928:1;921:8;;793:143;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2209600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_UINT()": "821",
								"_totalSupply()": "625",
								"addBlackList(address)": "21964",
								"allowance(address,address)": "infinite",
								"allowed(address,address)": "902",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"balances(address)": "675",
								"basisPointsRate()": "955",
								"decimals()": "581",
								"deprecate(address)": "42125",
								"deprecated()": "547",
								"destroyBlackFunds(address)": "infinite",
								"getBlackListStatus(address)": "860",
								"getOwner()": "835",
								"isBlackListed(address)": "1130",
								"issue(uint256)": "44321",
								"maximumFee()": "603",
								"name()": "infinite",
								"owner()": "849",
								"pause()": "22181",
								"paused()": "811",
								"redeem(uint256)": "43611",
								"removeBlackList(address)": "22492",
								"setParams(uint256,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "21411",
								"unpause()": "22068",
								"upgradedAddress()": "585"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "MSTORE"
								},
								{
									"begin": 287,
									"end": 292,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "DUP1"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "EXP"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "DUP2"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "SLOAD"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "DUP2"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "MUL"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "NOT"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "AND"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "SWAP1"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "DUP4"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "ISZERO"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "ISZERO"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "MUL"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "OR"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "SWAP1"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "SSTORE"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "POP"
								},
								{
									"begin": 459,
									"end": 460,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "SSTORE"
								},
								{
									"begin": 491,
									"end": 492,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 466,
									"end": 492,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 466,
									"end": 492,
									"name": "SSTORE"
								},
								{
									"begin": 680,
									"end": 925,
									"name": "CALLVALUE"
								},
								{
									"begin": 680,
									"end": 925,
									"name": "ISZERO"
								},
								{
									"begin": 680,
									"end": 925,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 680,
									"end": 925,
									"name": "JUMPI"
								},
								{
									"begin": 680,
									"end": 925,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 680,
									"end": 925,
									"name": "DUP1"
								},
								{
									"begin": 680,
									"end": 925,
									"name": "REVERT"
								},
								{
									"begin": 680,
									"end": 925,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 680,
									"end": 925,
									"name": "JUMPDEST"
								},
								{
									"begin": 469,
									"end": 479,
									"name": "CALLER"
								},
								{
									"begin": 461,
									"end": 466,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 461,
									"end": 466,
									"name": "DUP1"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "EXP"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "DUP2"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SLOAD"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "DUP2"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "MUL"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "NOT"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "AND"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SWAP1"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "DUP4"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "AND"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "MUL"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "OR"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SWAP1"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SSTORE"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "POP"
								},
								{
									"begin": 742,
									"end": 763,
									"name": "PUSH",
									"value": "2386F26FC10000"
								},
								{
									"begin": 727,
									"end": 739,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 727,
									"end": 763,
									"name": "DUP2"
								},
								{
									"begin": 727,
									"end": 763,
									"name": "SWAP1"
								},
								{
									"begin": 727,
									"end": 763,
									"name": "SSTORE"
								},
								{
									"begin": 727,
									"end": 763,
									"name": "POP"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "DUP1"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "MLOAD"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "DUP2"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "ADD"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "MSTORE"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "DUP1"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "DUP2"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "MSTORE"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "ADD"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "PUSH",
									"value": "6454657468657220555344000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "DUP2"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "MSTORE"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "POP"
								},
								{
									"begin": 773,
									"end": 777,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "DUP1"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "MLOAD"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "ADD"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "SWAP3"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "SWAP2"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "JUMPDEST"
								},
								{
									"begin": 773,
									"end": 793,
									"name": "POP"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "DUP1"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "MLOAD"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "SWAP1"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "DUP2"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "ADD"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "MSTORE"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "DUP1"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "DUP2"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "MSTORE"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "ADD"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "PUSH",
									"value": "6455534454000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "DUP2"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "MSTORE"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "POP"
								},
								{
									"begin": 803,
									"end": 809,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "SWAP1"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "DUP1"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "MLOAD"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "SWAP1"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "ADD"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "SWAP1"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "SWAP3"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "SWAP2"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "SWAP1"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "JUMPDEST"
								},
								{
									"begin": 803,
									"end": 819,
									"name": "POP"
								},
								{
									"begin": 840,
									"end": 841,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 829,
									"end": 837,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 829,
									"end": 841,
									"name": "DUP2"
								},
								{
									"begin": 829,
									"end": 841,
									"name": "SWAP1"
								},
								{
									"begin": 829,
									"end": 841,
									"name": "SSTORE"
								},
								{
									"begin": 829,
									"end": 841,
									"name": "POP"
								},
								{
									"begin": 869,
									"end": 890,
									"name": "PUSH",
									"value": "2386F26FC10000"
								},
								{
									"begin": 851,
									"end": 859,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "DUP1"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "SWAP1"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "SLOAD"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "SWAP1"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "EXP"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "SWAP1"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "DIV"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 860,
									"end": 865,
									"name": "AND"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "AND"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "AND"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "DUP2"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "MSTORE"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "ADD"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "SWAP1"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "DUP2"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "MSTORE"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "ADD"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "KECCAK256"
								},
								{
									"begin": 851,
									"end": 890,
									"name": "DUP2"
								},
								{
									"begin": 851,
									"end": 890,
									"name": "SWAP1"
								},
								{
									"begin": 851,
									"end": 890,
									"name": "SSTORE"
								},
								{
									"begin": 851,
									"end": 890,
									"name": "POP"
								},
								{
									"begin": 913,
									"end": 918,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 900,
									"end": 910,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 900,
									"end": 910,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "EXP"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "DUP2"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "SLOAD"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "DUP2"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "MUL"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "NOT"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "AND"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "SWAP1"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "DUP4"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "ISZERO"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "ISZERO"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "MUL"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "OR"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "SWAP1"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "SSTORE"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "POP"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMP"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP3"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SLOAD"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP2"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "AND"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "ISZERO"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "MUL"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SUB"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "AND"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DIV"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "MSTORE"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "KECCAK256"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DIV"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP2"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP3"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP3"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "LT"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMPI"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "MLOAD"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "NOT"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "AND"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP4"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "OR"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP6"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SSTORE"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMP"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP3"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP6"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SSTORE"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP3"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "ISZERO"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMPI"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP2"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP3"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP3"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP2"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "GT"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "ISZERO"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMPI"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP3"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "MLOAD"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP3"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SSTORE"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP2"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP2"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMP"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "POP"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "POP"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP2"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "POP"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP2"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP3"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "GT"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "ISZERO"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMPI"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP2"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SSTORE"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "POP"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMP"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "POP"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMP"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "DUP1"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "CODECOPY"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4922,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820f2f042dbcd03bc16b7c5e1f7fa97c1a2836f359992249c6650124fde3a51b7f00029",
									".code": [
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "MSTORE"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "ISZERO"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "SWAP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DIV"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "AND"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "753C30C"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "E136B19"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "ECB93C0"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "26976E3F"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "27E235E3"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "35390714"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "3EAAF86B"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "3F4BA83A"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "59BF1ABE"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "5C658165"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "5C975ABB"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "8456CB59"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "C0324C77"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "CC872B66"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "DB006A75"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "DD644F72"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "E47D6060"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "E4997DC5"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "E5B5019A"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "F3BDC228"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "EQ"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "JUMPDEST"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 4922,
											"name": "REVERT"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "CALLVALUE"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ISZERO"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPI"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "REVERT"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMP"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MLOAD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP3"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SUB"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP3"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MSTORE"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP4"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MLOAD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MSTORE"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MLOAD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP4"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 29,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 70,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 48,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ISZERO"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPI"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP4"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "EXP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "NOT"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPDEST"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "RETURN"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "JUMPDEST"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "CALLVALUE"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "ISZERO"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "JUMPI"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "DUP1"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "REVERT"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "JUMPDEST"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "DUP1"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "DUP1"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "AND"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "SWAP1"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "ADD"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "SWAP1"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "SWAP2"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "SWAP1"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "POP"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "POP"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "JUMP"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "JUMPDEST"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "STOP"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "JUMPDEST"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "CALLVALUE"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "ISZERO"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "JUMPI"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "DUP1"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "REVERT"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "JUMPDEST"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "DUP1"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "DUP1"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "AND"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "SWAP1"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "ADD"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "SWAP1"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "SWAP2"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "SWAP1"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "DUP1"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "SWAP1"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "ADD"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "SWAP1"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "SWAP2"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "SWAP1"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "POP"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "POP"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "JUMP"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "JUMPDEST"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "STOP"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMPDEST"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "CALLVALUE"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ISZERO"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMPI"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP1"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "REVERT"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMPDEST"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMP"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMPDEST"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "MLOAD"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP1"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP3"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ISZERO"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ISZERO"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ISZERO"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ISZERO"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP2"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "MSTORE"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "ADD"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SWAP2"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "POP"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "POP"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "MLOAD"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP1"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SWAP2"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SUB"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "RETURN"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "JUMPDEST"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "CALLVALUE"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "ISZERO"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "JUMPI"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "DUP1"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "REVERT"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "JUMPDEST"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "DUP1"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "DUP1"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "AND"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "SWAP1"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "ADD"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "SWAP1"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "SWAP2"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "SWAP1"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "POP"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "POP"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "JUMP"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "JUMPDEST"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "STOP"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "JUMPDEST"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "CALLVALUE"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "ISZERO"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "JUMPI"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "DUP1"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "REVERT"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "JUMPDEST"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "JUMP"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "JUMPDEST"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "MLOAD"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "DUP1"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "DUP3"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "DUP2"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "MSTORE"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "ADD"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "SWAP2"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "POP"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "POP"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "MLOAD"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "DUP1"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "SWAP2"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "SUB"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "SWAP1"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "RETURN"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "JUMPDEST"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "CALLVALUE"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "ISZERO"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "JUMPI"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "DUP1"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "REVERT"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "JUMPDEST"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "DUP1"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "DUP1"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "AND"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "ADD"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "SWAP2"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "DUP1"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "AND"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "ADD"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "SWAP2"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "DUP1"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "ADD"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "SWAP2"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "POP"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "POP"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "JUMP"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "JUMPDEST"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "STOP"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "CALLVALUE"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "ISZERO"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPI"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP1"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "REVERT"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMP"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "MLOAD"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP1"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP3"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "AND"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "AND"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "MSTORE"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "ADD"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP2"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "POP"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "POP"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "MLOAD"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP1"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP2"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SUB"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP1"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "RETURN"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "JUMPDEST"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "CALLVALUE"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "ISZERO"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "JUMPI"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "REVERT"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "JUMPDEST"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "AND"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "ADD"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SWAP2"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "JUMP"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "JUMPDEST"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "MLOAD"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "DUP3"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "DUP2"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "MSTORE"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "ADD"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SWAP2"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "MLOAD"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SWAP2"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SUB"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "RETURN"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "CALLVALUE"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "ISZERO"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "REVERT"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "JUMP"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "MLOAD"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "DUP3"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "DUP2"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "MSTORE"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "ADD"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "SWAP2"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "POP"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "POP"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "MLOAD"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "SWAP2"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "SUB"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "SWAP1"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "RETURN"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMPDEST"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "CALLVALUE"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "ISZERO"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMPI"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "DUP1"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "REVERT"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMPDEST"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMP"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMPDEST"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "MLOAD"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "DUP1"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "DUP3"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "DUP2"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "MSTORE"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "ADD"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "SWAP2"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "POP"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "POP"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "MLOAD"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "DUP1"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "SWAP2"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "SUB"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "SWAP1"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "RETURN"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "CALLVALUE"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "ISZERO"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "JUMPI"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "REVERT"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "JUMP"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "DUP3"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "SWAP2"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "SWAP2"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "RETURN"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "CALLVALUE"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "ISZERO"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPI"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "DUP1"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "REVERT"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMP"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "STOP"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "CALLVALUE"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "ISZERO"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "JUMPI"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "DUP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "REVERT"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "DUP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "DUP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "AND"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "ADD"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SWAP2"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "POP"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "POP"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "JUMP"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "MLOAD"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "DUP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "DUP3"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "ISZERO"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "ISZERO"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "ISZERO"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "ISZERO"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "DUP2"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "MSTORE"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "ADD"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SWAP2"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "POP"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "POP"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "MLOAD"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "DUP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SWAP2"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SUB"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "RETURN"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "JUMPDEST"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "CALLVALUE"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "ISZERO"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "JUMPI"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "REVERT"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "JUMPDEST"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "AND"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "ADD"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP2"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "AND"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "ADD"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP2"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "JUMP"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "JUMPDEST"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "MLOAD"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP3"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP2"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "MSTORE"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "ADD"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP2"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "MLOAD"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP2"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SUB"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "RETURN"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "CALLVALUE"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPI"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "REVERT"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMP"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "RETURN"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "JUMPDEST"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "CALLVALUE"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "ISZERO"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "JUMPI"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "DUP1"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "REVERT"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "JUMPDEST"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "DUP1"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "DUP1"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "AND"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "SWAP1"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "ADD"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "SWAP1"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "SWAP2"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "SWAP1"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "POP"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "POP"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "JUMP"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "JUMPDEST"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "MLOAD"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "DUP1"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "DUP3"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "DUP2"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "MSTORE"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "ADD"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "SWAP2"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "POP"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "POP"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "MLOAD"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "DUP1"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "SWAP2"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "SUB"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "SWAP1"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "RETURN"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "CALLVALUE"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "ISZERO"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPI"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "DUP1"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "REVERT"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMP"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "STOP"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "JUMPDEST"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "CALLVALUE"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "ISZERO"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "JUMPI"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "DUP1"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "REVERT"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "JUMPDEST"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "JUMP"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "JUMPDEST"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "MLOAD"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "DUP1"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "DUP3"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "AND"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "AND"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "DUP2"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "MSTORE"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "ADD"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "SWAP2"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "POP"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "POP"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "MLOAD"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "DUP1"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "SWAP2"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "SUB"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "SWAP1"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "RETURN"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "CALLVALUE"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "ISZERO"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPI"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "REVERT"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP3"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MSTORE"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "ADD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SUB"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "RETURN"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "CALLVALUE"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ISZERO"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPI"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "REVERT"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMP"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MLOAD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SUB"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MSTORE"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP4"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MLOAD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MSTORE"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MLOAD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP4"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 29,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 70,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 48,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ISZERO"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPI"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP4"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "EXP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "NOT"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPDEST"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "RETURN"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "JUMPDEST"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "CALLVALUE"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "ISZERO"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "JUMPI"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "DUP1"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "REVERT"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "JUMPDEST"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "DUP1"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "DUP1"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "AND"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "SWAP1"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "ADD"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "SWAP1"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "SWAP2"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "SWAP1"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "DUP1"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "SWAP1"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "ADD"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "SWAP1"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "SWAP2"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "SWAP1"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "POP"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "POP"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "JUMP"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "JUMPDEST"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "STOP"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "JUMPDEST"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "CALLVALUE"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "ISZERO"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "JUMPI"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "DUP1"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "REVERT"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "JUMPDEST"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "DUP1"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "DUP1"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "SWAP1"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "ADD"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "SWAP1"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "SWAP2"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "SWAP1"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "DUP1"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "SWAP1"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "ADD"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "SWAP1"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "SWAP2"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "SWAP1"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "POP"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "POP"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "JUMP"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "JUMPDEST"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "STOP"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "JUMPDEST"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "CALLVALUE"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "ISZERO"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "JUMPI"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "DUP1"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "REVERT"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "JUMPDEST"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "DUP1"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "DUP1"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "SWAP1"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "ADD"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "SWAP1"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "SWAP2"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "SWAP1"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "POP"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "POP"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "JUMP"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "JUMPDEST"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "STOP"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "JUMPDEST"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "CALLVALUE"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "ISZERO"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "JUMPI"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "DUP1"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "REVERT"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "JUMPDEST"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "DUP1"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "DUP1"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "SWAP1"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "ADD"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "SWAP1"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "SWAP2"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "SWAP1"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "POP"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "POP"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "JUMP"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "JUMPDEST"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "STOP"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "JUMPDEST"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "CALLVALUE"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "ISZERO"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "JUMPI"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "DUP1"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "REVERT"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "JUMPDEST"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "DUP1"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "DUP1"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "AND"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "SWAP1"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "ADD"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "SWAP1"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "SWAP2"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "SWAP1"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "DUP1"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "AND"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "SWAP1"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "ADD"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "SWAP1"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "SWAP2"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "SWAP1"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "POP"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "POP"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "JUMP"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "JUMPDEST"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "MLOAD"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "DUP1"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "DUP3"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "DUP2"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "MSTORE"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "ADD"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "SWAP2"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "POP"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "POP"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "MLOAD"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "DUP1"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "SWAP2"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "SUB"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "SWAP1"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "RETURN"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "CALLVALUE"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "ISZERO"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "JUMPI"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "DUP1"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "REVERT"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "JUMP"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "MLOAD"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "DUP1"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "DUP3"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "DUP2"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "MSTORE"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "ADD"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "SWAP2"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "POP"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "POP"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "MLOAD"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "DUP1"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "SWAP2"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "SUB"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "SWAP1"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "RETURN"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "JUMPDEST"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "CALLVALUE"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "ISZERO"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "JUMPI"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DUP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "REVERT"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "JUMPDEST"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DUP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DUP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "AND"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "ADD"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP2"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "JUMP"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "JUMPDEST"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "MLOAD"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DUP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DUP3"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "ISZERO"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "ISZERO"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "ISZERO"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "ISZERO"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DUP2"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "MSTORE"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "ADD"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP2"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "MLOAD"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DUP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP2"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SUB"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "RETURN"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "JUMPDEST"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "CALLVALUE"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "ISZERO"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "JUMPI"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "DUP1"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "REVERT"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "JUMPDEST"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "DUP1"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "DUP1"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "AND"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "SWAP1"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "ADD"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "SWAP1"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "SWAP2"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "SWAP1"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "POP"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "POP"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "JUMP"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "JUMPDEST"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "STOP"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "JUMPDEST"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "CALLVALUE"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "ISZERO"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "JUMPI"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "DUP1"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "REVERT"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "JUMPDEST"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "JUMP"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "JUMPDEST"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "MLOAD"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "DUP1"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "DUP3"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "DUP2"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "MSTORE"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "ADD"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "SWAP2"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "POP"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "POP"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "MLOAD"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "DUP1"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "SWAP2"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "SUB"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "SWAP1"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "RETURN"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "CALLVALUE"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "ISZERO"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPI"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "REVERT"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "AND"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "ADD"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP2"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "STOP"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "JUMPDEST"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "CALLVALUE"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "ISZERO"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "JUMPI"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "DUP1"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "REVERT"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "JUMPDEST"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "DUP1"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "DUP1"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "AND"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "SWAP1"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "ADD"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "SWAP1"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "SWAP2"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "SWAP1"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "JUMP"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "JUMPDEST"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "STOP"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SLOAD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "AND"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ISZERO"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MUL"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SUB"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "AND"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DIV"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DIV"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MUL"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MLOAD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MSTORE"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP3"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MSTORE"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP3"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SLOAD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "AND"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ISZERO"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MUL"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SUB"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "AND"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DIV"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ISZERO"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPI"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "LT"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPI"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP4"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SLOAD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DIV"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MUL"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP4"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MSTORE"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMP"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP3"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MSTORE"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "KECCAK256"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SLOAD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "MSTORE"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP4"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "GT"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPI"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP3"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP1"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SUB"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "AND"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP3"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "ADD"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMPDEST"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "DUP2"
										},
										{
											"begin": 251,
											"end": 269,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 2978,
											"end": 2982,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2965,
											"end": 2975,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2965,
											"end": 2975,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "EXP"
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "DUP2"
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "SLOAD"
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "DUP2"
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "MUL"
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "NOT"
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "AND"
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "SWAP1"
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "DUP4"
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "ISZERO"
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "ISZERO"
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "MUL"
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "OR"
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "SWAP1"
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "SSTORE"
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "POP"
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "DUP1"
										},
										{
											"begin": 2992,
											"end": 3007,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2992,
											"end": 3007,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 3026,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2992,
											"end": 3026,
											"name": "EXP"
										},
										{
											"begin": 2992,
											"end": 3026,
											"name": "DUP2"
										},
										{
											"begin": 2992,
											"end": 3026,
											"name": "SLOAD"
										},
										{
											"begin": 2992,
											"end": 3026,
											"name": "DUP2"
										},
										{
											"begin": 2992,
											"end": 3026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2992,
											"end": 3026,
											"name": "MUL"
										},
										{
											"begin": 2992,
											"end": 3026,
											"name": "NOT"
										},
										{
											"begin": 2992,
											"end": 3026,
											"name": "AND"
										},
										{
											"begin": 2992,
											"end": 3026,
											"name": "SWAP1"
										},
										{
											"begin": 2992,
											"end": 3026,
											"name": "DUP4"
										},
										{
											"begin": 2992,
											"end": 3026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2992,
											"end": 3026,
											"name": "AND"
										},
										{
											"begin": 2992,
											"end": 3026,
											"name": "MUL"
										},
										{
											"begin": 2992,
											"end": 3026,
											"name": "OR"
										},
										{
											"begin": 2992,
											"end": 3026,
											"name": "SWAP1"
										},
										{
											"begin": 2992,
											"end": 3026,
											"name": "SSTORE"
										},
										{
											"begin": 2992,
											"end": 3026,
											"name": "POP"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "PUSH",
											"value": "CC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E"
										},
										{
											"begin": 3046,
											"end": 3062,
											"name": "DUP2"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "MLOAD"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "DUP1"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "DUP3"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "AND"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "AND"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "DUP2"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "MSTORE"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "ADD"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "SWAP2"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "POP"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "POP"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "MLOAD"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "DUP1"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "SWAP2"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "SUB"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "SWAP1"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "LOG1"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "POP"
										},
										{
											"begin": 2893,
											"end": 3070,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "JUMPDEST"
										},
										{
											"begin": 2236,
											"end": 2242,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 646,
											"end": 647,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 639,
											"end": 643,
											"name": "DUP2"
										},
										{
											"begin": 639,
											"end": 647,
											"name": "ADD"
										},
										{
											"begin": 621,
											"end": 629,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 621,
											"end": 629,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 621,
											"end": 636,
											"name": "SWAP1"
										},
										{
											"begin": 621,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 621,
											"end": 647,
											"name": "LT"
										},
										{
											"begin": 619,
											"end": 648,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "JUMPI"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "DUP1"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "REVERT"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "JUMPDEST"
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "SWAP1"
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "SLOAD"
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "SWAP1"
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "EXP"
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "SWAP1"
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "DIV"
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "AND"
										},
										{
											"begin": 2254,
											"end": 2455,
											"name": "ISZERO"
										},
										{
											"begin": 2254,
											"end": 2455,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 2254,
											"end": 2455,
											"name": "JUMPI"
										},
										{
											"begin": 2313,
											"end": 2328,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2313,
											"end": 2328,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2328,
											"name": "SWAP1"
										},
										{
											"begin": 2313,
											"end": 2328,
											"name": "SLOAD"
										},
										{
											"begin": 2313,
											"end": 2328,
											"name": "SWAP1"
										},
										{
											"begin": 2313,
											"end": 2328,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2313,
											"end": 2328,
											"name": "EXP"
										},
										{
											"begin": 2313,
											"end": 2328,
											"name": "SWAP1"
										},
										{
											"begin": 2313,
											"end": 2328,
											"name": "DIV"
										},
										{
											"begin": 2313,
											"end": 2328,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2313,
											"end": 2328,
											"name": "AND"
										},
										{
											"begin": 2291,
											"end": 2345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2291,
											"end": 2345,
											"name": "AND"
										},
										{
											"begin": 2291,
											"end": 2345,
											"name": "PUSH",
											"value": "AEE92D33"
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "CALLER"
										},
										{
											"begin": 2358,
											"end": 2366,
											"name": "DUP6"
										},
										{
											"begin": 2368,
											"end": 2374,
											"name": "DUP6"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "MLOAD"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "DUP5"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "AND"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "MUL"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "DUP2"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "MSTORE"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "ADD"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "DUP1"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "DUP5"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "AND"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "AND"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "DUP2"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "MSTORE"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "ADD"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "DUP4"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "AND"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "AND"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "DUP2"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "MSTORE"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "ADD"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "DUP3"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "DUP2"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "MSTORE"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "ADD"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "SWAP4"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "POP"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "POP"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "POP"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "POP"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "MLOAD"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "DUP1"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "DUP4"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "SUB"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "DUP2"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "DUP8"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "DUP1"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "ISZERO"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "ISZERO"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "JUMPI"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "DUP1"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "REVERT"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "JUMPDEST"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "GAS"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "SUB"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "CALL"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "ISZERO"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "ISZERO"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "JUMPI"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "DUP1"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "REVERT"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "JUMPDEST"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "POP"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "POP"
										},
										{
											"begin": 2291,
											"end": 2375,
											"name": "POP"
										},
										{
											"begin": 2284,
											"end": 2375,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 2284,
											"end": 2375,
											"name": "JUMP"
										},
										{
											"begin": 2254,
											"end": 2455,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 2254,
											"end": 2455,
											"name": "JUMPDEST"
										},
										{
											"begin": 2413,
											"end": 2444,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 2427,
											"end": 2435,
											"name": "DUP4"
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "DUP4"
										},
										{
											"begin": 2413,
											"end": 2426,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 2413,
											"end": 2444,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2413,
											"end": 2444,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 2413,
											"end": 2444,
											"name": "JUMPDEST"
										},
										{
											"begin": 659,
											"end": 660,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 659,
											"end": 660,
											"name": "JUMPDEST"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "POP"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "POP"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "POP"
										},
										{
											"begin": 2165,
											"end": 2461,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMPDEST"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SLOAD"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "EXP"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DIV"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "AND"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "DUP2"
										},
										{
											"begin": 363,
											"end": 385,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 650,
											"end": 654,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 623,
											"end": 636,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "DUP4"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "AND"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "AND"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "DUP2"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "MSTORE"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "ADD"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "SWAP1"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "DUP2"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "MSTORE"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "ADD"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "KECCAK256"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "EXP"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "DUP2"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "SLOAD"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "DUP2"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "MUL"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "NOT"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "AND"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "SWAP1"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "DUP4"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "ISZERO"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "ISZERO"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "MUL"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "OR"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "SWAP1"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "SSTORE"
										},
										{
											"begin": 623,
											"end": 654,
											"name": "POP"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "PUSH",
											"value": "42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC"
										},
										{
											"begin": 679,
											"end": 688,
											"name": "DUP2"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "MLOAD"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "DUP1"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "DUP3"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "AND"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "AND"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "DUP2"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "MSTORE"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "ADD"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "SWAP2"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "POP"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "POP"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "MLOAD"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "DUP1"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "SWAP2"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "SUB"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "SWAP1"
										},
										{
											"begin": 664,
											"end": 689,
											"name": "LOG1"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "POP"
										},
										{
											"begin": 554,
											"end": 696,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "JUMPDEST"
										},
										{
											"begin": 3181,
											"end": 3185,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3211,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3201,
											"end": 3211,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 3201,
											"end": 3211,
											"name": "SWAP1"
										},
										{
											"begin": 3201,
											"end": 3211,
											"name": "SLOAD"
										},
										{
											"begin": 3201,
											"end": 3211,
											"name": "SWAP1"
										},
										{
											"begin": 3201,
											"end": 3211,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3201,
											"end": 3211,
											"name": "EXP"
										},
										{
											"begin": 3201,
											"end": 3211,
											"name": "SWAP1"
										},
										{
											"begin": 3201,
											"end": 3211,
											"name": "DIV"
										},
										{
											"begin": 3201,
											"end": 3211,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3201,
											"end": 3211,
											"name": "AND"
										},
										{
											"begin": 3197,
											"end": 3339,
											"name": "ISZERO"
										},
										{
											"begin": 3197,
											"end": 3339,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 3197,
											"end": 3339,
											"name": "JUMPI"
										},
										{
											"begin": 3248,
											"end": 3263,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3248,
											"end": 3263,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3263,
											"name": "SWAP1"
										},
										{
											"begin": 3248,
											"end": 3263,
											"name": "SLOAD"
										},
										{
											"begin": 3248,
											"end": 3263,
											"name": "SWAP1"
										},
										{
											"begin": 3248,
											"end": 3263,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3248,
											"end": 3263,
											"name": "EXP"
										},
										{
											"begin": 3248,
											"end": 3263,
											"name": "SWAP1"
										},
										{
											"begin": 3248,
											"end": 3263,
											"name": "DIV"
										},
										{
											"begin": 3248,
											"end": 3263,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3248,
											"end": 3263,
											"name": "AND"
										},
										{
											"begin": 3234,
											"end": 3276,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3234,
											"end": 3276,
											"name": "AND"
										},
										{
											"begin": 3234,
											"end": 3276,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "MLOAD"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "ADD"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "MSTORE"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "MLOAD"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "DUP2"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "AND"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "MUL"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "DUP2"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "MSTORE"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "ADD"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "MLOAD"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "DUP1"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "DUP4"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "SUB"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "DUP2"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "DUP8"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "DUP1"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "ISZERO"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "ISZERO"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "JUMPI"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "DUP1"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "REVERT"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "JUMPDEST"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "GAS"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "SUB"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "CALL"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "ISZERO"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "ISZERO"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "JUMPI"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "DUP1"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "REVERT"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "JUMPDEST"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "POP"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "MLOAD"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "DUP1"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "MLOAD"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "SWAP1"
										},
										{
											"begin": 3234,
											"end": 3278,
											"name": "POP"
										},
										{
											"begin": 3227,
											"end": 3278,
											"name": "SWAP1"
										},
										{
											"begin": 3227,
											"end": 3278,
											"name": "POP"
										},
										{
											"begin": 3227,
											"end": 3278,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 3227,
											"end": 3278,
											"name": "JUMP"
										},
										{
											"begin": 3197,
											"end": 3339,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 3197,
											"end": 3339,
											"name": "JUMPDEST"
										},
										{
											"begin": 3316,
											"end": 3328,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3316,
											"end": 3328,
											"name": "SLOAD"
										},
										{
											"begin": 3309,
											"end": 3328,
											"name": "SWAP1"
										},
										{
											"begin": 3309,
											"end": 3328,
											"name": "POP"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "JUMPDEST"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "SWAP1"
										},
										{
											"begin": 3133,
											"end": 3345,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "JUMPDEST"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SLOAD"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "EXP"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "DIV"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "AND"
										},
										{
											"begin": 434,
											"end": 441,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "JUMPI"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP1"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "REVERT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "JUMPDEST"
										},
										{
											"begin": 1511,
											"end": 1524,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1530,
											"name": "DUP5"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "AND"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "AND"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "DUP2"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "MSTORE"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "ADD"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "SWAP1"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "DUP2"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "MSTORE"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "ADD"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "KECCAK256"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "SWAP1"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "SLOAD"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "SWAP1"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "EXP"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "SWAP1"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "DIV"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "AND"
										},
										{
											"begin": 1510,
											"end": 1531,
											"name": "ISZERO"
										},
										{
											"begin": 1502,
											"end": 1532,
											"name": "ISZERO"
										},
										{
											"begin": 1502,
											"end": 1532,
											"name": "ISZERO"
										},
										{
											"begin": 1502,
											"end": 1532,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 1502,
											"end": 1532,
											"name": "JUMPI"
										},
										{
											"begin": 1502,
											"end": 1532,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1502,
											"end": 1532,
											"name": "DUP1"
										},
										{
											"begin": 1502,
											"end": 1532,
											"name": "REVERT"
										},
										{
											"begin": 1502,
											"end": 1532,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 1502,
											"end": 1532,
											"name": "JUMPDEST"
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "SWAP1"
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "SLOAD"
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "SWAP1"
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "EXP"
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "SWAP1"
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "DIV"
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "AND"
										},
										{
											"begin": 1542,
											"end": 1757,
											"name": "ISZERO"
										},
										{
											"begin": 1542,
											"end": 1757,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 1542,
											"end": 1757,
											"name": "JUMPI"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "SWAP1"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "SLOAD"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "SWAP1"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "EXP"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "SWAP1"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "DIV"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1601,
											"end": 1616,
											"name": "AND"
										},
										{
											"begin": 1579,
											"end": 1638,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1638,
											"name": "AND"
										},
										{
											"begin": 1579,
											"end": 1638,
											"name": "PUSH",
											"value": "8B477ADB"
										},
										{
											"begin": 1639,
											"end": 1649,
											"name": "CALLER"
										},
										{
											"begin": 1651,
											"end": 1656,
											"name": "DUP6"
										},
										{
											"begin": 1658,
											"end": 1661,
											"name": "DUP6"
										},
										{
											"begin": 1663,
											"end": 1669,
											"name": "DUP6"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "MLOAD"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "DUP6"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "AND"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "MUL"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "DUP2"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "MSTORE"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "ADD"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "DUP1"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "DUP6"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "AND"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "AND"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "DUP2"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "MSTORE"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "ADD"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "DUP5"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "AND"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "AND"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "DUP2"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "MSTORE"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "ADD"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "DUP4"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "AND"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "AND"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "DUP2"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "MSTORE"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "ADD"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "DUP3"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "DUP2"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "MSTORE"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "ADD"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "SWAP5"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "MLOAD"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "DUP1"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "DUP4"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "SUB"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "DUP2"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "DUP8"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "DUP1"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "ISZERO"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "ISZERO"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "JUMPI"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "DUP1"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "REVERT"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "JUMPDEST"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "GAS"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "SUB"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "CALL"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "ISZERO"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "ISZERO"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "JUMPI"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "DUP1"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "REVERT"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "JUMPDEST"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1670,
											"name": "POP"
										},
										{
											"begin": 1572,
											"end": 1670,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 1572,
											"end": 1670,
											"name": "JUMP"
										},
										{
											"begin": 1542,
											"end": 1757,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 1542,
											"end": 1757,
											"name": "JUMPDEST"
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 1727,
											"end": 1732,
											"name": "DUP4"
										},
										{
											"begin": 1734,
											"end": 1737,
											"name": "DUP4"
										},
										{
											"begin": 1739,
											"end": 1745,
											"name": "DUP4"
										},
										{
											"begin": 1708,
											"end": 1726,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "JUMPDEST"
										},
										{
											"begin": 448,
											"end": 449,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 448,
											"end": 449,
											"name": "JUMPDEST"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "POP"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "POP"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "POP"
										},
										{
											"begin": 1408,
											"end": 1763,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPDEST"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP1"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SLOAD"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP1"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "EXP"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP1"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DIV"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "AND"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP2"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "JUMPDEST"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "MSTORE"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "MSTORE"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "KECCAK256"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SWAP2"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "SLOAD"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "DUP2"
										},
										{
											"begin": 304,
											"end": 344,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "SLOAD"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "DUP2"
										},
										{
											"begin": 301,
											"end": 321,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMPDEST"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "SLOAD"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "DUP2"
										},
										{
											"begin": 466,
											"end": 492,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "SLOAD"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 211,
											"end": 235,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "SLOAD"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "EXP"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "DIV"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "AND"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "ISZERO"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "ISZERO"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "JUMPI"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "REVERT"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "JUMPDEST"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 905,
											"end": 911,
											"name": "DUP1"
										},
										{
											"begin": 905,
											"end": 911,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "EXP"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "DUP2"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "SLOAD"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "DUP2"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "MUL"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "NOT"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "AND"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "DUP4"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "ISZERO"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "ISZERO"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "MUL"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "OR"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "SSTORE"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "POP"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "PUSH",
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "MLOAD"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "MLOAD"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "DUP1"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "SWAP2"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "SUB"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "SWAP1"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "LOG1"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 349,
											"end": 353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 372,
											"end": 385,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 386,
											"end": 392,
											"name": "DUP4"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "AND"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "AND"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "DUP2"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "MSTORE"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "ADD"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "SWAP1"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "DUP2"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "MSTORE"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "ADD"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "KECCAK256"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "SWAP1"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "SLOAD"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "SWAP1"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "EXP"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "SWAP1"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "DIV"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "AND"
										},
										{
											"begin": 365,
											"end": 393,
											"name": "SWAP1"
										},
										{
											"begin": 365,
											"end": 393,
											"name": "POP"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SWAP2"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "POP"
										},
										{
											"begin": 278,
											"end": 400,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "JUMPDEST"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "MSTORE"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP2"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "MSTORE"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "KECCAK256"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "MSTORE"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "MSTORE"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "KECCAK256"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP2"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SWAP2"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "SLOAD"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "DUP2"
										},
										{
											"begin": 425,
											"end": 486,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SLOAD"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "EXP"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DIV"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "AND"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "JUMPDEST"
										},
										{
											"begin": 1902,
											"end": 1906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1932,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1922,
											"end": 1932,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1922,
											"end": 1932,
											"name": "SWAP1"
										},
										{
											"begin": 1922,
											"end": 1932,
											"name": "SLOAD"
										},
										{
											"begin": 1922,
											"end": 1932,
											"name": "SWAP1"
										},
										{
											"begin": 1922,
											"end": 1932,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1922,
											"end": 1932,
											"name": "EXP"
										},
										{
											"begin": 1922,
											"end": 1932,
											"name": "SWAP1"
										},
										{
											"begin": 1922,
											"end": 1932,
											"name": "DIV"
										},
										{
											"begin": 1922,
											"end": 1932,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1922,
											"end": 1932,
											"name": "AND"
										},
										{
											"begin": 1918,
											"end": 2077,
											"name": "ISZERO"
										},
										{
											"begin": 1918,
											"end": 2077,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 1918,
											"end": 2077,
											"name": "JUMPI"
										},
										{
											"begin": 1977,
											"end": 1992,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1977,
											"end": 1992,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 1992,
											"name": "SWAP1"
										},
										{
											"begin": 1977,
											"end": 1992,
											"name": "SLOAD"
										},
										{
											"begin": 1977,
											"end": 1992,
											"name": "SWAP1"
										},
										{
											"begin": 1977,
											"end": 1992,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1977,
											"end": 1992,
											"name": "EXP"
										},
										{
											"begin": 1977,
											"end": 1992,
											"name": "SWAP1"
										},
										{
											"begin": 1977,
											"end": 1992,
											"name": "DIV"
										},
										{
											"begin": 1977,
											"end": 1992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1977,
											"end": 1992,
											"name": "AND"
										},
										{
											"begin": 1955,
											"end": 2003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1955,
											"end": 2003,
											"name": "AND"
										},
										{
											"begin": 1955,
											"end": 2003,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 2004,
											"end": 2007,
											"name": "DUP4"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "MLOAD"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "ADD"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "MSTORE"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "MLOAD"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "DUP3"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "AND"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "MUL"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "DUP2"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "MSTORE"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "ADD"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "DUP1"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "DUP3"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "AND"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "AND"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "DUP2"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "MSTORE"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "ADD"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "SWAP2"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "POP"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "POP"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "MLOAD"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "DUP1"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "DUP4"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "SUB"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "DUP2"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "DUP8"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "DUP1"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "ISZERO"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "ISZERO"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "JUMPI"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "DUP1"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "REVERT"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "JUMPDEST"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "GAS"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "SUB"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "CALL"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "ISZERO"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "ISZERO"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "JUMPI"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "DUP1"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "REVERT"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "JUMPDEST"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "POP"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "POP"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "POP"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "MLOAD"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "DUP1"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "MLOAD"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "SWAP1"
										},
										{
											"begin": 1955,
											"end": 2008,
											"name": "POP"
										},
										{
											"begin": 1948,
											"end": 2008,
											"name": "SWAP1"
										},
										{
											"begin": 1948,
											"end": 2008,
											"name": "POP"
										},
										{
											"begin": 1948,
											"end": 2008,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 1948,
											"end": 2008,
											"name": "JUMP"
										},
										{
											"begin": 1918,
											"end": 2077,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 1918,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 2062,
											"end": 2065,
											"name": "DUP3"
										},
										{
											"begin": 2046,
											"end": 2061,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "JUMPDEST"
										},
										{
											"begin": 2039,
											"end": 2066,
											"name": "SWAP1"
										},
										{
											"begin": 2039,
											"end": 2066,
											"name": "POP"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "JUMPDEST"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "SWAP2"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "SWAP1"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "POP"
										},
										{
											"begin": 1845,
											"end": 2083,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SLOAD"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "EXP"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "DIV"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "AND"
										},
										{
											"begin": 434,
											"end": 441,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "JUMPI"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP1"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "REVERT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "JUMPDEST"
										},
										{
											"begin": 748,
											"end": 752,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 739,
											"end": 745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 739,
											"end": 745,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "EXP"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "DUP2"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "SLOAD"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "DUP2"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "MUL"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "NOT"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "AND"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "SWAP1"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "DUP4"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "ISZERO"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "ISZERO"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "MUL"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "OR"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "SWAP1"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "SSTORE"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "POP"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "PUSH",
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "MLOAD"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "MLOAD"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "DUP1"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "SWAP2"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "SUB"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "SWAP1"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "LOG1"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "JUMPDEST"
										},
										{
											"begin": 453,
											"end": 460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "DUP1"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "SWAP1"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "SLOAD"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "SWAP1"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "EXP"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "SWAP1"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "DIV"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 479,
											"end": 484,
											"name": "AND"
										},
										{
											"begin": 472,
											"end": 484,
											"name": "SWAP1"
										},
										{
											"begin": 472,
											"end": 484,
											"name": "POP"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "SWAP1"
										},
										{
											"begin": 406,
											"end": 491,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SLOAD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "EXP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DIV"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SLOAD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "AND"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ISZERO"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MUL"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SUB"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "AND"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DIV"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DIV"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MUL"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MLOAD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MSTORE"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP3"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MSTORE"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SLOAD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "AND"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ISZERO"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MUL"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SUB"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "AND"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DIV"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ISZERO"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPI"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "LT"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPI"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP4"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SLOAD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DIV"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MUL"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP4"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MSTORE"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMP"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MSTORE"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "KECCAK256"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SLOAD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MSTORE"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP4"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "GT"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPI"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SUB"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "AND"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "JUMPDEST"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SLOAD"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "EXP"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "DIV"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "AND"
										},
										{
											"begin": 434,
											"end": 441,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "JUMPI"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP1"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "REVERT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "JUMPDEST"
										},
										{
											"begin": 1091,
											"end": 1104,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1115,
											"name": "CALLER"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "AND"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "AND"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "DUP2"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "MSTORE"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "ADD"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "SWAP1"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "DUP2"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "MSTORE"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "ADD"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "KECCAK256"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "SWAP1"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "SLOAD"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "SWAP1"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "EXP"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "SWAP1"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "DIV"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "AND"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "ISZERO"
										},
										{
											"begin": 1082,
											"end": 1117,
											"name": "ISZERO"
										},
										{
											"begin": 1082,
											"end": 1117,
											"name": "ISZERO"
										},
										{
											"begin": 1082,
											"end": 1117,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 1082,
											"end": 1117,
											"name": "JUMPI"
										},
										{
											"begin": 1082,
											"end": 1117,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1082,
											"end": 1117,
											"name": "DUP1"
										},
										{
											"begin": 1082,
											"end": 1117,
											"name": "REVERT"
										},
										{
											"begin": 1082,
											"end": 1117,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 1082,
											"end": 1117,
											"name": "JUMPDEST"
										},
										{
											"begin": 1131,
											"end": 1141,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1131,
											"end": 1141,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1131,
											"end": 1141,
											"name": "SWAP1"
										},
										{
											"begin": 1131,
											"end": 1141,
											"name": "SLOAD"
										},
										{
											"begin": 1131,
											"end": 1141,
											"name": "SWAP1"
										},
										{
											"begin": 1131,
											"end": 1141,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1131,
											"end": 1141,
											"name": "EXP"
										},
										{
											"begin": 1131,
											"end": 1141,
											"name": "SWAP1"
										},
										{
											"begin": 1131,
											"end": 1141,
											"name": "DIV"
										},
										{
											"begin": 1131,
											"end": 1141,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1131,
											"end": 1141,
											"name": "AND"
										},
										{
											"begin": 1127,
											"end": 1320,
											"name": "ISZERO"
										},
										{
											"begin": 1127,
											"end": 1320,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 1127,
											"end": 1320,
											"name": "JUMPI"
										},
										{
											"begin": 1186,
											"end": 1201,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1186,
											"end": 1201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1201,
											"name": "SWAP1"
										},
										{
											"begin": 1186,
											"end": 1201,
											"name": "SLOAD"
										},
										{
											"begin": 1186,
											"end": 1201,
											"name": "SWAP1"
										},
										{
											"begin": 1186,
											"end": 1201,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1186,
											"end": 1201,
											"name": "EXP"
										},
										{
											"begin": 1186,
											"end": 1201,
											"name": "SWAP1"
										},
										{
											"begin": 1186,
											"end": 1201,
											"name": "DIV"
										},
										{
											"begin": 1186,
											"end": 1201,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1186,
											"end": 1201,
											"name": "AND"
										},
										{
											"begin": 1164,
											"end": 1219,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1219,
											"name": "AND"
										},
										{
											"begin": 1164,
											"end": 1219,
											"name": "PUSH",
											"value": "6E18980A"
										},
										{
											"begin": 1220,
											"end": 1230,
											"name": "CALLER"
										},
										{
											"begin": 1232,
											"end": 1235,
											"name": "DUP5"
										},
										{
											"begin": 1237,
											"end": 1243,
											"name": "DUP5"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "MLOAD"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP5"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "AND"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "MUL"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP2"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "MSTORE"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "ADD"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP1"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP5"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "AND"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "AND"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP2"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "MSTORE"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "ADD"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP4"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "AND"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "AND"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP2"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "MSTORE"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "ADD"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP3"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP2"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "MSTORE"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "ADD"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "SWAP4"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "POP"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "POP"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "POP"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "POP"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "MLOAD"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP1"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP4"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "SUB"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP2"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP8"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP1"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "ISZERO"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "ISZERO"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "JUMPI"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP1"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "REVERT"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "JUMPDEST"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "GAS"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "SUB"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "CALL"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "ISZERO"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "ISZERO"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "JUMPI"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "DUP1"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "REVERT"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "JUMPDEST"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "POP"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "POP"
										},
										{
											"begin": 1164,
											"end": 1244,
											"name": "POP"
										},
										{
											"begin": 1157,
											"end": 1244,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 1157,
											"end": 1244,
											"name": "JUMP"
										},
										{
											"begin": 1127,
											"end": 1320,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 1127,
											"end": 1320,
											"name": "JUMPDEST"
										},
										{
											"begin": 1282,
											"end": 1309,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 1297,
											"end": 1300,
											"name": "DUP3"
										},
										{
											"begin": 1302,
											"end": 1308,
											"name": "DUP3"
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 1282,
											"end": 1309,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1309,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 1282,
											"end": 1309,
											"name": "JUMPDEST"
										},
										{
											"begin": 448,
											"end": 449,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 448,
											"end": 449,
											"name": "JUMPDEST"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "POP"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "POP"
										},
										{
											"begin": 1007,
											"end": 1326,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 4401,
											"end": 4415,
											"name": "DUP3"
										},
										{
											"begin": 4401,
											"end": 4420,
											"name": "LT"
										},
										{
											"begin": 4393,
											"end": 4421,
											"name": "ISZERO"
										},
										{
											"begin": 4393,
											"end": 4421,
											"name": "ISZERO"
										},
										{
											"begin": 4393,
											"end": 4421,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 4393,
											"end": 4421,
											"name": "JUMPI"
										},
										{
											"begin": 4393,
											"end": 4421,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4393,
											"end": 4421,
											"name": "DUP1"
										},
										{
											"begin": 4393,
											"end": 4421,
											"name": "REVERT"
										},
										{
											"begin": 4393,
											"end": 4421,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 4393,
											"end": 4421,
											"name": "JUMPDEST"
										},
										{
											"begin": 4451,
											"end": 4453,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "DUP2"
										},
										{
											"begin": 4439,
											"end": 4453,
											"name": "LT"
										},
										{
											"begin": 4431,
											"end": 4454,
											"name": "ISZERO"
										},
										{
											"begin": 4431,
											"end": 4454,
											"name": "ISZERO"
										},
										{
											"begin": 4431,
											"end": 4454,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 4431,
											"end": 4454,
											"name": "JUMPI"
										},
										{
											"begin": 4431,
											"end": 4454,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4431,
											"end": 4454,
											"name": "DUP1"
										},
										{
											"begin": 4431,
											"end": 4454,
											"name": "REVERT"
										},
										{
											"begin": 4431,
											"end": 4454,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 4431,
											"end": 4454,
											"name": "JUMPDEST"
										},
										{
											"begin": 4483,
											"end": 4497,
											"name": "DUP2"
										},
										{
											"begin": 4465,
											"end": 4480,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4465,
											"end": 4497,
											"name": "DUP2"
										},
										{
											"begin": 4465,
											"end": 4497,
											"name": "SWAP1"
										},
										{
											"begin": 4465,
											"end": 4497,
											"name": "SSTORE"
										},
										{
											"begin": 4465,
											"end": 4497,
											"name": "POP"
										},
										{
											"begin": 4520,
											"end": 4547,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 4538,
											"end": 4546,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 4538,
											"end": 4546,
											"name": "SLOAD"
										},
										{
											"begin": 4534,
											"end": 4536,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 4534,
											"end": 4546,
											"name": "EXP"
										},
										{
											"begin": 4520,
											"end": 4529,
											"name": "DUP3"
										},
										{
											"begin": 4520,
											"end": 4533,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 4520,
											"end": 4533,
											"name": "SWAP1"
										},
										{
											"begin": 4520,
											"end": 4547,
											"name": "SWAP2"
										},
										{
											"begin": 4520,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4520,
											"end": 4547,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4520,
											"end": 4547,
											"name": "AND"
										},
										{
											"begin": 4520,
											"end": 4547,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4520,
											"end": 4547,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 4520,
											"end": 4547,
											"name": "JUMPDEST"
										},
										{
											"begin": 4507,
											"end": 4517,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4507,
											"end": 4547,
											"name": "DUP2"
										},
										{
											"begin": 4507,
											"end": 4547,
											"name": "SWAP1"
										},
										{
											"begin": 4507,
											"end": 4547,
											"name": "SSTORE"
										},
										{
											"begin": 4507,
											"end": 4547,
											"name": "POP"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "PUSH",
											"value": "B044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E"
										},
										{
											"begin": 4565,
											"end": 4580,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4565,
											"end": 4580,
											"name": "SLOAD"
										},
										{
											"begin": 4582,
											"end": 4592,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4582,
											"end": 4592,
											"name": "SLOAD"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "MLOAD"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "DUP1"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "DUP4"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "DUP2"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "MSTORE"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "ADD"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "DUP3"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "DUP2"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "MSTORE"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "ADD"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "SWAP3"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "POP"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "POP"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "POP"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "MLOAD"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "DUP1"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "SWAP2"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "SUB"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "SWAP1"
										},
										{
											"begin": 4558,
											"end": 4593,
											"name": "LOG1"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "POP"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "POP"
										},
										{
											"begin": 4222,
											"end": 4600,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 3590,
											"end": 3602,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3590,
											"end": 3602,
											"name": "SLOAD"
										},
										{
											"begin": 3581,
											"end": 3587,
											"name": "DUP2"
										},
										{
											"begin": 3566,
											"end": 3578,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3566,
											"end": 3578,
											"name": "SLOAD"
										},
										{
											"begin": 3566,
											"end": 3587,
											"name": "ADD"
										},
										{
											"begin": 3566,
											"end": 3602,
											"name": "GT"
										},
										{
											"begin": 3558,
											"end": 3603,
											"name": "ISZERO"
										},
										{
											"begin": 3558,
											"end": 3603,
											"name": "ISZERO"
										},
										{
											"begin": 3558,
											"end": 3603,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 3558,
											"end": 3603,
											"name": "JUMPI"
										},
										{
											"begin": 3558,
											"end": 3603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3603,
											"name": "DUP1"
										},
										{
											"begin": 3558,
											"end": 3603,
											"name": "REVERT"
										},
										{
											"begin": 3558,
											"end": 3603,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 3558,
											"end": 3603,
											"name": "JUMPDEST"
										},
										{
											"begin": 3648,
											"end": 3656,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP1"
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "SWAP1"
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "SLOAD"
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "SWAP1"
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "EXP"
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "SWAP1"
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DIV"
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "AND"
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "AND"
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "AND"
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "DUP2"
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "MSTORE"
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "ADD"
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "SWAP1"
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "DUP2"
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "MSTORE"
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "ADD"
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "KECCAK256"
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "SLOAD"
										},
										{
											"begin": 3639,
											"end": 3645,
											"name": "DUP2"
										},
										{
											"begin": 3621,
											"end": 3629,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "DUP1"
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "SWAP1"
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "SLOAD"
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "SWAP1"
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "EXP"
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "SWAP1"
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "DIV"
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "AND"
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "AND"
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "AND"
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "DUP2"
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "MSTORE"
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "ADD"
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "SWAP1"
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "DUP2"
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "MSTORE"
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "ADD"
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "KECCAK256"
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "SLOAD"
										},
										{
											"begin": 3621,
											"end": 3645,
											"name": "ADD"
										},
										{
											"begin": 3621,
											"end": 3663,
											"name": "GT"
										},
										{
											"begin": 3613,
											"end": 3664,
											"name": "ISZERO"
										},
										{
											"begin": 3613,
											"end": 3664,
											"name": "ISZERO"
										},
										{
											"begin": 3613,
											"end": 3664,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 3613,
											"end": 3664,
											"name": "JUMPI"
										},
										{
											"begin": 3613,
											"end": 3664,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3664,
											"name": "DUP1"
										},
										{
											"begin": 3613,
											"end": 3664,
											"name": "REVERT"
										},
										{
											"begin": 3613,
											"end": 3664,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 3613,
											"end": 3664,
											"name": "JUMPDEST"
										},
										{
											"begin": 3694,
											"end": 3700,
											"name": "DUP1"
										},
										{
											"begin": 3675,
											"end": 3683,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3684,
											"end": 3689,
											"name": "DUP1"
										},
										{
											"begin": 3684,
											"end": 3689,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3684,
											"end": 3689,
											"name": "SWAP1"
										},
										{
											"begin": 3684,
											"end": 3689,
											"name": "SLOAD"
										},
										{
											"begin": 3684,
											"end": 3689,
											"name": "SWAP1"
										},
										{
											"begin": 3684,
											"end": 3689,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3684,
											"end": 3689,
											"name": "EXP"
										},
										{
											"begin": 3684,
											"end": 3689,
											"name": "SWAP1"
										},
										{
											"begin": 3684,
											"end": 3689,
											"name": "DIV"
										},
										{
											"begin": 3684,
											"end": 3689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3684,
											"end": 3689,
											"name": "AND"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "AND"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "AND"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "DUP2"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "MSTORE"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "ADD"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "SWAP1"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "DUP2"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "MSTORE"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "ADD"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "KECCAK256"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3700,
											"name": "DUP3"
										},
										{
											"begin": 3675,
											"end": 3700,
											"name": "DUP3"
										},
										{
											"begin": 3675,
											"end": 3700,
											"name": "SLOAD"
										},
										{
											"begin": 3675,
											"end": 3700,
											"name": "ADD"
										},
										{
											"begin": 3675,
											"end": 3700,
											"name": "SWAP3"
										},
										{
											"begin": 3675,
											"end": 3700,
											"name": "POP"
										},
										{
											"begin": 3675,
											"end": 3700,
											"name": "POP"
										},
										{
											"begin": 3675,
											"end": 3700,
											"name": "DUP2"
										},
										{
											"begin": 3675,
											"end": 3700,
											"name": "SWAP1"
										},
										{
											"begin": 3675,
											"end": 3700,
											"name": "SSTORE"
										},
										{
											"begin": 3675,
											"end": 3700,
											"name": "POP"
										},
										{
											"begin": 3726,
											"end": 3732,
											"name": "DUP1"
										},
										{
											"begin": 3710,
											"end": 3722,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3710,
											"end": 3722,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "DUP3"
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "DUP3"
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "SLOAD"
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "ADD"
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "SWAP3"
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "POP"
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "POP"
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "DUP2"
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "SWAP1"
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "SSTORE"
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "POP"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "PUSH",
											"value": "CB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A"
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "DUP2"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "MLOAD"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "DUP1"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "DUP3"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "DUP2"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "MSTORE"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "ADD"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "SWAP2"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "POP"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "POP"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "MLOAD"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "DUP1"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "SWAP2"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "SUB"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "SWAP1"
										},
										{
											"begin": 3742,
											"end": 3755,
											"name": "LOG1"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "POP"
										},
										{
											"begin": 3503,
											"end": 3762,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 4066,
											"end": 4072,
											"name": "DUP1"
										},
										{
											"begin": 4050,
											"end": 4062,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4050,
											"end": 4062,
											"name": "SLOAD"
										},
										{
											"begin": 4050,
											"end": 4072,
											"name": "LT"
										},
										{
											"begin": 4050,
											"end": 4072,
											"name": "ISZERO"
										},
										{
											"begin": 4042,
											"end": 4073,
											"name": "ISZERO"
										},
										{
											"begin": 4042,
											"end": 4073,
											"name": "ISZERO"
										},
										{
											"begin": 4042,
											"end": 4073,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 4042,
											"end": 4073,
											"name": "JUMPI"
										},
										{
											"begin": 4042,
											"end": 4073,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4042,
											"end": 4073,
											"name": "DUP1"
										},
										{
											"begin": 4042,
											"end": 4073,
											"name": "REVERT"
										},
										{
											"begin": 4042,
											"end": 4073,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 4042,
											"end": 4073,
											"name": "JUMPDEST"
										},
										{
											"begin": 4110,
											"end": 4116,
											"name": "DUP1"
										},
										{
											"begin": 4091,
											"end": 4099,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "DUP1"
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "SLOAD"
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "EXP"
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "DIV"
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "AND"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "AND"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "AND"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "DUP2"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "MSTORE"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "ADD"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "SWAP1"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "DUP2"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "MSTORE"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "ADD"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "KECCAK256"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "SLOAD"
										},
										{
											"begin": 4091,
											"end": 4116,
											"name": "LT"
										},
										{
											"begin": 4091,
											"end": 4116,
											"name": "ISZERO"
										},
										{
											"begin": 4083,
											"end": 4117,
											"name": "ISZERO"
										},
										{
											"begin": 4083,
											"end": 4117,
											"name": "ISZERO"
										},
										{
											"begin": 4083,
											"end": 4117,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 4083,
											"end": 4117,
											"name": "JUMPI"
										},
										{
											"begin": 4083,
											"end": 4117,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4117,
											"name": "DUP1"
										},
										{
											"begin": 4083,
											"end": 4117,
											"name": "REVERT"
										},
										{
											"begin": 4083,
											"end": 4117,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 4083,
											"end": 4117,
											"name": "JUMPDEST"
										},
										{
											"begin": 4144,
											"end": 4150,
											"name": "DUP1"
										},
										{
											"begin": 4128,
											"end": 4140,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4128,
											"end": 4140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4150,
											"name": "DUP3"
										},
										{
											"begin": 4128,
											"end": 4150,
											"name": "DUP3"
										},
										{
											"begin": 4128,
											"end": 4150,
											"name": "SLOAD"
										},
										{
											"begin": 4128,
											"end": 4150,
											"name": "SUB"
										},
										{
											"begin": 4128,
											"end": 4150,
											"name": "SWAP3"
										},
										{
											"begin": 4128,
											"end": 4150,
											"name": "POP"
										},
										{
											"begin": 4128,
											"end": 4150,
											"name": "POP"
										},
										{
											"begin": 4128,
											"end": 4150,
											"name": "DUP2"
										},
										{
											"begin": 4128,
											"end": 4150,
											"name": "SWAP1"
										},
										{
											"begin": 4128,
											"end": 4150,
											"name": "SSTORE"
										},
										{
											"begin": 4128,
											"end": 4150,
											"name": "POP"
										},
										{
											"begin": 4179,
											"end": 4185,
											"name": "DUP1"
										},
										{
											"begin": 4160,
											"end": 4168,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4174,
											"name": "DUP1"
										},
										{
											"begin": 4169,
											"end": 4174,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4174,
											"name": "SWAP1"
										},
										{
											"begin": 4169,
											"end": 4174,
											"name": "SLOAD"
										},
										{
											"begin": 4169,
											"end": 4174,
											"name": "SWAP1"
										},
										{
											"begin": 4169,
											"end": 4174,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4169,
											"end": 4174,
											"name": "EXP"
										},
										{
											"begin": 4169,
											"end": 4174,
											"name": "SWAP1"
										},
										{
											"begin": 4169,
											"end": 4174,
											"name": "DIV"
										},
										{
											"begin": 4169,
											"end": 4174,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4174,
											"name": "AND"
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "AND"
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "AND"
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "DUP2"
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "MSTORE"
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "ADD"
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "SWAP1"
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "DUP2"
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "MSTORE"
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "ADD"
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "KECCAK256"
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4185,
											"name": "DUP3"
										},
										{
											"begin": 4160,
											"end": 4185,
											"name": "DUP3"
										},
										{
											"begin": 4160,
											"end": 4185,
											"name": "SLOAD"
										},
										{
											"begin": 4160,
											"end": 4185,
											"name": "SUB"
										},
										{
											"begin": 4160,
											"end": 4185,
											"name": "SWAP3"
										},
										{
											"begin": 4160,
											"end": 4185,
											"name": "POP"
										},
										{
											"begin": 4160,
											"end": 4185,
											"name": "POP"
										},
										{
											"begin": 4160,
											"end": 4185,
											"name": "DUP2"
										},
										{
											"begin": 4160,
											"end": 4185,
											"name": "SWAP1"
										},
										{
											"begin": 4160,
											"end": 4185,
											"name": "SSTORE"
										},
										{
											"begin": 4160,
											"end": 4185,
											"name": "POP"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "PUSH",
											"value": "702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44"
										},
										{
											"begin": 4202,
											"end": 4208,
											"name": "DUP2"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "MLOAD"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "DUP1"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "DUP3"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "DUP2"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "MSTORE"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "ADD"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "SWAP2"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "POP"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "POP"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "MLOAD"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "DUP1"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "SWAP2"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "SUB"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "SWAP1"
										},
										{
											"begin": 4195,
											"end": 4209,
											"name": "LOG1"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "POP"
										},
										{
											"begin": 3986,
											"end": 4216,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "JUMPDEST"
										},
										{
											"begin": 2621,
											"end": 2635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2661,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2651,
											"end": 2661,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 2651,
											"end": 2661,
											"name": "SWAP1"
										},
										{
											"begin": 2651,
											"end": 2661,
											"name": "SLOAD"
										},
										{
											"begin": 2651,
											"end": 2661,
											"name": "SWAP1"
										},
										{
											"begin": 2651,
											"end": 2661,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2651,
											"end": 2661,
											"name": "EXP"
										},
										{
											"begin": 2651,
											"end": 2661,
											"name": "SWAP1"
										},
										{
											"begin": 2651,
											"end": 2661,
											"name": "DIV"
										},
										{
											"begin": 2651,
											"end": 2661,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2651,
											"end": 2661,
											"name": "AND"
										},
										{
											"begin": 2647,
											"end": 2824,
											"name": "ISZERO"
										},
										{
											"begin": 2647,
											"end": 2824,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 2647,
											"end": 2824,
											"name": "JUMPI"
										},
										{
											"begin": 2698,
											"end": 2713,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2698,
											"end": 2713,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2713,
											"name": "SWAP1"
										},
										{
											"begin": 2698,
											"end": 2713,
											"name": "SLOAD"
										},
										{
											"begin": 2698,
											"end": 2713,
											"name": "SWAP1"
										},
										{
											"begin": 2698,
											"end": 2713,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2698,
											"end": 2713,
											"name": "EXP"
										},
										{
											"begin": 2698,
											"end": 2713,
											"name": "SWAP1"
										},
										{
											"begin": 2698,
											"end": 2713,
											"name": "DIV"
										},
										{
											"begin": 2698,
											"end": 2713,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2698,
											"end": 2713,
											"name": "AND"
										},
										{
											"begin": 2684,
											"end": 2724,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2724,
											"name": "AND"
										},
										{
											"begin": 2684,
											"end": 2724,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 2725,
											"end": 2731,
											"name": "DUP5"
										},
										{
											"begin": 2733,
											"end": 2741,
											"name": "DUP5"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "MLOAD"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "ADD"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "MSTORE"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "MLOAD"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "DUP4"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "AND"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "MUL"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "DUP2"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "MSTORE"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "ADD"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "DUP1"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "DUP4"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "AND"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "AND"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "DUP2"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "MSTORE"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "ADD"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "DUP3"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "AND"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "AND"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "DUP2"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "MSTORE"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "ADD"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "SWAP3"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "POP"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "POP"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "POP"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "MLOAD"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "DUP1"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "DUP4"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "SUB"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "DUP2"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "DUP8"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "DUP1"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "ISZERO"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "ISZERO"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "JUMPI"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "DUP1"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "REVERT"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "JUMPDEST"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "GAS"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "SUB"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "CALL"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "ISZERO"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "ISZERO"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "JUMPI"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "DUP1"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "REVERT"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "JUMPDEST"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "POP"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "POP"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "POP"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "MLOAD"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "DUP1"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "MLOAD"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "SWAP1"
										},
										{
											"begin": 2684,
											"end": 2742,
											"name": "POP"
										},
										{
											"begin": 2677,
											"end": 2742,
											"name": "SWAP1"
										},
										{
											"begin": 2677,
											"end": 2742,
											"name": "POP"
										},
										{
											"begin": 2677,
											"end": 2742,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 2677,
											"end": 2742,
											"name": "JUMP"
										},
										{
											"begin": 2647,
											"end": 2824,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 2647,
											"end": 2824,
											"name": "JUMPDEST"
										},
										{
											"begin": 2780,
											"end": 2813,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 2796,
											"end": 2802,
											"name": "DUP4"
										},
										{
											"begin": 2804,
											"end": 2812,
											"name": "DUP4"
										},
										{
											"begin": 2780,
											"end": 2795,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 2780,
											"end": 2813,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2780,
											"end": 2813,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 2780,
											"end": 2813,
											"name": "JUMPDEST"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "SWAP1"
										},
										{
											"begin": 2773,
											"end": 2813,
											"name": "POP"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "JUMPDEST"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "SWAP3"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "SWAP2"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "POP"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "POP"
										},
										{
											"begin": 2543,
											"end": 2830,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "JUMPDEST"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "SLOAD"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "DUP2"
										},
										{
											"begin": 429,
											"end": 460,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "JUMPDEST"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "MSTORE"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DUP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "MSTORE"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "KECCAK256"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP2"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SLOAD"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "EXP"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DIV"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "AND"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "DUP2"
										},
										{
											"begin": 497,
											"end": 543,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 807,
											"end": 812,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 777,
											"end": 790,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 791,
											"end": 803,
											"name": "DUP4"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "AND"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "AND"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "DUP2"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "MSTORE"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "ADD"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "SWAP1"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "DUP2"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "MSTORE"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "ADD"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "KECCAK256"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "EXP"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "DUP2"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "SLOAD"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "DUP2"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "MUL"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "NOT"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "AND"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "SWAP1"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "DUP4"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "ISZERO"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "ISZERO"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "MUL"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "OR"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "SWAP1"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "SSTORE"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "POP"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "PUSH",
											"value": "D7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C"
										},
										{
											"begin": 839,
											"end": 851,
											"name": "DUP2"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "MLOAD"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "DUP1"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "DUP3"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "AND"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "AND"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "DUP2"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "MSTORE"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "ADD"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "SWAP2"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "POP"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "POP"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "MLOAD"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "DUP1"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "SWAP2"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "SUB"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "SWAP1"
										},
										{
											"begin": 822,
											"end": 852,
											"name": "LOG1"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "POP"
										},
										{
											"begin": 702,
											"end": 859,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "JUMPDEST"
										},
										{
											"begin": 525,
											"end": 535,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "DUP2"
										},
										{
											"begin": 493,
											"end": 535,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 917,
											"end": 918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "AND"
										},
										{
											"begin": 897,
											"end": 905,
											"name": "DUP2"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "AND"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "EQ"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "ISZERO"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "ISZERO"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "JUMPI"
										},
										{
											"begin": 943,
											"end": 951,
											"name": "DUP1"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "EXP"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SLOAD"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "MUL"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "NOT"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "AND"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "DUP4"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "AND"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "MUL"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "OR"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SSTORE"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "POP"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "JUMPDEST"
										},
										{
											"begin": 996,
											"end": 1011,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 954,
											"end": 967,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 968,
											"end": 984,
											"name": "DUP4"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "AND"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "AND"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "DUP2"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "MSTORE"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "ADD"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "SWAP1"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "DUP2"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "MSTORE"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "ADD"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "KECCAK256"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "SWAP1"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "SLOAD"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "SWAP1"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "EXP"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "SWAP1"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "DIV"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 954,
											"end": 985,
											"name": "AND"
										},
										{
											"begin": 946,
											"end": 986,
											"name": "ISZERO"
										},
										{
											"begin": 946,
											"end": 986,
											"name": "ISZERO"
										},
										{
											"begin": 946,
											"end": 986,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 946,
											"end": 986,
											"name": "JUMPI"
										},
										{
											"begin": 946,
											"end": 986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 946,
											"end": 986,
											"name": "DUP1"
										},
										{
											"begin": 946,
											"end": 986,
											"name": "REVERT"
										},
										{
											"begin": 946,
											"end": 986,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 946,
											"end": 986,
											"name": "JUMPDEST"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 1024,
											"end": 1040,
											"name": "DUP3"
										},
										{
											"begin": 1014,
											"end": 1023,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "JUMPDEST"
										},
										{
											"begin": 996,
											"end": 1041,
											"name": "SWAP1"
										},
										{
											"begin": 996,
											"end": 1041,
											"name": "POP"
										},
										{
											"begin": 1080,
											"end": 1081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1059,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1076,
											"name": "DUP5"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "AND"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "AND"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "DUP2"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "MSTORE"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "ADD"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "DUP2"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "MSTORE"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "ADD"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "KECCAK256"
										},
										{
											"begin": 1051,
											"end": 1081,
											"name": "DUP2"
										},
										{
											"begin": 1051,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1051,
											"end": 1081,
											"name": "SSTORE"
										},
										{
											"begin": 1051,
											"end": 1081,
											"name": "POP"
										},
										{
											"begin": 1107,
											"end": 1117,
											"name": "DUP1"
										},
										{
											"begin": 1091,
											"end": 1103,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1091,
											"end": 1103,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "DUP3"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "DUP3"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "SLOAD"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "SUB"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "SWAP3"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "POP"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "POP"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "DUP2"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "SWAP1"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "SSTORE"
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "POP"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "PUSH",
											"value": "61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6"
										},
										{
											"begin": 1147,
											"end": 1163,
											"name": "DUP3"
										},
										{
											"begin": 1165,
											"end": 1175,
											"name": "DUP3"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "MLOAD"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "DUP1"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "DUP4"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "AND"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "AND"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "DUP2"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "MSTORE"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "ADD"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "DUP3"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "DUP2"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "MSTORE"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "ADD"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "SWAP3"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "MLOAD"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "DUP1"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "SWAP2"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "SUB"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "SWAP1"
										},
										{
											"begin": 1127,
											"end": 1176,
											"name": "LOG1"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1183,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1937,
											"end": 2500,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 1937,
											"end": 2500,
											"name": "JUMPDEST"
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 646,
											"end": 647,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 639,
											"end": 643,
											"name": "DUP2"
										},
										{
											"begin": 639,
											"end": 647,
											"name": "ADD"
										},
										{
											"begin": 621,
											"end": 629,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 621,
											"end": 629,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 621,
											"end": 636,
											"name": "SWAP1"
										},
										{
											"begin": 621,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 621,
											"end": 647,
											"name": "LT"
										},
										{
											"begin": 619,
											"end": 648,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "JUMPI"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "DUP1"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "REVERT"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "JUMPDEST"
										},
										{
											"begin": 2352,
											"end": 2353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2342,
											"end": 2348,
											"name": "DUP3"
										},
										{
											"begin": 2342,
											"end": 2353,
											"name": "EQ"
										},
										{
											"begin": 2342,
											"end": 2353,
											"name": "ISZERO"
										},
										{
											"begin": 2341,
											"end": 2394,
											"name": "DUP1"
										},
										{
											"begin": 2341,
											"end": 2394,
											"name": "ISZERO"
										},
										{
											"begin": 2341,
											"end": 2394,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 2341,
											"end": 2394,
											"name": "JUMPI"
										},
										{
											"begin": 2341,
											"end": 2394,
											"name": "POP"
										},
										{
											"begin": 2392,
											"end": 2393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2377,
											"name": "CALLER"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "AND"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "AND"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "DUP2"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "MSTORE"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "ADD"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "SWAP1"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "DUP2"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "MSTORE"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "ADD"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2378,
											"name": "KECCAK256"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2387,
											"name": "DUP6"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "AND"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "AND"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "DUP2"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "MSTORE"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "ADD"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "SWAP1"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "DUP2"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "MSTORE"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "ADD"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "KECCAK256"
										},
										{
											"begin": 2359,
											"end": 2388,
											"name": "SLOAD"
										},
										{
											"begin": 2359,
											"end": 2393,
											"name": "EQ"
										},
										{
											"begin": 2359,
											"end": 2393,
											"name": "ISZERO"
										},
										{
											"begin": 2341,
											"end": 2394,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 2341,
											"end": 2394,
											"name": "JUMPDEST"
										},
										{
											"begin": 2339,
											"end": 2395,
											"name": "ISZERO"
										},
										{
											"begin": 2331,
											"end": 2396,
											"name": "ISZERO"
										},
										{
											"begin": 2331,
											"end": 2396,
											"name": "ISZERO"
										},
										{
											"begin": 2331,
											"end": 2396,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 2331,
											"end": 2396,
											"name": "JUMPI"
										},
										{
											"begin": 2331,
											"end": 2396,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2331,
											"end": 2396,
											"name": "DUP1"
										},
										{
											"begin": 2331,
											"end": 2396,
											"name": "REVERT"
										},
										{
											"begin": 2331,
											"end": 2396,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 2331,
											"end": 2396,
											"name": "JUMPDEST"
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "DUP2"
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2425,
											"name": "CALLER"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "AND"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "AND"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "DUP2"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "MSTORE"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "ADD"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "DUP2"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "MSTORE"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "ADD"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2426,
											"name": "KECCAK256"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2435,
											"name": "DUP6"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "AND"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "AND"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "DUP2"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "MSTORE"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "ADD"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "SWAP1"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "DUP2"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "MSTORE"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "ADD"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2436,
											"name": "KECCAK256"
										},
										{
											"begin": 2407,
											"end": 2445,
											"name": "DUP2"
										},
										{
											"begin": 2407,
											"end": 2445,
											"name": "SWAP1"
										},
										{
											"begin": 2407,
											"end": 2445,
											"name": "SSTORE"
										},
										{
											"begin": 2407,
											"end": 2445,
											"name": "POP"
										},
										{
											"begin": 2476,
											"end": 2484,
											"name": "DUP3"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "AND"
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "CALLER"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "AND"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2486,
											"end": 2492,
											"name": "DUP5"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "MLOAD"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "DUP1"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "DUP3"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "DUP2"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "MSTORE"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "ADD"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "SWAP2"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "POP"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "POP"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "MLOAD"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "DUP1"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "SWAP2"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "SUB"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "SWAP1"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "LOG3"
										},
										{
											"begin": 1937,
											"end": 2500,
											"name": "POP"
										},
										{
											"begin": 1937,
											"end": 2500,
											"name": "POP"
										},
										{
											"begin": 1937,
											"end": 2500,
											"name": "POP"
										},
										{
											"begin": 1937,
											"end": 2500,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "JUMPDEST"
										},
										{
											"begin": 921,
											"end": 935,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1138,
											"name": "DUP1"
										},
										{
											"begin": 1375,
											"end": 1390,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 646,
											"end": 647,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 639,
											"end": 643,
											"name": "DUP2"
										},
										{
											"begin": 639,
											"end": 647,
											"name": "ADD"
										},
										{
											"begin": 621,
											"end": 629,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 621,
											"end": 629,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 621,
											"end": 636,
											"name": "SWAP1"
										},
										{
											"begin": 621,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 621,
											"end": 647,
											"name": "LT"
										},
										{
											"begin": 619,
											"end": 648,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "ISZERO"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "JUMPI"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "DUP1"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "REVERT"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 611,
											"end": 649,
											"name": "JUMPDEST"
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 946,
											"end": 951,
											"name": "DUP9"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "AND"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "AND"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 938,
											"end": 952,
											"name": "KECCAK256"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 953,
											"end": 963,
											"name": "CALLER"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "AND"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "AND"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "KECCAK256"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "SLOAD"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP4"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "POP"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 1153,
											"end": 1168,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1153,
											"end": 1168,
											"name": "SLOAD"
										},
										{
											"begin": 1142,
											"end": 1148,
											"name": "DUP9"
										},
										{
											"begin": 1142,
											"end": 1152,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 1142,
											"end": 1152,
											"name": "SWAP1"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "SWAP2"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "SWAP1"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "AND"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "JUMPDEST"
										},
										{
											"begin": 1141,
											"end": 1174,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 1141,
											"end": 1174,
											"name": "SWAP1"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "SWAP2"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "SWAP1"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "AND"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 1141,
											"end": 1181,
											"name": "JUMPDEST"
										},
										{
											"begin": 1130,
											"end": 1181,
											"name": "SWAP3"
										},
										{
											"begin": 1130,
											"end": 1181,
											"name": "POP"
										},
										{
											"begin": 1201,
											"end": 1211,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1211,
											"name": "SLOAD"
										},
										{
											"begin": 1195,
											"end": 1198,
											"name": "DUP4"
										},
										{
											"begin": 1195,
											"end": 1211,
											"name": "GT"
										},
										{
											"begin": 1191,
											"end": 1254,
											"name": "ISZERO"
										},
										{
											"begin": 1191,
											"end": 1254,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 1191,
											"end": 1254,
											"name": "JUMPI"
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1243,
											"name": "SLOAD"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "SWAP3"
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1254,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 1191,
											"end": 1254,
											"name": "JUMPDEST"
										},
										{
											"begin": 525,
											"end": 535,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1267,
											"end": 1277,
											"name": "DUP5"
										},
										{
											"begin": 1267,
											"end": 1288,
											"name": "LT"
										},
										{
											"begin": 1263,
											"end": 1366,
											"name": "ISZERO"
										},
										{
											"begin": 1263,
											"end": 1366,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 1263,
											"end": 1366,
											"name": "JUMPI"
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "DUP6"
										},
										{
											"begin": 1333,
											"end": 1343,
											"name": "DUP6"
										},
										{
											"begin": 1333,
											"end": 1347,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 1333,
											"end": 1347,
											"name": "SWAP1"
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "SWAP2"
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "SWAP1"
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "AND"
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "JUMPDEST"
										},
										{
											"begin": 1304,
											"end": 1311,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1317,
											"name": "DUP10"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "AND"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "AND"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "DUP2"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "MSTORE"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "ADD"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "SWAP1"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "DUP2"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "MSTORE"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "ADD"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1318,
											"name": "KECCAK256"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1329,
											"name": "CALLER"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "AND"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "AND"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "DUP2"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "MSTORE"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "ADD"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "SWAP1"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "DUP2"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "MSTORE"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "ADD"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1330,
											"name": "KECCAK256"
										},
										{
											"begin": 1304,
											"end": 1355,
											"name": "DUP2"
										},
										{
											"begin": 1304,
											"end": 1355,
											"name": "SWAP1"
										},
										{
											"begin": 1304,
											"end": 1355,
											"name": "SSTORE"
										},
										{
											"begin": 1304,
											"end": 1355,
											"name": "POP"
										},
										{
											"begin": 1263,
											"end": 1366,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 1263,
											"end": 1366,
											"name": "JUMPDEST"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 1404,
											"end": 1407,
											"name": "DUP4"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DUP7"
										},
										{
											"begin": 1393,
											"end": 1403,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 1393,
											"end": 1403,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "SWAP2"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "AND"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "JUMPDEST"
										},
										{
											"begin": 1375,
											"end": 1408,
											"name": "SWAP2"
										},
										{
											"begin": 1375,
											"end": 1408,
											"name": "POP"
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 1456,
											"end": 1462,
											"name": "DUP6"
										},
										{
											"begin": 1436,
											"end": 1444,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "DUP11"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "AND"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "AND"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "DUP2"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "MSTORE"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "ADD"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "SWAP1"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "DUP2"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "MSTORE"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "ADD"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "KECCAK256"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "SLOAD"
										},
										{
											"begin": 1436,
											"end": 1455,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 1436,
											"end": 1455,
											"name": "SWAP1"
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "SWAP2"
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "SWAP1"
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "AND"
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "JUMPDEST"
										},
										{
											"begin": 1418,
											"end": 1426,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP10"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "AND"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "AND"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "DUP2"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "MSTORE"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "ADD"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "SWAP1"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "DUP2"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "MSTORE"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "ADD"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1433,
											"name": "KECCAK256"
										},
										{
											"begin": 1418,
											"end": 1463,
											"name": "DUP2"
										},
										{
											"begin": 1418,
											"end": 1463,
											"name": "SWAP1"
										},
										{
											"begin": 1418,
											"end": 1463,
											"name": "SSTORE"
										},
										{
											"begin": 1418,
											"end": 1463,
											"name": "POP"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 1507,
											"end": 1517,
											"name": "DUP3"
										},
										{
											"begin": 1489,
											"end": 1497,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP10"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "AND"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "AND"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "DUP2"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "MSTORE"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "ADD"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "SWAP1"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "DUP2"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "MSTORE"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "ADD"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "KECCAK256"
										},
										{
											"begin": 1489,
											"end": 1502,
											"name": "SLOAD"
										},
										{
											"begin": 1489,
											"end": 1506,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 1489,
											"end": 1506,
											"name": "SWAP1"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "SWAP2"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "SWAP1"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "AND"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "JUMPDEST"
										},
										{
											"begin": 1473,
											"end": 1481,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1485,
											"name": "DUP9"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "AND"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "AND"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "DUP2"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "MSTORE"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "ADD"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "SWAP1"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "DUP2"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "MSTORE"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "ADD"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1486,
											"name": "KECCAK256"
										},
										{
											"begin": 1473,
											"end": 1518,
											"name": "DUP2"
										},
										{
											"begin": 1473,
											"end": 1518,
											"name": "SWAP1"
										},
										{
											"begin": 1473,
											"end": 1518,
											"name": "SSTORE"
										},
										{
											"begin": 1473,
											"end": 1518,
											"name": "POP"
										},
										{
											"begin": 1538,
											"end": 1539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1535,
											"name": "DUP4"
										},
										{
											"begin": 1532,
											"end": 1539,
											"name": "GT"
										},
										{
											"begin": 1528,
											"end": 1649,
											"name": "ISZERO"
										},
										{
											"begin": 1528,
											"end": 1649,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 1528,
											"end": 1649,
											"name": "JUMPI"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 1593,
											"end": 1596,
											"name": "DUP4"
										},
										{
											"begin": 1573,
											"end": 1581,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "DUP1"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "SWAP1"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "SLOAD"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "SWAP1"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "EXP"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "SWAP1"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "DIV"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "AND"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "AND"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "AND"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "DUP2"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "MSTORE"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "ADD"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "SWAP1"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "DUP2"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "MSTORE"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "ADD"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "KECCAK256"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "SLOAD"
										},
										{
											"begin": 1573,
											"end": 1592,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 1573,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "SWAP2"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "SWAP1"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "AND"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "JUMPDEST"
										},
										{
											"begin": 1555,
											"end": 1563,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "DUP1"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "SWAP1"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "SLOAD"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "SWAP1"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "EXP"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "SWAP1"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "DIV"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "AND"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "DUP2"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "MSTORE"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "ADD"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "SWAP1"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "DUP2"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "MSTORE"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "ADD"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "KECCAK256"
										},
										{
											"begin": 1555,
											"end": 1597,
											"name": "DUP2"
										},
										{
											"begin": 1555,
											"end": 1597,
											"name": "SWAP1"
										},
										{
											"begin": 1555,
											"end": 1597,
											"name": "SSTORE"
										},
										{
											"begin": 1555,
											"end": 1597,
											"name": "POP"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "DUP1"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "SWAP1"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "SLOAD"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "SWAP1"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "EXP"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "SWAP1"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "DIV"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "AND"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "AND"
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "DUP8"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "AND"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1634,
											"end": 1637,
											"name": "DUP6"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "MLOAD"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "DUP1"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "DUP3"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "DUP2"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "MSTORE"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "ADD"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "SWAP2"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "POP"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "POP"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "MLOAD"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "DUP1"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "SWAP2"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "SUB"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "SWAP1"
										},
										{
											"begin": 1611,
											"end": 1638,
											"name": "LOG3"
										},
										{
											"begin": 1528,
											"end": 1649,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 1528,
											"end": 1649,
											"name": "JUMPDEST"
										},
										{
											"begin": 1674,
											"end": 1677,
											"name": "DUP6"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "AND"
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP8"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "AND"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1679,
											"end": 1689,
											"name": "DUP5"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "MLOAD"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "DUP3"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "DUP2"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "MSTORE"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "ADD"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "SWAP2"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "POP"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "POP"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "MLOAD"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "DUP1"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "SWAP2"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "SUB"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "SWAP1"
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "LOG3"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 1697,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1580,
											"end": 1694,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 1580,
											"end": 1694,
											"name": "JUMPDEST"
										},
										{
											"begin": 1640,
											"end": 1652,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1679,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "DUP4"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "AND"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "AND"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "DUP2"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "MSTORE"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "ADD"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "DUP2"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "MSTORE"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "ADD"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "KECCAK256"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "SLOAD"
										},
										{
											"begin": 1664,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1664,
											"end": 1687,
											"name": "POP"
										},
										{
											"begin": 1580,
											"end": 1694,
											"name": "SWAP2"
										},
										{
											"begin": 1580,
											"end": 1694,
											"name": "SWAP1"
										},
										{
											"begin": 1580,
											"end": 1694,
											"name": "POP"
										},
										{
											"begin": 1580,
											"end": 1694,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 833,
											"end": 1369,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 833,
											"end": 1369,
											"name": "JUMPDEST"
										},
										{
											"begin": 894,
											"end": 902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1042,
											"name": "DUP1"
										},
										{
											"begin": 905,
											"end": 945,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 906,
											"end": 933,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 917,
											"end": 932,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 917,
											"end": 932,
											"name": "SLOAD"
										},
										{
											"begin": 906,
											"end": 912,
											"name": "DUP7"
										},
										{
											"begin": 906,
											"end": 916,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 906,
											"end": 916,
											"name": "SWAP1"
										},
										{
											"begin": 906,
											"end": 933,
											"name": "SWAP2"
										},
										{
											"begin": 906,
											"end": 933,
											"name": "SWAP1"
										},
										{
											"begin": 906,
											"end": 933,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 906,
											"end": 933,
											"name": "AND"
										},
										{
											"begin": 906,
											"end": 933,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 933,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 906,
											"end": 933,
											"name": "JUMPDEST"
										},
										{
											"begin": 905,
											"end": 938,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 905,
											"end": 938,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 945,
											"name": "SWAP2"
										},
										{
											"begin": 905,
											"end": 945,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 945,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 905,
											"end": 945,
											"name": "AND"
										},
										{
											"begin": 905,
											"end": 945,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 905,
											"end": 945,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 905,
											"end": 945,
											"name": "JUMPDEST"
										},
										{
											"begin": 894,
											"end": 945,
											"name": "SWAP2"
										},
										{
											"begin": 894,
											"end": 945,
											"name": "POP"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "SLOAD"
										},
										{
											"begin": 959,
											"end": 962,
											"name": "DUP3"
										},
										{
											"begin": 959,
											"end": 975,
											"name": "GT"
										},
										{
											"begin": 955,
											"end": 1018,
											"name": "ISZERO"
										},
										{
											"begin": 955,
											"end": 1018,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 955,
											"end": 1018,
											"name": "JUMPI"
										},
										{
											"begin": 997,
											"end": 1007,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 997,
											"end": 1007,
											"name": "SLOAD"
										},
										{
											"begin": 991,
											"end": 1007,
											"name": "SWAP2"
										},
										{
											"begin": 991,
											"end": 1007,
											"name": "POP"
										},
										{
											"begin": 955,
											"end": 1018,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 955,
											"end": 1018,
											"name": "JUMPDEST"
										},
										{
											"begin": 1045,
											"end": 1060,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 1056,
											"end": 1059,
											"name": "DUP3"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "DUP5"
										},
										{
											"begin": 1045,
											"end": 1055,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 1045,
											"end": 1055,
											"name": "SWAP1"
										},
										{
											"begin": 1045,
											"end": 1060,
											"name": "SWAP2"
										},
										{
											"begin": 1045,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1045,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1045,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 1045,
											"end": 1060,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1060,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 1045,
											"end": 1060,
											"name": "JUMPDEST"
										},
										{
											"begin": 1027,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 1027,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 1093,
											"end": 1125,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 1118,
											"end": 1124,
											"name": "DUP4"
										},
										{
											"begin": 1093,
											"end": 1101,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1093,
											"end": 1113,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "CALLER"
										},
										{
											"begin": 1093,
											"end": 1113,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1093,
											"end": 1113,
											"name": "AND"
										},
										{
											"begin": 1093,
											"end": 1113,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1093,
											"end": 1113,
											"name": "AND"
										},
										{
											"begin": 1093,
											"end": 1113,
											"name": "DUP2"
										},
										{
											"begin": 1093,
											"end": 1113,
											"name": "MSTORE"
										},
										{
											"begin": 1093,
											"end": 1113,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1093,
											"end": 1113,
											"name": "ADD"
										},
										{
											"begin": 1093,
											"end": 1113,
											"name": "SWAP1"
										},
										{
											"begin": 1093,
											"end": 1113,
											"name": "DUP2"
										},
										{
											"begin": 1093,
											"end": 1113,
											"name": "MSTORE"
										},
										{
											"begin": 1093,
											"end": 1113,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1093,
											"end": 1113,
											"name": "ADD"
										},
										{
											"begin": 1093,
											"end": 1113,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1113,
											"name": "KECCAK256"
										},
										{
											"begin": 1093,
											"end": 1113,
											"name": "SLOAD"
										},
										{
											"begin": 1093,
											"end": 1117,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 1093,
											"end": 1117,
											"name": "SWAP1"
										},
										{
											"begin": 1093,
											"end": 1125,
											"name": "SWAP2"
										},
										{
											"begin": 1093,
											"end": 1125,
											"name": "SWAP1"
										},
										{
											"begin": 1093,
											"end": 1125,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1093,
											"end": 1125,
											"name": "AND"
										},
										{
											"begin": 1093,
											"end": 1125,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1093,
											"end": 1125,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 1093,
											"end": 1125,
											"name": "JUMPDEST"
										},
										{
											"begin": 1070,
											"end": 1078,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1089,
											"name": "CALLER"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "AND"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "AND"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "DUP2"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "MSTORE"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "ADD"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "SWAP1"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "DUP2"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "MSTORE"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "ADD"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1090,
											"name": "KECCAK256"
										},
										{
											"begin": 1070,
											"end": 1125,
											"name": "DUP2"
										},
										{
											"begin": 1070,
											"end": 1125,
											"name": "SWAP1"
										},
										{
											"begin": 1070,
											"end": 1125,
											"name": "SSTORE"
										},
										{
											"begin": 1070,
											"end": 1125,
											"name": "POP"
										},
										{
											"begin": 1151,
											"end": 1180,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 1169,
											"end": 1179,
											"name": "DUP2"
										},
										{
											"begin": 1151,
											"end": 1159,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1163,
											"name": "DUP8"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "AND"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "AND"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "DUP2"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "MSTORE"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "ADD"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "DUP2"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "MSTORE"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "ADD"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "KECCAK256"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "SLOAD"
										},
										{
											"begin": 1151,
											"end": 1168,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 1151,
											"end": 1168,
											"name": "SWAP1"
										},
										{
											"begin": 1151,
											"end": 1180,
											"name": "SWAP2"
										},
										{
											"begin": 1151,
											"end": 1180,
											"name": "SWAP1"
										},
										{
											"begin": 1151,
											"end": 1180,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1151,
											"end": 1180,
											"name": "AND"
										},
										{
											"begin": 1151,
											"end": 1180,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1151,
											"end": 1180,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 1151,
											"end": 1180,
											"name": "JUMPDEST"
										},
										{
											"begin": 1135,
											"end": 1143,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1135,
											"end": 1148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1147,
											"name": "DUP7"
										},
										{
											"begin": 1135,
											"end": 1148,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1148,
											"name": "AND"
										},
										{
											"begin": 1135,
											"end": 1148,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1148,
											"name": "AND"
										},
										{
											"begin": 1135,
											"end": 1148,
											"name": "DUP2"
										},
										{
											"begin": 1135,
											"end": 1148,
											"name": "MSTORE"
										},
										{
											"begin": 1135,
											"end": 1148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1135,
											"end": 1148,
											"name": "ADD"
										},
										{
											"begin": 1135,
											"end": 1148,
											"name": "SWAP1"
										},
										{
											"begin": 1135,
											"end": 1148,
											"name": "DUP2"
										},
										{
											"begin": 1135,
											"end": 1148,
											"name": "MSTORE"
										},
										{
											"begin": 1135,
											"end": 1148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1135,
											"end": 1148,
											"name": "ADD"
										},
										{
											"begin": 1135,
											"end": 1148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1148,
											"name": "KECCAK256"
										},
										{
											"begin": 1135,
											"end": 1180,
											"name": "DUP2"
										},
										{
											"begin": 1135,
											"end": 1180,
											"name": "SWAP1"
										},
										{
											"begin": 1135,
											"end": 1180,
											"name": "SSTORE"
										},
										{
											"begin": 1135,
											"end": 1180,
											"name": "POP"
										},
										{
											"begin": 1200,
											"end": 1201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1197,
											"name": "DUP3"
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "GT"
										},
										{
											"begin": 1190,
											"end": 1316,
											"name": "ISZERO"
										},
										{
											"begin": 1190,
											"end": 1316,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 1190,
											"end": 1316,
											"name": "JUMPI"
										},
										{
											"begin": 1235,
											"end": 1259,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 1255,
											"end": 1258,
											"name": "DUP3"
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "DUP1"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "SWAP1"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "SLOAD"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "SWAP1"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "EXP"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "SWAP1"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "DIV"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "AND"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "AND"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "AND"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "DUP2"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "MSTORE"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "ADD"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "SWAP1"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "DUP2"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "MSTORE"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "ADD"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "KECCAK256"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "SLOAD"
										},
										{
											"begin": 1235,
											"end": 1254,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 1235,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 1235,
											"end": 1259,
											"name": "SWAP2"
										},
										{
											"begin": 1235,
											"end": 1259,
											"name": "SWAP1"
										},
										{
											"begin": 1235,
											"end": 1259,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1235,
											"end": 1259,
											"name": "AND"
										},
										{
											"begin": 1235,
											"end": 1259,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1235,
											"end": 1259,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 1235,
											"end": 1259,
											"name": "JUMPDEST"
										},
										{
											"begin": 1217,
											"end": 1225,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "DUP1"
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "SLOAD"
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "EXP"
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "SWAP1"
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "DIV"
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "AND"
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "AND"
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "AND"
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "SWAP1"
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "KECCAK256"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "DUP2"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "SWAP1"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "SSTORE"
										},
										{
											"begin": 1217,
											"end": 1259,
											"name": "POP"
										},
										{
											"begin": 1294,
											"end": 1299,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1299,
											"name": "DUP1"
										},
										{
											"begin": 1294,
											"end": 1299,
											"name": "SWAP1"
										},
										{
											"begin": 1294,
											"end": 1299,
											"name": "SLOAD"
										},
										{
											"begin": 1294,
											"end": 1299,
											"name": "SWAP1"
										},
										{
											"begin": 1294,
											"end": 1299,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1294,
											"end": 1299,
											"name": "EXP"
										},
										{
											"begin": 1294,
											"end": 1299,
											"name": "SWAP1"
										},
										{
											"begin": 1294,
											"end": 1299,
											"name": "DIV"
										},
										{
											"begin": 1294,
											"end": 1299,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1294,
											"end": 1299,
											"name": "AND"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "AND"
										},
										{
											"begin": 1282,
											"end": 1292,
											"name": "CALLER"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "AND"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1301,
											"end": 1304,
											"name": "DUP5"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "MLOAD"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "DUP1"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "DUP3"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "DUP2"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "MSTORE"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "ADD"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "SWAP2"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "POP"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "POP"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "MLOAD"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "DUP1"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "SWAP2"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "SUB"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "SWAP1"
										},
										{
											"begin": 1273,
											"end": 1305,
											"name": "LOG3"
										},
										{
											"begin": 1190,
											"end": 1316,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 1190,
											"end": 1316,
											"name": "JUMPDEST"
										},
										{
											"begin": 1346,
											"end": 1349,
											"name": "DUP4"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "AND"
										},
										{
											"begin": 1334,
											"end": 1344,
											"name": "CALLER"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "AND"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1351,
											"end": 1361,
											"name": "DUP4"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "MLOAD"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "DUP1"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "DUP3"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "DUP2"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "MSTORE"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "ADD"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "SWAP2"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "POP"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "POP"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "MLOAD"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "DUP1"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "SWAP2"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "SUB"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "SWAP1"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "LOG3"
										},
										{
											"begin": 833,
											"end": 1369,
											"name": "POP"
										},
										{
											"begin": 833,
											"end": 1369,
											"name": "POP"
										},
										{
											"begin": 833,
											"end": 1369,
											"name": "POP"
										},
										{
											"begin": 833,
											"end": 1369,
											"name": "POP"
										},
										{
											"begin": 833,
											"end": 1369,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "JUMPDEST"
										},
										{
											"begin": 229,
											"end": 236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 302,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 257,
											"end": 258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 252,
											"end": 253,
											"name": "DUP5"
										},
										{
											"begin": 252,
											"end": 258,
											"name": "EQ"
										},
										{
											"begin": 248,
											"end": 293,
											"name": "ISZERO"
										},
										{
											"begin": 248,
											"end": 293,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 248,
											"end": 293,
											"name": "JUMPI"
										},
										{
											"begin": 281,
											"end": 282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 274,
											"end": 282,
											"name": "SWAP2"
										},
										{
											"begin": 274,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 274,
											"end": 282,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 274,
											"end": 282,
											"name": "JUMP"
										},
										{
											"begin": 248,
											"end": 293,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 248,
											"end": 293,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "DUP3"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP5"
										},
										{
											"begin": 314,
											"end": 319,
											"name": "MUL"
										},
										{
											"begin": 302,
											"end": 319,
											"name": "SWAP1"
										},
										{
											"begin": 302,
											"end": 319,
											"name": "POP"
										},
										{
											"begin": 345,
											"end": 346,
											"name": "DUP3"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP5"
										},
										{
											"begin": 336,
											"end": 337,
											"name": "DUP3"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "DUP2"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "ISZERO"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "ISZERO"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "JUMPI"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "INVALID"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "JUMPDEST"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "DIV"
										},
										{
											"begin": 336,
											"end": 346,
											"name": "EQ"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "ISZERO"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "ISZERO"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "JUMPI"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "INVALID"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "JUMPDEST"
										},
										{
											"begin": 364,
											"end": 365,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 365,
											"name": "SWAP2"
										},
										{
											"begin": 357,
											"end": 365,
											"name": "POP"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "JUMPDEST"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "POP"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "SWAP3"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "SWAP2"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "POP"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "POP"
										},
										{
											"begin": 171,
											"end": 372,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2825,
											"end": 2968,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 2825,
											"end": 2968,
											"name": "JUMPDEST"
										},
										{
											"begin": 2903,
											"end": 2917,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2943,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "DUP5"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "AND"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "AND"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "DUP2"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "MSTORE"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "ADD"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "SWAP1"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "DUP2"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "MSTORE"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "ADD"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "KECCAK256"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2960,
											"name": "DUP4"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "AND"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "AND"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "DUP2"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "MSTORE"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "ADD"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "SWAP1"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "DUP2"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "MSTORE"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "ADD"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "KECCAK256"
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "SLOAD"
										},
										{
											"begin": 2929,
											"end": 2961,
											"name": "SWAP1"
										},
										{
											"begin": 2929,
											"end": 2961,
											"name": "POP"
										},
										{
											"begin": 2825,
											"end": 2968,
											"name": "SWAP3"
										},
										{
											"begin": 2825,
											"end": 2968,
											"name": "SWAP2"
										},
										{
											"begin": 2825,
											"end": 2968,
											"name": "POP"
										},
										{
											"begin": 2825,
											"end": 2968,
											"name": "POP"
										},
										{
											"begin": 2825,
											"end": 2968,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 378,
											"end": 661,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 378,
											"end": 661,
											"name": "JUMPDEST"
										},
										{
											"begin": 436,
											"end": 443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 533,
											"end": 542,
											"name": "DUP1"
										},
										{
											"begin": 549,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 545,
											"end": 546,
											"name": "DUP5"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "ISZERO"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "ISZERO"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "276"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "JUMPI"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "INVALID"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "tag",
											"value": "276"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "DIV"
										},
										{
											"begin": 533,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 533,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 653,
											"end": 654,
											"name": "DUP1"
										},
										{
											"begin": 646,
											"end": 654,
											"name": "SWAP2"
										},
										{
											"begin": 646,
											"end": 654,
											"name": "POP"
										},
										{
											"begin": 378,
											"end": 661,
											"name": "POP"
										},
										{
											"begin": 378,
											"end": 661,
											"name": "SWAP3"
										},
										{
											"begin": 378,
											"end": 661,
											"name": "SWAP2"
										},
										{
											"begin": 378,
											"end": 661,
											"name": "POP"
										},
										{
											"begin": 378,
											"end": 661,
											"name": "POP"
										},
										{
											"begin": 378,
											"end": 661,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 667,
											"end": 787,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 667,
											"end": 787,
											"name": "JUMPDEST"
										},
										{
											"begin": 725,
											"end": 732,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 756,
											"end": 757,
											"name": "DUP3"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP3"
										},
										{
											"begin": 751,
											"end": 757,
											"name": "GT"
										},
										{
											"begin": 751,
											"end": 757,
											"name": "ISZERO"
										},
										{
											"begin": 744,
											"end": 758,
											"name": "ISZERO"
										},
										{
											"begin": 744,
											"end": 758,
											"name": "ISZERO"
										},
										{
											"begin": 744,
											"end": 758,
											"name": "PUSH [tag]",
											"value": "278"
										},
										{
											"begin": 744,
											"end": 758,
											"name": "JUMPI"
										},
										{
											"begin": 744,
											"end": 758,
											"name": "INVALID"
										},
										{
											"begin": 744,
											"end": 758,
											"name": "tag",
											"value": "278"
										},
										{
											"begin": 744,
											"end": 758,
											"name": "JUMPDEST"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "DUP2"
										},
										{
											"begin": 775,
											"end": 776,
											"name": "DUP4"
										},
										{
											"begin": 775,
											"end": 780,
											"name": "SUB"
										},
										{
											"begin": 768,
											"end": 780,
											"name": "SWAP1"
										},
										{
											"begin": 768,
											"end": 780,
											"name": "POP"
										},
										{
											"begin": 667,
											"end": 787,
											"name": "SWAP3"
										},
										{
											"begin": 667,
											"end": 787,
											"name": "SWAP2"
										},
										{
											"begin": 667,
											"end": 787,
											"name": "POP"
										},
										{
											"begin": 667,
											"end": 787,
											"name": "POP"
										},
										{
											"begin": 667,
											"end": 787,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 793,
											"end": 936,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 793,
											"end": 936,
											"name": "JUMPDEST"
										},
										{
											"begin": 851,
											"end": 858,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 870,
											"end": 879,
											"name": "DUP1"
										},
										{
											"begin": 886,
											"end": 887,
											"name": "DUP3"
										},
										{
											"begin": 882,
											"end": 883,
											"name": "DUP5"
										},
										{
											"begin": 882,
											"end": 887,
											"name": "ADD"
										},
										{
											"begin": 870,
											"end": 887,
											"name": "SWAP1"
										},
										{
											"begin": 870,
											"end": 887,
											"name": "POP"
										},
										{
											"begin": 909,
											"end": 910,
											"name": "DUP4"
										},
										{
											"begin": 904,
											"end": 905,
											"name": "DUP2"
										},
										{
											"begin": 904,
											"end": 910,
											"name": "LT"
										},
										{
											"begin": 904,
											"end": 910,
											"name": "ISZERO"
										},
										{
											"begin": 897,
											"end": 911,
											"name": "ISZERO"
										},
										{
											"begin": 897,
											"end": 911,
											"name": "ISZERO"
										},
										{
											"begin": 897,
											"end": 911,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 897,
											"end": 911,
											"name": "JUMPI"
										},
										{
											"begin": 897,
											"end": 911,
											"name": "INVALID"
										},
										{
											"begin": 897,
											"end": 911,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 897,
											"end": 911,
											"name": "JUMPDEST"
										},
										{
											"begin": 928,
											"end": 929,
											"name": "DUP1"
										},
										{
											"begin": 921,
											"end": 929,
											"name": "SWAP2"
										},
										{
											"begin": 921,
											"end": 929,
											"name": "POP"
										},
										{
											"begin": 793,
											"end": 936,
											"name": "POP"
										},
										{
											"begin": 793,
											"end": 936,
											"name": "SWAP3"
										},
										{
											"begin": 793,
											"end": 936,
											"name": "SWAP2"
										},
										{
											"begin": 793,
											"end": 936,
											"name": "POP"
										},
										{
											"begin": 793,
											"end": 936,
											"name": "POP"
										},
										{
											"begin": 793,
											"end": 936,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"addBlackList(address)": "0ecb93c0",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"decimals()": "313ce567",
							"deprecate(address)": "0753c30c",
							"deprecated()": "0e136b19",
							"destroyBlackFunds(address)": "f3bdc228",
							"getBlackListStatus(address)": "59bf1abe",
							"getOwner()": "893d20e8",
							"isBlackListed(address)": "e47d6060",
							"issue(uint256)": "cc872b66",
							"maximumFee()": "35390714",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"redeem(uint256)": "db006a75",
							"removeBlackList(address)": "e4997dc5",
							"setParams(uint256,uint256)": "c0324c77",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"upgradedAddress()": "26976e3f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}}},\"userdoc\":{\"methods\":{\"getBlackListStatus(address)\":{\"notice\":\"//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/DiverseTetherToken.sol\":\"DiverseTetherToken\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BasicToken.sol\":{\"keccak256\":\"0x2b4b1eab74d188cdd7cb1a47d17f75a1e122614807d8afadafee23d975f60c66\",\"urls\":[\"bzzr://6488298947e856cfa1970b30e52a470ee5d1587b460650eee5c8cd58922ed586\"]},\"contracts/Blacklist.sol\":{\"keccak256\":\"0x3ab486dedb5258d5583efc6e5f28e06529aef8b19aa87f33e6914c4a56bbbdbe\",\"urls\":[\"bzzr://8a8f803851561dc25fccf7651601e0fdccef6eb2efd30f9235491c5e6837cdea\"]},\"contracts/DiverseTetherToken.sol\":{\"keccak256\":\"0xc929d10ee675a576fb6bf70e2d5b196f4d569f1bace3c528c6daf24780cfa102\",\"urls\":[\"bzzr://6bb299507a16167868fec48559aba94e7fc88e3f3696c88df9536d533fcc7262\"]},\"contracts/ERC20.sol\":{\"keccak256\":\"0x16910dc42c30d5797ccb5b273912cbaab03040f9a8407e482eaf63ecfd69c947\",\"urls\":[\"bzzr://017b64a28aff668f70a50ed0e374b1d5c9d8af28bdbb589c576baf000a8345a6\"]},\"contracts/ERC20Basic.sol\":{\"keccak256\":\"0x048b52327684216a7ea51105efb535da935a86d5740670946af682ad74984ace\",\"urls\":[\"bzzr://efd151bed81652da31de6fbb14e5d8dd1a0f87bc31e260cc828aed228ed6e2da\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xd8ff01a131dd831a1928520837f7746f3413cc988cbcc9d417dfa25d5a49b845\",\"urls\":[\"bzzr://ebe1a444b59337e6095a07de0059fa74a9f77c6ce74162d132640fcc95961a21\"]},\"contracts/Pausable.sol\":{\"keccak256\":\"0x65bddf7b56a18baa300d9b47c834e63f5a93cbfa512b4350018eb70ed21b04c9\",\"urls\":[\"bzzr://b7c533c5f29443c7ac2add40a51fb82d623bb7f19bde95c8a13f8518326cc190\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0xbf8b5c77e4288c9d77aa5d186ccb9ebce8d66aee043166416a743e88ac605cf5\",\"urls\":[\"bzzr://56a16e47ba4f5bdc8e02d8966b571f7e5055ebcabadaee9876948229d610fb62\"]},\"contracts/StandardToken.sol\":{\"keccak256\":\"0x22dc3a71dc0fc87aef89af4b5138f6e663e5097affc8facc0361a89916c8803b\",\"urls\":[\"bzzr://229967701889ffd1036124883671205ecca6cea9a94c74861351784f9c2e7922\"]},\"contracts/UpgradedStandardToken.sol\":{\"keccak256\":\"0xaf74b5d02c20b72cf651bc51224e8cb5e0764dd4368810ecb9e647f0fd390601\",\"urls\":[\"bzzr://6aa9181e48f43d0a65827ff1ad73e00e59dbce96331bc09f9e0dbad2aa586664\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"getBlackListStatus(address)": {
								"notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////"
							}
						}
					}
				}
			},
			"contracts/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "ERC20 interface"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/ERC20Basic.sol": {
				"ERC20Basic": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "ERC20Basic"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						},
						"title": "Ownable"
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":248:971  contract Ownable {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/Ownable.sol\":425:486  function Ownable() public {... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n    /* \"contracts/Ownable.sol\":469:479  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":461:466  owner */\n  0x0\n  dup1\n    /* \"contracts/Ownable.sol\":461:479  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":248:971  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":248:971  contract Ownable {... */\n      mstore(0x40, 0x60)\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x8da5cb5b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_3\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"contracts/Ownable.sol\":271:291  address public owner */\n    tag_2:\n      jumpi(tag_4, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_4:\n      tag_5\n      jump(tag_6)\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":821:968  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_3:\n      jumpi(tag_7, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_7:\n      tag_8\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"contracts/Ownable.sol\":271:291  address public owner */\n    tag_6:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Ownable.sol\":821:968  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_9:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_11\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_11:\n        /* \"contracts/Ownable.sol\":917:918  0 */\n      0x0\n        /* \"contracts/Ownable.sol\":897:919  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":897:905  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":897:919  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Ownable.sol\":893:962  if (newOwner != address(0)) {... */\n      iszero\n      tag_13\n      jumpi\n        /* \"contracts/Ownable.sol\":943:951  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":935:940  owner */\n      0x0\n      dup1\n        /* \"contracts/Ownable.sol\":935:951  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":893:962  if (newOwner != address(0)) {... */\n    tag_13:\n        /* \"contracts/Ownable.sol\":821:968  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820cfafcef0df4a67b015f2fd789613b8f0cf5fedad6852b92ed7a3ca9108027f930029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6060604052341561000f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101fc8061005e6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610048578063f2fde38b1461009d57600080fd5b341561005357600080fd5b61005b6100d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100a857600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506100fb565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156101cd57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a72305820cfafcef0df4a67b015f2fd789613b8f0cf5fedad6852b92ed7a3ca9108027f930029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1FC DUP1 PUSH2 0x5E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xFB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xcf 0xaf 0xce CREATE 0xdf 0x4a PUSH8 0xB015F2FD789613B8 CREATE 0xcf 0x5f 0xed 0xad PUSH9 0x52B92ED7A3CA910802 PUSH32 0x9300290000000000000000000000000000000000000000000000000000000000 ",
							"sourceMap": "248:723:5:-;;;425:61;;;;;;;;469:10;461:5;;:18;;;;;;;;;;;;;;;;;;248:723;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610048578063f2fde38b1461009d57600080fd5b341561005357600080fd5b61005b6100d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100a857600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506100fb565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156101cd57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a72305820cfafcef0df4a67b015f2fd789613b8f0cf5fedad6852b92ed7a3ca9108027f930029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xFB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xcf 0xaf 0xce CREATE 0xdf 0x4a PUSH8 0xB015F2FD789613B8 CREATE 0xcf 0x5f 0xed 0xad PUSH9 0x52B92ED7A3CA910802 PUSH32 0x9300290000000000000000000000000000000000000000000000000000000000 ",
							"sourceMap": "248:723:5:-;;;;;;;;;;;;;;;;;;;;;;;271:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;821:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;271:20;;;;;;;;;;;;;:::o;821:147::-;629:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;917:1;897:22;;:8;:22;;;;893:69;;;943:8;935:5;;:16;;;;;;;;;;;;;;;;;;893:69;821:147;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "101600",
								"executionCost": "20408",
								"totalCost": "122008"
							},
							"external": {
								"owner()": "413",
								"transferOwnership(address)": "20755"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 248,
									"end": 971,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 248,
									"end": 971,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 248,
									"end": 971,
									"name": "MSTORE"
								},
								{
									"begin": 425,
									"end": 486,
									"name": "CALLVALUE"
								},
								{
									"begin": 425,
									"end": 486,
									"name": "ISZERO"
								},
								{
									"begin": 425,
									"end": 486,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 425,
									"end": 486,
									"name": "JUMPI"
								},
								{
									"begin": 425,
									"end": 486,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 425,
									"end": 486,
									"name": "DUP1"
								},
								{
									"begin": 425,
									"end": 486,
									"name": "REVERT"
								},
								{
									"begin": 425,
									"end": 486,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 425,
									"end": 486,
									"name": "JUMPDEST"
								},
								{
									"begin": 469,
									"end": 479,
									"name": "CALLER"
								},
								{
									"begin": 461,
									"end": 466,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 461,
									"end": 466,
									"name": "DUP1"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "EXP"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "DUP2"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SLOAD"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "DUP2"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "MUL"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "NOT"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "AND"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SWAP1"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "DUP4"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "AND"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "MUL"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "OR"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SWAP1"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SSTORE"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "POP"
								},
								{
									"begin": 248,
									"end": 971,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 248,
									"end": 971,
									"name": "DUP1"
								},
								{
									"begin": 248,
									"end": 971,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 248,
									"end": 971,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 248,
									"end": 971,
									"name": "CODECOPY"
								},
								{
									"begin": 248,
									"end": 971,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 248,
									"end": 971,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820cfafcef0df4a67b015f2fd789613b8f0cf5fedad6852b92ed7a3ca9108027f930029",
									".code": [
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "MSTORE"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "SWAP1"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "DIV"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "AND"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "DUP1"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "EQ"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "JUMPI"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "DUP1"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "EQ"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "JUMPI"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "DUP1"
										},
										{
											"begin": 248,
											"end": 971,
											"name": "REVERT"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "CALLVALUE"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "ISZERO"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPI"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "REVERT"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP3"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MSTORE"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "ADD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SUB"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "RETURN"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "CALLVALUE"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "ISZERO"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPI"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "REVERT"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "AND"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "ADD"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP2"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "STOP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SLOAD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "EXP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DIV"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 917,
											"end": 918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "AND"
										},
										{
											"begin": 897,
											"end": 905,
											"name": "DUP2"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "AND"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "EQ"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "ISZERO"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "ISZERO"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "JUMPI"
										},
										{
											"begin": 943,
											"end": 951,
											"name": "DUP1"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "EXP"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SLOAD"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "MUL"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "NOT"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "AND"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "DUP4"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "AND"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "MUL"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "OR"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SSTORE"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "POP"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Ownable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xd8ff01a131dd831a1928520837f7746f3413cc988cbcc9d417dfa25d5a49b845\",\"urls\":[\"bzzr://ebe1a444b59337e6095a07de0059fa74a9f77c6ce74162d132640fcc95961a21\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state"
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state"
							}
						},
						"title": "Pausable"
					},
					"evm": {
						"assembly": "    /* \"contracts/Pausable.sol\":196:941  contract Pausable is Ownable {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/Pausable.sol\":287:292  false */\n  0x0\n    /* \"contracts/Pausable.sol\":266:292  bool public paused = false */\n  dup1\n  exp(0x100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":469:479  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":461:466  owner */\n  0x0\n  dup1\n    /* \"contracts/Ownable.sol\":461:479  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Pausable.sol\":196:941  contract Pausable is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Pausable.sol\":196:941  contract Pausable is Ownable {... */\n      mstore(0x40, 0x60)\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x3f4ba83a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"contracts/Pausable.sol\":852:939  function unpause() onlyOwner whenPaused public {... */\n    tag_2:\n      jumpi(tag_7, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_7:\n      tag_8\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"contracts/Pausable.sol\":266:292  bool public paused = false */\n    tag_3:\n      jumpi(tag_10, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_10:\n      tag_11\n      jump(tag_12)\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pausable.sol\":685:770  function pause() onlyOwner whenNotPaused public {... */\n    tag_4:\n      jumpi(tag_13, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_13:\n      tag_14\n      jump(tag_15)\n    tag_14:\n      stop\n        /* \"contracts/Ownable.sol\":271:291  address public owner */\n    tag_5:\n      jumpi(tag_16, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_16:\n      tag_17\n      jump(tag_18)\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":821:968  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_6:\n      jumpi(tag_19, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_19:\n      tag_20\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_21)\n    tag_20:\n      stop\n        /* \"contracts/Pausable.sol\":852:939  function unpause() onlyOwner whenPaused public {... */\n    tag_9:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_23\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_23:\n        /* \"contracts/Pausable.sol\":587:593  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":579:594  require(paused) */\n      iszero\n      iszero\n      tag_25\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_25:\n        /* \"contracts/Pausable.sol\":914:919  false */\n      0x0\n        /* \"contracts/Pausable.sol\":905:911  paused */\n      dup1\n      0x14\n        /* \"contracts/Pausable.sol\":905:919  paused = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pausable.sol\":925:934  Unpause() */\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Pausable.sol\":852:939  function unpause() onlyOwner whenPaused public {... */\n      jump\t// out\n        /* \"contracts/Pausable.sol\":266:292  bool public paused = false */\n    tag_12:\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Pausable.sol\":685:770  function pause() onlyOwner whenNotPaused public {... */\n    tag_15:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_28\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_28:\n        /* \"contracts/Pausable.sol\":435:441  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":434:441  !paused */\n      iszero\n        /* \"contracts/Pausable.sol\":426:442  require(!paused) */\n      iszero\n      iszero\n      tag_30\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_30:\n        /* \"contracts/Pausable.sol\":748:752  true */\n      0x1\n        /* \"contracts/Pausable.sol\":739:745  paused */\n      0x0\n      0x14\n        /* \"contracts/Pausable.sol\":739:752  paused = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pausable.sol\":758:765  Pause() */\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Pausable.sol\":685:770  function pause() onlyOwner whenNotPaused public {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":271:291  address public owner */\n    tag_18:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Ownable.sol\":821:968  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_21:\n        /* \"contracts/Ownable.sol\":629:634  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":615:625  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":615:634  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":607:635  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_33\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_33:\n        /* \"contracts/Ownable.sol\":917:918  0 */\n      0x0\n        /* \"contracts/Ownable.sol\":897:919  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":897:905  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":897:919  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Ownable.sol\":893:962  if (newOwner != address(0)) {... */\n      iszero\n      tag_35\n      jumpi\n        /* \"contracts/Ownable.sol\":943:951  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":935:940  owner */\n      0x0\n      dup1\n        /* \"contracts/Ownable.sol\":935:951  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":893:962  if (newOwner != address(0)) {... */\n    tag_35:\n        /* \"contracts/Ownable.sol\":821:968  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820c6671fc6101a33d350474494c60d58d6ab8c7280ff1c12a0a8635a3a12d8ba970029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "606060405260008060146101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104058061006d6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633f4ba83a146100695780635c975abb1461007e5780638456cb59146100ab5780638da5cb5b146100c0578063f2fde38b1461011557600080fd5b341561007457600080fd5b61007c61014e565b005b341561008957600080fd5b61009161020c565b604051808215151515815260200191505060405180910390f35b34156100b657600080fd5b6100be61021f565b005b34156100cb57600080fd5b6100d36102df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561012057600080fd5b61014c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610304565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101a957600080fd5b600060149054906101000a900460ff1615156101c457600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561027a57600080fd5b600060149054906101000a900460ff1615151561029657600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561035f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156103d657806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a72305820c6671fc6101a33d350474494c60d58d6ab8c7280ff1c12a0a8635a3a12d8ba970029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x405 DUP1 PUSH2 0x6D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x69 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C PUSH2 0x14E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x21F JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x304 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3D6 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc6 PUSH8 0x1FC6101A33D35047 DIFFICULTY SWAP5 0xc6 0xd PC 0xd6 0xab DUP13 PUSH19 0x80FF1C12A0A8635A3A12D8BA97002900000000 ",
							"sourceMap": "196:745:6:-;;;287:5;266:26;;;;;;;;;;;;;;;;;;;;469:10:5;461:5;;:18;;;;;;;;;;;;;;;;;;196:745:6;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633f4ba83a146100695780635c975abb1461007e5780638456cb59146100ab5780638da5cb5b146100c0578063f2fde38b1461011557600080fd5b341561007457600080fd5b61007c61014e565b005b341561008957600080fd5b61009161020c565b604051808215151515815260200191505060405180910390f35b34156100b657600080fd5b6100be61021f565b005b34156100cb57600080fd5b6100d36102df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561012057600080fd5b61014c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610304565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101a957600080fd5b600060149054906101000a900460ff1615156101c457600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561027a57600080fd5b600060149054906101000a900460ff1615151561029657600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561035f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156103d657806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a72305820c6671fc6101a33d350474494c60d58d6ab8c7280ff1c12a0a8635a3a12d8ba970029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x69 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C PUSH2 0x14E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x21F JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x304 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3D6 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc6 PUSH8 0x1FC6101A33D35047 DIFFICULTY SWAP5 0xc6 0xd PC 0xd6 0xab DUP13 PUSH19 0x80FF1C12A0A8635A3A12D8BA97002900000000 ",
							"sourceMap": "196:745:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;852:87;;;;;;;;;;;;;;266:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:85;;;;;;;;;;;;;;271:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;821:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;852:87:6;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;587:6:6;;;;;;;;;;;579:15;;;;;;;;914:5;905:6;;:14;;;;;;;;;;;;;;;;;;925:9;;;;;;;;;;852:87::o;266:26::-;;;;;;;;;;;;;:::o;685:85::-;629:5:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;435:6:6;;;;;;;;;;;434:7;426:16;;;;;;;;748:4;739:6;;:13;;;;;;;;;;;;;;;;;;758:7;;;;;;;;;;685:85::o;271:20:5:-;;;;;;;;;;;;;:::o;821:147::-;629:5;;;;;;;;;;;615:19;;:10;:19;;;607:28;;;;;;;;917:1;897:22;;:8;:22;;;;893:69;;;943:8;935:5;;:16;;;;;;;;;;;;;;;;;;893:69;821:147;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "205800",
								"executionCost": "40810",
								"totalCost": "246610"
							},
							"external": {
								"owner()": "479",
								"pause()": "21833",
								"paused()": "485",
								"transferOwnership(address)": "20821",
								"unpause()": "21786"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 196,
									"end": 941,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 196,
									"end": 941,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 196,
									"end": 941,
									"name": "MSTORE"
								},
								{
									"begin": 287,
									"end": 292,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "DUP1"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "EXP"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "DUP2"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "SLOAD"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "DUP2"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "MUL"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "NOT"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "AND"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "SWAP1"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "DUP4"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "ISZERO"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "ISZERO"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "MUL"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "OR"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "SWAP1"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "SSTORE"
								},
								{
									"begin": 266,
									"end": 292,
									"name": "POP"
								},
								{
									"begin": 469,
									"end": 479,
									"name": "CALLER"
								},
								{
									"begin": 461,
									"end": 466,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 461,
									"end": 466,
									"name": "DUP1"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "EXP"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "DUP2"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SLOAD"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "DUP2"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "MUL"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "NOT"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "AND"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SWAP1"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "DUP4"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "AND"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "MUL"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "OR"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SWAP1"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "SSTORE"
								},
								{
									"begin": 461,
									"end": 479,
									"name": "POP"
								},
								{
									"begin": 196,
									"end": 941,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 196,
									"end": 941,
									"name": "DUP1"
								},
								{
									"begin": 196,
									"end": 941,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 196,
									"end": 941,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 196,
									"end": 941,
									"name": "CODECOPY"
								},
								{
									"begin": 196,
									"end": 941,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 196,
									"end": 941,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820c6671fc6101a33d350474494c60d58d6ab8c7280ff1c12a0a8635a3a12d8ba970029",
									".code": [
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "MSTORE"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "DIV"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "AND"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "3F4BA83A"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "EQ"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "JUMPI"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "5C975ABB"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "EQ"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "JUMPI"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "8456CB59"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "EQ"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "JUMPI"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "EQ"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "JUMPI"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "EQ"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "JUMPI"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 941,
											"name": "REVERT"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "CALLVALUE"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "ISZERO"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPI"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "DUP1"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "REVERT"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMP"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "STOP"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "CALLVALUE"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPI"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "REVERT"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMP"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "RETURN"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "CALLVALUE"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "ISZERO"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPI"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "DUP1"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "REVERT"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMP"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "STOP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "CALLVALUE"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "ISZERO"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPI"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "REVERT"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP3"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MSTORE"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "ADD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SUB"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "RETURN"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "CALLVALUE"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "ISZERO"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPI"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "REVERT"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "AND"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "ADD"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP2"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "STOP"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "SLOAD"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "EXP"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "SWAP1"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "DIV"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 587,
											"end": 593,
											"name": "AND"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "ISZERO"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "ISZERO"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "JUMPI"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "REVERT"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "JUMPDEST"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 905,
											"end": 911,
											"name": "DUP1"
										},
										{
											"begin": 905,
											"end": 911,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "EXP"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "DUP2"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "SLOAD"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "DUP2"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "MUL"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "NOT"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "AND"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "DUP4"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "ISZERO"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "ISZERO"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "MUL"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "OR"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "SSTORE"
										},
										{
											"begin": 905,
											"end": 919,
											"name": "POP"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "PUSH",
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "MLOAD"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "MLOAD"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "DUP1"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "SWAP2"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "SUB"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "SWAP1"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "LOG1"
										},
										{
											"begin": 852,
											"end": 939,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SLOAD"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "EXP"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DIV"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "AND"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 292,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SLOAD"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "EXP"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "DIV"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "AND"
										},
										{
											"begin": 434,
											"end": 441,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "JUMPI"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP1"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "REVERT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "JUMPDEST"
										},
										{
											"begin": 748,
											"end": 752,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 739,
											"end": 745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 739,
											"end": 745,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "EXP"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "DUP2"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "SLOAD"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "DUP2"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "MUL"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "NOT"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "AND"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "SWAP1"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "DUP4"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "ISZERO"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "ISZERO"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "MUL"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "OR"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "SWAP1"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "SSTORE"
										},
										{
											"begin": 739,
											"end": 752,
											"name": "POP"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "PUSH",
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "MLOAD"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "MLOAD"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "DUP1"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "SWAP2"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "SUB"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "SWAP1"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "LOG1"
										},
										{
											"begin": 685,
											"end": 770,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SLOAD"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "EXP"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DIV"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 291,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 625,
											"name": "CALLER"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 917,
											"end": 918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "AND"
										},
										{
											"begin": 897,
											"end": 905,
											"name": "DUP2"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "AND"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "EQ"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "ISZERO"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "ISZERO"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "JUMPI"
										},
										{
											"begin": 943,
											"end": 951,
											"name": "DUP1"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "EXP"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SLOAD"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "MUL"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "NOT"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "AND"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "DUP4"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "AND"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "MUL"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "OR"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "SSTORE"
										},
										{
											"begin": 935,
											"end": 951,
											"name": "POP"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 893,
											"end": 962,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 968,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Pausable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Pausable.sol\":\"Pausable\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xd8ff01a131dd831a1928520837f7746f3413cc988cbcc9d417dfa25d5a49b845\",\"urls\":[\"bzzr://ebe1a444b59337e6095a07de0059fa74a9f77c6ce74162d132640fcc95961a21\"]},\"contracts/Pausable.sol\":{\"keccak256\":\"0x65bddf7b56a18baa300d9b47c834e63f5a93cbfa512b4350018eb70ed21b04c9\",\"urls\":[\"bzzr://b7c533c5f29443c7ac2add40a51fb82d623bb7f19bde95c8a13f8518326cc190\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "SafeMath"
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeMath.sol\":148:938  library SafeMath {... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeMath.sol\":148:938  library SafeMath {... */\n      mstore(0x40, 0x60)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a7230582060773a2049b6023c04ffa6a604501ad97450b24804458b0b1899c69f998106e50029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a7230582060773a2049b6023c04ffa6a604501ad97450b24804458b0b1899c69f998106e50029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x1B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH1 0x77 GASPRICE KECCAK256 0x49 0xb6 MUL EXTCODECOPY DIV SELFDESTRUCT 0xa6 0xa6 DIV POP BYTE 0xd9 PUSH21 0x50B24804458B0B1899C69F998106E5002900000000 ",
							"sourceMap": "148:790:7:-;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052600080fd00a165627a7a7230582060773a2049b6023c04ffa6a604501ad97450b24804458b0b1899c69f998106e50029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH1 0x77 GASPRICE KECCAK256 0x49 0xb6 MUL EXTCODECOPY DIV SELFDESTRUCT 0xa6 0xa6 DIV POP BYTE 0xd9 PUSH21 0x50B24804458B0B1899C69F998106E5002900000000 ",
							"sourceMap": "148:790:7:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "61",
								"totalCost": "10661"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 148,
									"end": 938,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "MSTORE"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "CALLVALUE"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "ISZERO"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "JUMPI"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "DUP1"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "REVERT"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "JUMPDEST"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "DUP1"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "CODECOPY"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 148,
									"end": 938,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582060773a2049b6023c04ffa6a604501ad97450b24804458b0b1899c69f998106e50029",
									".code": [
										{
											"begin": 148,
											"end": 938,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 148,
											"end": 938,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 148,
											"end": 938,
											"name": "MSTORE"
										},
										{
											"begin": 148,
											"end": 938,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 148,
											"end": 938,
											"name": "DUP1"
										},
										{
											"begin": 148,
											"end": 938,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/SafeMath.sol\":\"SafeMath\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeMath.sol\":{\"keccak256\":\"0xbf8b5c77e4288c9d77aa5d186ccb9ebce8d66aee043166416a743e88ac605cf5\",\"urls\":[\"bzzr://56a16e47ba4f5bdc8e02d8966b571f7e5055ebcabadaee9876948229d610fb62\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/StandardToken.sol": {
				"StandardToken": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens than an owner allowed to a spender.",
								"params": {
									"_owner": "address The address which owns the funds.",
									"_spender": "address The address which will spend the funds."
								},
								"return": "A uint specifying the amount of tokens still available for the spender."
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.",
								"params": {
									"_spender": "The address which will spend the funds.",
									"_value": "The amount of tokens to be spent."
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint representing the amount owned by the passed address."
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another",
								"params": {
									"_from": "address The address which you want to send tokens from",
									"_to": "address The address which you want to transfer to",
									"_value": "uint the amount of tokens to be transferred"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						},
						"title": "Standard ERC20 token"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/UpgradedStandardToken.sol": {
				"UpgradedStandardToken": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens than an owner allowed to a spender.",
								"params": {
									"_owner": "address The address which owns the funds.",
									"_spender": "address The address which will spend the funds."
								},
								"return": "A uint specifying the amount of tokens still available for the spender."
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.",
								"params": {
									"_spender": "The address which will spend the funds.",
									"_value": "The amount of tokens to be spent."
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint representing the amount owned by the passed address."
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another",
								"params": {
									"_from": "address The address which you want to send tokens from",
									"_to": "address The address which you want to transfer to",
									"_value": "uint the amount of tokens to be transferred"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"approveByLegacy(address,address,uint256)": "aee92d33",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferByLegacy(address,address,uint256)": "6e18980a",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromByLegacy(address,address,address,uint256)": "8b477adb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/BasicToken.sol": {
				"ast": {
					"absolutePath": "contracts/BasicToken.sol",
					"exportedSymbols": {
						"BasicToken": [
							141
						]
					},
					"id": 142,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 142,
							"sourceUnit": 774,
							"src": "58:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ERC20Basic.sol",
							"file": "./ERC20Basic.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 142,
							"sourceUnit": 730,
							"src": "82:26:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 142,
							"sourceUnit": 932,
							"src": "109:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 5,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 773,
										"src": "248:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$773",
											"typeString": "contract Ownable"
										}
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "248:7:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 7,
										"name": "ERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 729,
										"src": "257:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$729",
											"typeString": "contract ERC20Basic"
										}
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "257:10:0"
								}
							],
							"contractDependencies": [
								729,
								773
							],
							"contractKind": "contract",
							"documentation": "@title Basic token\n@dev Basic version of StandardToken, with no allowances.",
							"fullyImplemented": false,
							"id": 141,
							"linearizedBaseContracts": [
								141,
								729,
								773
							],
							"name": "BasicToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 11,
									"libraryName": {
										"contractScope": null,
										"id": 9,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 931,
										"src": "280:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$931",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "274:24:0",
									"typeName": {
										"id": 10,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "293:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 15,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 141,
									"src": "304:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "312:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "304:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 13,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "323:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 18,
									"name": "basisPointsRate",
									"nodeType": "VariableDeclaration",
									"scope": 141,
									"src": "429:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 16,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "429:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 17,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "459:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 21,
									"name": "maximumFee",
									"nodeType": "VariableDeclaration",
									"scope": 141,
									"src": "466:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 19,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "466:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 20,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "491:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "601:66:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "619:29:0",
															"subExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 32,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 26,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1172,
																					"src": "621:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 27,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "data",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "621:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_calldata_ptr",
																					"typeString": "bytes calldata"
																				}
																			},
																			"id": 28,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "621:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 31,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 29,
																				"name": "size",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 23,
																				"src": "639:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "34",
																				"id": 30,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "646:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "639:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "621:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 33,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "620:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "611:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "611:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "611:38:0"
											},
											{
												"id": 37,
												"nodeType": "PlaceholderStatement",
												"src": "659:1:0"
											}
										]
									},
									"id": 39,
									"name": "onlyPayloadSize",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"name": "size",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "590:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "590:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "589:11:0"
									},
									"src": "565:102:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "884:485:0",
										"statements": [
											{
												"assignments": [
													47
												],
												"declarations": [
													{
														"constant": false,
														"id": 47,
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 128,
														"src": "894:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 46,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "894:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 56,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "939:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 50,
																			"name": "basisPointsRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 18,
																			"src": "917:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 48,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 43,
																			"src": "906:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 868,
																		"src": "906:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 51,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "906:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 52,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "905:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 886,
														"src": "905:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "905:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "894:51:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 57,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "959:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 58,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "965:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "959:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 65,
												"nodeType": "IfStatement",
												"src": "955:63:0",
												"trueBody": {
													"id": 64,
													"nodeType": "Block",
													"src": "977:41:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 60,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "991:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 61,
																	"name": "maximumFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "997:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "991:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 63,
															"nodeType": "ExpressionStatement",
															"src": "991:16:0"
														}
													]
												}
											},
											{
												"assignments": [
													67
												],
												"declarations": [
													{
														"constant": false,
														"id": 67,
														"name": "sendAmount",
														"nodeType": "VariableDeclaration",
														"scope": 128,
														"src": "1027:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 66,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1027:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 72,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 70,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "1056:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 68,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "1045:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 906,
														"src": "1045:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1045:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1027:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 73,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1070:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 76,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 74,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "1079:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1079:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1070:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 82,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "1118:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 77,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "1093:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 80,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 78,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1172,
																		"src": "1102:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1102:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1093:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 906,
															"src": "1093:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1093:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1070:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1070:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 86,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1135:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 88,
														"indexExpression": {
															"argumentTypes": null,
															"id": 87,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1144:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1135:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 93,
																"name": "sendAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1169:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 89,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "1151:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 91,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 90,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "1160:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1151:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 930,
															"src": "1151:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1151:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1135:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "1135:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 97,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1194:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1200:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 119,
												"nodeType": "IfStatement",
												"src": "1190:126:0",
												"trueBody": {
													"id": 118,
													"nodeType": "Block",
													"src": "1203:113:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 100,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "1217:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 102,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 101,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 733,
																		"src": "1226:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1217:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 107,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 47,
																			"src": "1255:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 103,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 15,
																				"src": "1235:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 105,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 104,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 733,
																				"src": "1244:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1235:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 930,
																		"src": "1235:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1235:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1217:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 110,
															"nodeType": "ExpressionStatement",
															"src": "1217:42:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 112,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "1282:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1282:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 114,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 733,
																		"src": "1294:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 115,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "1301:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 111,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "1273:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1273:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 117,
															"nodeType": "ExpressionStatement",
															"src": "1273:32:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 121,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "1334:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1334:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 123,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1346:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 124,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1351:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 120,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "1325:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1325:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "1325:37:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "851:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "864:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "864:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "850:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "884:0:0"
									},
									"scope": 141,
									"src": "833:536:0",
									"stateMutability": "nonpayable",
									"superFunction": 720,
									"visibility": "public"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1654:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 135,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1671:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 137,
													"indexExpression": {
														"argumentTypes": null,
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1680:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1671:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 134,
												"id": 138,
												"nodeType": "Return",
												"src": "1664:23:0"
											}
										]
									},
									"id": 140,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1599:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1598:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1640:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1640:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1639:14:0"
									},
									"scope": 141,
									"src": "1580:114:0",
									"stateMutability": "view",
									"superFunction": 713,
									"visibility": "public"
								}
							],
							"scope": 142,
							"src": "225:1472:0"
						}
					],
					"src": "32:1666:0"
				},
				"id": 0,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/BasicToken.sol",
						"exportedSymbols": {
							"BasicToken": [
								141
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 1,
							"name": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"attributes": {
								"SourceUnit": 774,
								"absolutePath": "contracts/Ownable.sol",
								"file": "./Ownable.sol",
								"scope": 142,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 2,
							"name": "ImportDirective",
							"src": "58:23:0"
						},
						{
							"attributes": {
								"SourceUnit": 730,
								"absolutePath": "contracts/ERC20Basic.sol",
								"file": "./ERC20Basic.sol",
								"scope": 142,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 3,
							"name": "ImportDirective",
							"src": "82:26:0"
						},
						{
							"attributes": {
								"SourceUnit": 932,
								"absolutePath": "contracts/SafeMath.sol",
								"file": "./SafeMath.sol",
								"scope": 142,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 4,
							"name": "ImportDirective",
							"src": "109:24:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									729,
									773
								],
								"contractKind": "contract",
								"documentation": "@title Basic token\n@dev Basic version of StandardToken, with no allowances.",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									141,
									729,
									773
								],
								"name": "BasicToken",
								"scope": 142
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 773,
												"type": "contract Ownable"
											},
											"id": 5,
											"name": "UserDefinedTypeName",
											"src": "248:7:0"
										}
									],
									"id": 6,
									"name": "InheritanceSpecifier",
									"src": "248:7:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "ERC20Basic",
												"referencedDeclaration": 729,
												"type": "contract ERC20Basic"
											},
											"id": 7,
											"name": "UserDefinedTypeName",
											"src": "257:10:0"
										}
									],
									"id": 8,
									"name": "InheritanceSpecifier",
									"src": "257:10:0"
								},
								{
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "SafeMath",
												"referencedDeclaration": 931,
												"type": "library SafeMath"
											},
											"id": 9,
											"name": "UserDefinedTypeName",
											"src": "280:8:0"
										},
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 10,
											"name": "ElementaryTypeName",
											"src": "293:4:0"
										}
									],
									"id": 11,
									"name": "UsingForDirective",
									"src": "274:24:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "balances",
										"scope": 141,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => uint256)",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => uint256)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 12,
													"name": "ElementaryTypeName",
													"src": "312:7:0"
												},
												{
													"attributes": {
														"name": "uint",
														"type": "uint256"
													},
													"id": 13,
													"name": "ElementaryTypeName",
													"src": "323:4:0"
												}
											],
											"id": 14,
											"name": "Mapping",
											"src": "304:24:0"
										}
									],
									"id": 15,
									"name": "VariableDeclaration",
									"src": "304:40:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "basisPointsRate",
										"scope": 141,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 16,
											"name": "ElementaryTypeName",
											"src": "429:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "30",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "number",
												"type": "int_const 0",
												"value": "0"
											},
											"id": 17,
											"name": "Literal",
											"src": "459:1:0"
										}
									],
									"id": 18,
									"name": "VariableDeclaration",
									"src": "429:31:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "maximumFee",
										"scope": 141,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 19,
											"name": "ElementaryTypeName",
											"src": "466:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "30",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "number",
												"type": "int_const 0",
												"value": "0"
											},
											"id": 20,
											"name": "Literal",
											"src": "491:1:0"
										}
									],
									"id": 21,
									"name": "VariableDeclaration",
									"src": "466:26:0"
								},
								{
									"attributes": {
										"name": "onlyPayloadSize",
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "size",
														"scope": 39,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 22,
															"name": "ElementaryTypeName",
															"src": "590:4:0"
														}
													],
													"id": 23,
													"name": "VariableDeclaration",
													"src": "590:9:0"
												}
											],
											"id": 24,
											"name": "ParameterList",
											"src": "589:11:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1190,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 25,
																	"name": "Identifier",
																	"src": "611:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "<",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "length",
																								"referencedDeclaration": null,
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "data",
																										"referencedDeclaration": null,
																										"type": "bytes calldata"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 1172,
																												"type": "msg",
																												"value": "msg"
																											},
																											"id": 26,
																											"name": "Identifier",
																											"src": "621:3:0"
																										}
																									],
																									"id": 27,
																									"name": "MemberAccess",
																									"src": "621:8:0"
																								}
																							],
																							"id": 28,
																							"name": "MemberAccess",
																							"src": "621:15:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"operator": "+",
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 23,
																										"type": "uint256",
																										"value": "size"
																									},
																									"id": 29,
																									"name": "Identifier",
																									"src": "639:4:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"hexvalue": "34",
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"subdenomination": null,
																										"token": "number",
																										"type": "int_const 4",
																										"value": "4"
																									},
																									"id": 30,
																									"name": "Literal",
																									"src": "646:1:0"
																								}
																							],
																							"id": 31,
																							"name": "BinaryOperation",
																							"src": "639:8:0"
																						}
																					],
																					"id": 32,
																					"name": "BinaryOperation",
																					"src": "621:26:0"
																				}
																			],
																			"id": 33,
																			"name": "TupleExpression",
																			"src": "620:28:0"
																		}
																	],
																	"id": 34,
																	"name": "UnaryOperation",
																	"src": "619:29:0"
																}
															],
															"id": 35,
															"name": "FunctionCall",
															"src": "611:38:0"
														}
													],
													"id": 36,
													"name": "ExpressionStatement",
													"src": "611:38:0"
												},
												{
													"id": 37,
													"name": "PlaceholderStatement",
													"src": "659:1:0"
												}
											],
											"id": 38,
											"name": "Block",
											"src": "601:66:0"
										}
									],
									"id": 39,
									"name": "ModifierDefinition",
									"src": "565:102:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transfer",
										"payable": false,
										"scope": 141,
										"stateMutability": "nonpayable",
										"superFunction": 720,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 128,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 40,
															"name": "ElementaryTypeName",
															"src": "851:7:0"
														}
													],
													"id": 41,
													"name": "VariableDeclaration",
													"src": "851:11:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 128,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 42,
															"name": "ElementaryTypeName",
															"src": "864:4:0"
														}
													],
													"id": 43,
													"name": "VariableDeclaration",
													"src": "864:11:0"
												}
											],
											"id": 44,
											"name": "ParameterList",
											"src": "850:26:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 45,
											"name": "ParameterList",
											"src": "884:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															47
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "fee",
																"scope": 128,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 46,
																	"name": "ElementaryTypeName",
																	"src": "894:4:0"
																}
															],
															"id": 47,
															"name": "VariableDeclaration",
															"src": "894:8:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "div",
																		"referencedDeclaration": 886,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "mul",
																								"referencedDeclaration": 868,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 43,
																										"type": "uint256",
																										"value": "_value"
																									},
																									"id": 48,
																									"name": "Identifier",
																									"src": "906:6:0"
																								}
																							],
																							"id": 49,
																							"name": "MemberAccess",
																							"src": "906:10:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 18,
																								"type": "uint256",
																								"value": "basisPointsRate"
																							},
																							"id": 50,
																							"name": "Identifier",
																							"src": "917:15:0"
																						}
																					],
																					"id": 51,
																					"name": "FunctionCall",
																					"src": "906:27:0"
																				}
																			],
																			"id": 52,
																			"name": "TupleExpression",
																			"src": "905:29:0"
																		}
																	],
																	"id": 53,
																	"name": "MemberAccess",
																	"src": "905:33:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "3130303030",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 10000",
																		"value": "10000"
																	},
																	"id": 54,
																	"name": "Literal",
																	"src": "939:5:0"
																}
															],
															"id": 55,
															"name": "FunctionCall",
															"src": "905:40:0"
														}
													],
													"id": 56,
													"name": "VariableDeclarationStatement",
													"src": "894:51:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 47,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 57,
																	"name": "Identifier",
																	"src": "959:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 21,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 58,
																	"name": "Identifier",
																	"src": "965:10:0"
																}
															],
															"id": 59,
															"name": "BinaryOperation",
															"src": "959:16:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 47,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 60,
																					"name": "Identifier",
																					"src": "991:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 21,
																						"type": "uint256",
																						"value": "maximumFee"
																					},
																					"id": 61,
																					"name": "Identifier",
																					"src": "997:10:0"
																				}
																			],
																			"id": 62,
																			"name": "Assignment",
																			"src": "991:16:0"
																		}
																	],
																	"id": 63,
																	"name": "ExpressionStatement",
																	"src": "991:16:0"
																}
															],
															"id": 64,
															"name": "Block",
															"src": "977:41:0"
														}
													],
													"id": 65,
													"name": "IfStatement",
													"src": "955:63:0"
												},
												{
													"attributes": {
														"assignments": [
															67
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "sendAmount",
																"scope": 128,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 66,
																	"name": "ElementaryTypeName",
																	"src": "1027:4:0"
																}
															],
															"id": 67,
															"name": "VariableDeclaration",
															"src": "1027:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sub",
																		"referencedDeclaration": 906,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 43,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 68,
																			"name": "Identifier",
																			"src": "1045:6:0"
																		}
																	],
																	"id": 69,
																	"name": "MemberAccess",
																	"src": "1045:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 47,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 70,
																	"name": "Identifier",
																	"src": "1056:3:0"
																}
															],
															"id": 71,
															"name": "FunctionCall",
															"src": "1045:15:0"
														}
													],
													"id": 72,
													"name": "VariableDeclarationStatement",
													"src": "1027:33:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 15,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 73,
																			"name": "Identifier",
																			"src": "1070:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1172,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 74,
																					"name": "Identifier",
																					"src": "1079:3:0"
																				}
																			],
																			"id": 75,
																			"name": "MemberAccess",
																			"src": "1079:10:0"
																		}
																	],
																	"id": 76,
																	"name": "IndexAccess",
																	"src": "1070:20:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sub",
																				"referencedDeclaration": 906,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 15,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 77,
																							"name": "Identifier",
																							"src": "1093:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1172,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 78,
																									"name": "Identifier",
																									"src": "1102:3:0"
																								}
																							],
																							"id": 79,
																							"name": "MemberAccess",
																							"src": "1102:10:0"
																						}
																					],
																					"id": 80,
																					"name": "IndexAccess",
																					"src": "1093:20:0"
																				}
																			],
																			"id": 81,
																			"name": "MemberAccess",
																			"src": "1093:24:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 43,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 82,
																			"name": "Identifier",
																			"src": "1118:6:0"
																		}
																	],
																	"id": 83,
																	"name": "FunctionCall",
																	"src": "1093:32:0"
																}
															],
															"id": 84,
															"name": "Assignment",
															"src": "1070:55:0"
														}
													],
													"id": 85,
													"name": "ExpressionStatement",
													"src": "1070:55:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 15,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 86,
																			"name": "Identifier",
																			"src": "1135:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 41,
																				"type": "address",
																				"value": "_to"
																			},
																			"id": 87,
																			"name": "Identifier",
																			"src": "1144:3:0"
																		}
																	],
																	"id": 88,
																	"name": "IndexAccess",
																	"src": "1135:13:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "add",
																				"referencedDeclaration": 930,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 15,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 89,
																							"name": "Identifier",
																							"src": "1151:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 41,
																								"type": "address",
																								"value": "_to"
																							},
																							"id": 90,
																							"name": "Identifier",
																							"src": "1160:3:0"
																						}
																					],
																					"id": 91,
																					"name": "IndexAccess",
																					"src": "1151:13:0"
																				}
																			],
																			"id": 92,
																			"name": "MemberAccess",
																			"src": "1151:17:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 67,
																				"type": "uint256",
																				"value": "sendAmount"
																			},
																			"id": 93,
																			"name": "Identifier",
																			"src": "1169:10:0"
																		}
																	],
																	"id": 94,
																	"name": "FunctionCall",
																	"src": "1151:29:0"
																}
															],
															"id": 95,
															"name": "Assignment",
															"src": "1135:45:0"
														}
													],
													"id": 96,
													"name": "ExpressionStatement",
													"src": "1135:45:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 47,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 97,
																	"name": "Identifier",
																	"src": "1194:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 98,
																	"name": "Literal",
																	"src": "1200:1:0"
																}
															],
															"id": 99,
															"name": "BinaryOperation",
															"src": "1194:7:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 15,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 100,
																							"name": "Identifier",
																							"src": "1217:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 733,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 101,
																							"name": "Identifier",
																							"src": "1226:5:0"
																						}
																					],
																					"id": 102,
																					"name": "IndexAccess",
																					"src": "1217:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "add",
																								"referencedDeclaration": 930,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 15,
																												"type": "mapping(address => uint256)",
																												"value": "balances"
																											},
																											"id": 103,
																											"name": "Identifier",
																											"src": "1235:8:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 733,
																												"type": "address",
																												"value": "owner"
																											},
																											"id": 104,
																											"name": "Identifier",
																											"src": "1244:5:0"
																										}
																									],
																									"id": 105,
																									"name": "IndexAccess",
																									"src": "1235:15:0"
																								}
																							],
																							"id": 106,
																							"name": "MemberAccess",
																							"src": "1235:19:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 47,
																								"type": "uint256",
																								"value": "fee"
																							},
																							"id": 107,
																							"name": "Identifier",
																							"src": "1255:3:0"
																						}
																					],
																					"id": 108,
																					"name": "FunctionCall",
																					"src": "1235:24:0"
																				}
																			],
																			"id": 109,
																			"name": "Assignment",
																			"src": "1217:42:0"
																		}
																	],
																	"id": 110,
																	"name": "ExpressionStatement",
																	"src": "1217:42:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 728,
																						"type": "function (address,address,uint256)",
																						"value": "Transfer"
																					},
																					"id": 111,
																					"name": "Identifier",
																					"src": "1273:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1172,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 112,
																							"name": "Identifier",
																							"src": "1282:3:0"
																						}
																					],
																					"id": 113,
																					"name": "MemberAccess",
																					"src": "1282:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 733,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 114,
																					"name": "Identifier",
																					"src": "1294:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 47,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 115,
																					"name": "Identifier",
																					"src": "1301:3:0"
																				}
																			],
																			"id": 116,
																			"name": "FunctionCall",
																			"src": "1273:32:0"
																		}
																	],
																	"id": 117,
																	"name": "ExpressionStatement",
																	"src": "1273:32:0"
																}
															],
															"id": 118,
															"name": "Block",
															"src": "1203:113:0"
														}
													],
													"id": 119,
													"name": "IfStatement",
													"src": "1190:126:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 728,
																		"type": "function (address,address,uint256)",
																		"value": "Transfer"
																	},
																	"id": 120,
																	"name": "Identifier",
																	"src": "1325:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1172,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 121,
																			"name": "Identifier",
																			"src": "1334:3:0"
																		}
																	],
																	"id": 122,
																	"name": "MemberAccess",
																	"src": "1334:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 41,
																		"type": "address",
																		"value": "_to"
																	},
																	"id": 123,
																	"name": "Identifier",
																	"src": "1346:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 67,
																		"type": "uint256",
																		"value": "sendAmount"
																	},
																	"id": 124,
																	"name": "Identifier",
																	"src": "1351:10:0"
																}
															],
															"id": 125,
															"name": "FunctionCall",
															"src": "1325:37:0"
														}
													],
													"id": 126,
													"name": "ExpressionStatement",
													"src": "1325:37:0"
												}
											],
											"id": 127,
											"name": "Block",
											"src": "884:485:0"
										}
									],
									"id": 128,
									"name": "FunctionDefinition",
									"src": "833:536:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "balanceOf",
										"payable": false,
										"scope": 141,
										"stateMutability": "view",
										"superFunction": 713,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 140,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 129,
															"name": "ElementaryTypeName",
															"src": "1599:7:0"
														}
													],
													"id": 130,
													"name": "VariableDeclaration",
													"src": "1599:14:0"
												}
											],
											"id": 131,
											"name": "ParameterList",
											"src": "1598:16:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "balance",
														"scope": 140,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 132,
															"name": "ElementaryTypeName",
															"src": "1640:4:0"
														}
													],
													"id": 133,
													"name": "VariableDeclaration",
													"src": "1640:12:0"
												}
											],
											"id": 134,
											"name": "ParameterList",
											"src": "1639:14:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 134
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 15,
																		"type": "mapping(address => uint256)",
																		"value": "balances"
																	},
																	"id": 135,
																	"name": "Identifier",
																	"src": "1671:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 130,
																		"type": "address",
																		"value": "_owner"
																	},
																	"id": 136,
																	"name": "Identifier",
																	"src": "1680:6:0"
																}
															],
															"id": 137,
															"name": "IndexAccess",
															"src": "1671:16:0"
														}
													],
													"id": 138,
													"name": "Return",
													"src": "1664:23:0"
												}
											],
											"id": 139,
											"name": "Block",
											"src": "1654:40:0"
										}
									],
									"id": 140,
									"name": "FunctionDefinition",
									"src": "1580:114:0"
								}
							],
							"id": 141,
							"name": "ContractDefinition",
							"src": "225:1472:0"
						}
					],
					"id": 142,
					"name": "SourceUnit",
					"src": "32:1666:0"
				}
			},
			"contracts/Blacklist.sol": {
				"ast": {
					"absolutePath": "contracts/Blacklist.sol",
					"exportedSymbols": {
						"BlackList": [
							259
						]
					},
					"id": 260,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 143,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 144,
							"nodeType": "ImportDirective",
							"scope": 260,
							"sourceUnit": 774,
							"src": "58:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/BasicToken.sol",
							"file": "./BasicToken.sol",
							"id": 145,
							"nodeType": "ImportDirective",
							"scope": 260,
							"sourceUnit": 142,
							"src": "82:26:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 146,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 773,
										"src": "132:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$773",
											"typeString": "contract Ownable"
										}
									},
									"id": 147,
									"nodeType": "InheritanceSpecifier",
									"src": "132:7:1"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 148,
										"name": "BasicToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 141,
										"src": "141:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BasicToken_$141",
											"typeString": "contract BasicToken"
										}
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "141:10:1"
								}
							],
							"contractDependencies": [
								729,
								773,
								141
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 259,
							"linearizedBaseContracts": [
								259,
								141,
								729,
								773
							],
							"name": "BlackList",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "355:45:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 156,
														"name": "isBlackListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "372:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 158,
													"indexExpression": {
														"argumentTypes": null,
														"id": 157,
														"name": "_maker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "386:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "372:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 155,
												"id": 159,
												"nodeType": "Return",
												"src": "365:28:1"
											}
										]
									},
									"id": 161,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getBlackListStatus",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"name": "_maker",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "306:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "305:16:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "349:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "349:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "348:6:1"
									},
									"scope": 259,
									"src": "278:122:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "462:29:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 166,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 733,
													"src": "479:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 165,
												"id": 167,
												"nodeType": "Return",
												"src": "472:12:1"
											}
										]
									},
									"id": 169,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "453:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "452:9:1"
									},
									"scope": 259,
									"src": "406:85:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"constant": false,
									"id": 173,
									"name": "isBlackListed",
									"nodeType": "VariableDeclaration",
									"scope": 259,
									"src": "497:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 172,
										"keyType": {
											"id": 170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "506:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "497:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 171,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "517:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "613:83:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 180,
															"name": "isBlackListed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "623:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 182,
														"indexExpression": {
															"argumentTypes": null,
															"id": 181,
															"name": "_evilUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "637:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "623:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "650:4:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "623:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "623:31:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 187,
															"name": "_evilUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "679:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 186,
														"name": "AddedBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "664:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "664:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "664:25:1"
											}
										]
									},
									"id": 191,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 178,
											"modifierName": {
												"argumentTypes": null,
												"id": 177,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 753,
												"src": "603:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "603:9:1"
										}
									],
									"name": "addBlackList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"name": "_evilUser",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "577:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "576:19:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "613:0:1"
									},
									"scope": 259,
									"src": "554:142:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "767:92:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 198,
															"name": "isBlackListed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "777:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 200,
														"indexExpression": {
															"argumentTypes": null,
															"id": 199,
															"name": "_clearedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "791:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "777:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "807:5:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "777:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "777:35:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 205,
															"name": "_clearedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "839:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 204,
														"name": "RemovedBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "822:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "822:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "822:30:1"
											}
										]
									},
									"id": 209,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 196,
											"modifierName": {
												"argumentTypes": null,
												"id": 195,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 753,
												"src": "757:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "757:9:1"
										}
									],
									"name": "removeBlackList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"name": "_clearedUser",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "728:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:22:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "767:0:1"
									},
									"scope": 259,
									"src": "702:157:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "936:247:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 217,
																"name": "isBlackListed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "954:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 219,
															"indexExpression": {
																"argumentTypes": null,
																"id": 218,
																"name": "_blackListedUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "968:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "954:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "946:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "946:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "946:40:1"
											},
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"name": "dirtyFunds",
														"nodeType": "VariableDeclaration",
														"scope": 244,
														"src": "996:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 222,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "996:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "1024:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 224,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															140
														],
														"referencedDeclaration": 140,
														"src": "1014:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1014:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "996:45:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 228,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1051:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 230,
														"indexExpression": {
															"argumentTypes": null,
															"id": 229,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "1060:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1051:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1080:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1051:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "1051:30:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 234,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "1091:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 235,
														"name": "dirtyFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "1107:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1091:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1091:26:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 239,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "1147:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 240,
															"name": "dirtyFunds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "1165:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 238,
														"name": "DestroyedBlackFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "1127:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1127:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "1127:49:1"
											}
										]
									},
									"id": 244,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 214,
											"modifierName": {
												"argumentTypes": null,
												"id": 213,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 753,
												"src": "926:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "926:9:1"
										}
									],
									"name": "destroyBlackFunds",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"name": "_blackListedUser",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "893:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "892:26:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "936:0:1"
									},
									"scope": 259,
									"src": "865:318:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 250,
									"name": "DestroyedBlackFunds",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"indexed": false,
												"name": "_blackListedUser",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1215:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"indexed": false,
												"name": "_balance",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1241:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1241:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1214:41:1"
									},
									"src": "1189:67:1"
								},
								{
									"anonymous": false,
									"id": 254,
									"name": "AddedBlackList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": false,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "1283:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1282:15:1"
									},
									"src": "1262:36:1"
								},
								{
									"anonymous": false,
									"id": 258,
									"name": "RemovedBlackList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "1327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1326:15:1"
									},
									"src": "1304:38:1"
								}
							],
							"scope": 260,
							"src": "110:1235:1"
						}
					],
					"src": "32:1314:1"
				},
				"id": 1,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/Blacklist.sol",
						"exportedSymbols": {
							"BlackList": [
								259
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 143,
							"name": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"attributes": {
								"SourceUnit": 774,
								"absolutePath": "contracts/Ownable.sol",
								"file": "./Ownable.sol",
								"scope": 260,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 144,
							"name": "ImportDirective",
							"src": "58:23:1"
						},
						{
							"attributes": {
								"SourceUnit": 142,
								"absolutePath": "contracts/BasicToken.sol",
								"file": "./BasicToken.sol",
								"scope": 260,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 145,
							"name": "ImportDirective",
							"src": "82:26:1"
						},
						{
							"attributes": {
								"contractDependencies": [
									729,
									773,
									141
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									259,
									141,
									729,
									773
								],
								"name": "BlackList",
								"scope": 260
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 773,
												"type": "contract Ownable"
											},
											"id": 146,
											"name": "UserDefinedTypeName",
											"src": "132:7:1"
										}
									],
									"id": 147,
									"name": "InheritanceSpecifier",
									"src": "132:7:1"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "BasicToken",
												"referencedDeclaration": 141,
												"type": "contract BasicToken"
											},
											"id": 148,
											"name": "UserDefinedTypeName",
											"src": "141:10:1"
										}
									],
									"id": 149,
									"name": "InheritanceSpecifier",
									"src": "141:10:1"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getBlackListStatus",
										"payable": false,
										"scope": 259,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "external"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_maker",
														"scope": 161,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 150,
															"name": "ElementaryTypeName",
															"src": "306:7:1"
														}
													],
													"id": 151,
													"name": "VariableDeclaration",
													"src": "306:14:1"
												}
											],
											"id": 152,
											"name": "ParameterList",
											"src": "305:16:1"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 161,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 153,
															"name": "ElementaryTypeName",
															"src": "349:4:1"
														}
													],
													"id": 154,
													"name": "VariableDeclaration",
													"src": "349:4:1"
												}
											],
											"id": 155,
											"name": "ParameterList",
											"src": "348:6:1"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 155
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 173,
																		"type": "mapping(address => bool)",
																		"value": "isBlackListed"
																	},
																	"id": 156,
																	"name": "Identifier",
																	"src": "372:13:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 151,
																		"type": "address",
																		"value": "_maker"
																	},
																	"id": 157,
																	"name": "Identifier",
																	"src": "386:6:1"
																}
															],
															"id": 158,
															"name": "IndexAccess",
															"src": "372:21:1"
														}
													],
													"id": 159,
													"name": "Return",
													"src": "365:28:1"
												}
											],
											"id": 160,
											"name": "Block",
											"src": "355:45:1"
										}
									],
									"id": 161,
									"name": "FunctionDefinition",
									"src": "278:122:1"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getOwner",
										"payable": false,
										"scope": 259,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "external"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 162,
											"name": "ParameterList",
											"src": "423:2:1"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 169,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 163,
															"name": "ElementaryTypeName",
															"src": "453:7:1"
														}
													],
													"id": 164,
													"name": "VariableDeclaration",
													"src": "453:7:1"
												}
											],
											"id": 165,
											"name": "ParameterList",
											"src": "452:9:1"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 165
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 733,
																"type": "address",
																"value": "owner"
															},
															"id": 166,
															"name": "Identifier",
															"src": "479:5:1"
														}
													],
													"id": 167,
													"name": "Return",
													"src": "472:12:1"
												}
											],
											"id": 168,
											"name": "Block",
											"src": "462:29:1"
										}
									],
									"id": 169,
									"name": "FunctionDefinition",
									"src": "406:85:1"
								},
								{
									"attributes": {
										"constant": false,
										"name": "isBlackListed",
										"scope": 259,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => bool)",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => bool)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 170,
													"name": "ElementaryTypeName",
													"src": "506:7:1"
												},
												{
													"attributes": {
														"name": "bool",
														"type": "bool"
													},
													"id": 171,
													"name": "ElementaryTypeName",
													"src": "517:4:1"
												}
											],
											"id": 172,
											"name": "Mapping",
											"src": "497:25:1"
										}
									],
									"id": 173,
									"name": "VariableDeclaration",
									"src": "497:46:1"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "addBlackList",
										"payable": false,
										"scope": 259,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_evilUser",
														"scope": 191,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 174,
															"name": "ElementaryTypeName",
															"src": "577:7:1"
														}
													],
													"id": 175,
													"name": "VariableDeclaration",
													"src": "577:17:1"
												}
											],
											"id": 176,
											"name": "ParameterList",
											"src": "576:19:1"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 179,
											"name": "ParameterList",
											"src": "613:0:1"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 753,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 177,
													"name": "Identifier",
													"src": "603:9:1"
												}
											],
											"id": 178,
											"name": "ModifierInvocation",
											"src": "603:9:1"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 173,
																				"type": "mapping(address => bool)",
																				"value": "isBlackListed"
																			},
																			"id": 180,
																			"name": "Identifier",
																			"src": "623:13:1"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 175,
																				"type": "address",
																				"value": "_evilUser"
																			},
																			"id": 181,
																			"name": "Identifier",
																			"src": "637:9:1"
																		}
																	],
																	"id": 182,
																	"name": "IndexAccess",
																	"src": "623:24:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 183,
																	"name": "Literal",
																	"src": "650:4:1"
																}
															],
															"id": 184,
															"name": "Assignment",
															"src": "623:31:1"
														}
													],
													"id": 185,
													"name": "ExpressionStatement",
													"src": "623:31:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 254,
																		"type": "function (address)",
																		"value": "AddedBlackList"
																	},
																	"id": 186,
																	"name": "Identifier",
																	"src": "664:14:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 175,
																		"type": "address",
																		"value": "_evilUser"
																	},
																	"id": 187,
																	"name": "Identifier",
																	"src": "679:9:1"
																}
															],
															"id": 188,
															"name": "FunctionCall",
															"src": "664:25:1"
														}
													],
													"id": 189,
													"name": "ExpressionStatement",
													"src": "664:25:1"
												}
											],
											"id": 190,
											"name": "Block",
											"src": "613:83:1"
										}
									],
									"id": 191,
									"name": "FunctionDefinition",
									"src": "554:142:1"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "removeBlackList",
										"payable": false,
										"scope": 259,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_clearedUser",
														"scope": 209,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 192,
															"name": "ElementaryTypeName",
															"src": "728:7:1"
														}
													],
													"id": 193,
													"name": "VariableDeclaration",
													"src": "728:20:1"
												}
											],
											"id": 194,
											"name": "ParameterList",
											"src": "727:22:1"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 197,
											"name": "ParameterList",
											"src": "767:0:1"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 753,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 195,
													"name": "Identifier",
													"src": "757:9:1"
												}
											],
											"id": 196,
											"name": "ModifierInvocation",
											"src": "757:9:1"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 173,
																				"type": "mapping(address => bool)",
																				"value": "isBlackListed"
																			},
																			"id": 198,
																			"name": "Identifier",
																			"src": "777:13:1"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 193,
																				"type": "address",
																				"value": "_clearedUser"
																			},
																			"id": 199,
																			"name": "Identifier",
																			"src": "791:12:1"
																		}
																	],
																	"id": 200,
																	"name": "IndexAccess",
																	"src": "777:27:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 201,
																	"name": "Literal",
																	"src": "807:5:1"
																}
															],
															"id": 202,
															"name": "Assignment",
															"src": "777:35:1"
														}
													],
													"id": 203,
													"name": "ExpressionStatement",
													"src": "777:35:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 258,
																		"type": "function (address)",
																		"value": "RemovedBlackList"
																	},
																	"id": 204,
																	"name": "Identifier",
																	"src": "822:16:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 193,
																		"type": "address",
																		"value": "_clearedUser"
																	},
																	"id": 205,
																	"name": "Identifier",
																	"src": "839:12:1"
																}
															],
															"id": 206,
															"name": "FunctionCall",
															"src": "822:30:1"
														}
													],
													"id": 207,
													"name": "ExpressionStatement",
													"src": "822:30:1"
												}
											],
											"id": 208,
											"name": "Block",
											"src": "767:92:1"
										}
									],
									"id": 209,
									"name": "FunctionDefinition",
									"src": "702:157:1"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "destroyBlackFunds",
										"payable": false,
										"scope": 259,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_blackListedUser",
														"scope": 244,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 210,
															"name": "ElementaryTypeName",
															"src": "893:7:1"
														}
													],
													"id": 211,
													"name": "VariableDeclaration",
													"src": "893:24:1"
												}
											],
											"id": 212,
											"name": "ParameterList",
											"src": "892:26:1"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 215,
											"name": "ParameterList",
											"src": "936:0:1"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 753,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 213,
													"name": "Identifier",
													"src": "926:9:1"
												}
											],
											"id": 214,
											"name": "ModifierInvocation",
											"src": "926:9:1"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1190,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 216,
																	"name": "Identifier",
																	"src": "946:7:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 173,
																				"type": "mapping(address => bool)",
																				"value": "isBlackListed"
																			},
																			"id": 217,
																			"name": "Identifier",
																			"src": "954:13:1"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 211,
																				"type": "address",
																				"value": "_blackListedUser"
																			},
																			"id": 218,
																			"name": "Identifier",
																			"src": "968:16:1"
																		}
																	],
																	"id": 219,
																	"name": "IndexAccess",
																	"src": "954:31:1"
																}
															],
															"id": 220,
															"name": "FunctionCall",
															"src": "946:40:1"
														}
													],
													"id": 221,
													"name": "ExpressionStatement",
													"src": "946:40:1"
												},
												{
													"attributes": {
														"assignments": [
															223
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "dirtyFunds",
																"scope": 244,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 222,
																	"name": "ElementaryTypeName",
																	"src": "996:4:1"
																}
															],
															"id": 223,
															"name": "VariableDeclaration",
															"src": "996:15:1"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			140
																		],
																		"referencedDeclaration": 140,
																		"type": "function (address) view returns (uint256)",
																		"value": "balanceOf"
																	},
																	"id": 224,
																	"name": "Identifier",
																	"src": "1014:9:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 211,
																		"type": "address",
																		"value": "_blackListedUser"
																	},
																	"id": 225,
																	"name": "Identifier",
																	"src": "1024:16:1"
																}
															],
															"id": 226,
															"name": "FunctionCall",
															"src": "1014:27:1"
														}
													],
													"id": 227,
													"name": "VariableDeclarationStatement",
													"src": "996:45:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 15,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 228,
																			"name": "Identifier",
																			"src": "1051:8:1"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 211,
																				"type": "address",
																				"value": "_blackListedUser"
																			},
																			"id": 229,
																			"name": "Identifier",
																			"src": "1060:16:1"
																		}
																	],
																	"id": 230,
																	"name": "IndexAccess",
																	"src": "1051:26:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 231,
																	"name": "Literal",
																	"src": "1080:1:1"
																}
															],
															"id": 232,
															"name": "Assignment",
															"src": "1051:30:1"
														}
													],
													"id": 233,
													"name": "ExpressionStatement",
													"src": "1051:30:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 701,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 234,
																	"name": "Identifier",
																	"src": "1091:12:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 223,
																		"type": "uint256",
																		"value": "dirtyFunds"
																	},
																	"id": 235,
																	"name": "Identifier",
																	"src": "1107:10:1"
																}
															],
															"id": 236,
															"name": "Assignment",
															"src": "1091:26:1"
														}
													],
													"id": 237,
													"name": "ExpressionStatement",
													"src": "1091:26:1"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 250,
																		"type": "function (address,uint256)",
																		"value": "DestroyedBlackFunds"
																	},
																	"id": 238,
																	"name": "Identifier",
																	"src": "1127:19:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 211,
																		"type": "address",
																		"value": "_blackListedUser"
																	},
																	"id": 239,
																	"name": "Identifier",
																	"src": "1147:16:1"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 223,
																		"type": "uint256",
																		"value": "dirtyFunds"
																	},
																	"id": 240,
																	"name": "Identifier",
																	"src": "1165:10:1"
																}
															],
															"id": 241,
															"name": "FunctionCall",
															"src": "1127:49:1"
														}
													],
													"id": 242,
													"name": "ExpressionStatement",
													"src": "1127:49:1"
												}
											],
											"id": 243,
											"name": "Block",
											"src": "936:247:1"
										}
									],
									"id": 244,
									"name": "FunctionDefinition",
									"src": "865:318:1"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "DestroyedBlackFunds"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_blackListedUser",
														"scope": 250,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 245,
															"name": "ElementaryTypeName",
															"src": "1215:7:1"
														}
													],
													"id": 246,
													"name": "VariableDeclaration",
													"src": "1215:24:1"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_balance",
														"scope": 250,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 247,
															"name": "ElementaryTypeName",
															"src": "1241:4:1"
														}
													],
													"id": 248,
													"name": "VariableDeclaration",
													"src": "1241:13:1"
												}
											],
											"id": 249,
											"name": "ParameterList",
											"src": "1214:41:1"
										}
									],
									"id": 250,
									"name": "EventDefinition",
									"src": "1189:67:1"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "AddedBlackList"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_user",
														"scope": 254,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 251,
															"name": "ElementaryTypeName",
															"src": "1283:7:1"
														}
													],
													"id": 252,
													"name": "VariableDeclaration",
													"src": "1283:13:1"
												}
											],
											"id": 253,
											"name": "ParameterList",
											"src": "1282:15:1"
										}
									],
									"id": 254,
									"name": "EventDefinition",
									"src": "1262:36:1"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "RemovedBlackList"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_user",
														"scope": 258,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 255,
															"name": "ElementaryTypeName",
															"src": "1327:7:1"
														}
													],
													"id": 256,
													"name": "VariableDeclaration",
													"src": "1327:13:1"
												}
											],
											"id": 257,
											"name": "ParameterList",
											"src": "1326:15:1"
										}
									],
									"id": 258,
									"name": "EventDefinition",
									"src": "1304:38:1"
								}
							],
							"id": 259,
							"name": "ContractDefinition",
							"src": "110:1235:1"
						}
					],
					"id": 260,
					"name": "SourceUnit",
					"src": "32:1314:1"
				}
			},
			"contracts/DiverseTetherToken.sol": {
				"ast": {
					"absolutePath": "contracts/DiverseTetherToken.sol",
					"exportedSymbols": {
						"DiverseTetherToken": [
							658
						]
					},
					"id": 659,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 261,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "contracts/Pausable.sol",
							"file": "./Pausable.sol",
							"id": 262,
							"nodeType": "ImportDirective",
							"scope": 659,
							"sourceUnit": 834,
							"src": "58:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/StandardToken.sol",
							"file": "./StandardToken.sol",
							"id": 263,
							"nodeType": "ImportDirective",
							"scope": 659,
							"sourceUnit": 1135,
							"src": "83:29:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/UpgradedStandardToken.sol",
							"file": "./UpgradedStandardToken.sol",
							"id": 264,
							"nodeType": "ImportDirective",
							"scope": 659,
							"sourceUnit": 1170,
							"src": "113:37:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Blacklist.sol",
							"file": "./Blacklist.sol",
							"id": 265,
							"nodeType": "ImportDirective",
							"scope": 659,
							"sourceUnit": 260,
							"src": "151:25:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 266,
										"name": "Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 833,
										"src": "209:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Pausable_$833",
											"typeString": "contract Pausable"
										}
									},
									"id": 267,
									"nodeType": "InheritanceSpecifier",
									"src": "209:8:2"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 268,
										"name": "StandardToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1134,
										"src": "219:13:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StandardToken_$1134",
											"typeString": "contract StandardToken"
										}
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "219:13:2"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 270,
										"name": "BlackList",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 259,
										"src": "234:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BlackList_$259",
											"typeString": "contract BlackList"
										}
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "234:9:2"
								}
							],
							"contractDependencies": [
								259,
								697,
								729,
								773,
								833,
								1134,
								141
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 658,
							"linearizedBaseContracts": [
								658,
								259,
								1134,
								697,
								141,
								729,
								833,
								773
							],
							"name": "DiverseTetherToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 273,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 658,
									"src": "251:18:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string storage ref"
									},
									"typeName": {
										"id": 272,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "251:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string storage pointer"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 275,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 658,
									"src": "275:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string storage ref"
									},
									"typeName": {
										"id": 274,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "275:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string storage pointer"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 277,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 658,
									"src": "301:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 276,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "301:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 279,
									"name": "upgradedAddress",
									"nodeType": "VariableDeclaration",
									"scope": 658,
									"src": "327:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 278,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "327:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 281,
									"name": "deprecated",
									"nodeType": "VariableDeclaration",
									"scope": 658,
									"src": "363:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 280,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "363:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "717:208:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 284,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "727:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_10000000000000000_by_1",
															"typeString": "int_const 10000000000000000"
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "3130303030303030303030",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "742:11:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000_by_1",
																"typeString": "int_const 10000000000"
															},
															"value": "10000000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "756:2:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "36",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "762:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6_by_1",
																	"typeString": "int_const 6"
																},
																"value": "6"
															},
															"src": "756:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															}
														},
														"src": "742:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000000000_by_1",
															"typeString": "int_const 10000000000000000"
														}
													},
													"src": "727:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "727:36:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 292,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "773:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "6454657468657220555344",
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "780:13:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_01e4ab9979bc7c771343f6451a19ad4ff11daf3036b93550343d3750941e5338",
															"typeString": "literal_string \"dTether USD\""
														},
														"value": "dTether USD"
													},
													"src": "773:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "773:20:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 296,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "803:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "6455534454",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "812:7:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_b9c30223a576146699fd2d1450b98ccece32de1091459691901c7cb6ac640578",
															"typeString": "literal_string \"dUSDT\""
														},
														"value": "dUSDT"
													},
													"src": "803:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "803:16:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 300,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "829:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "36",
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "840:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "829:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "829:12:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 304,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "851:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 306,
														"indexExpression": {
															"argumentTypes": null,
															"id": 305,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "860:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "851:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_10000000000000000_by_1",
															"typeString": "int_const 10000000000000000"
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "3130303030303030303030",
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "869:11:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000_by_1",
																"typeString": "int_const 10000000000"
															},
															"value": "10000000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "883:2:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "36",
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "889:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6_by_1",
																	"typeString": "int_const 6"
																},
																"value": "6"
															},
															"src": "883:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															}
														},
														"src": "869:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000000000_by_1",
															"typeString": "int_const 10000000000000000"
														}
													},
													"src": "851:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "851:39:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 314,
														"name": "deprecated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "900:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "913:5:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "900:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "900:18:2"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "DiverseTetherToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:2:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "717:0:2"
									},
									"scope": 658,
									"src": "680:245:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "1072:254:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1090:26:2",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 329,
																	"name": "isBlackListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "1091:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 332,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 330,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1172,
																		"src": "1105:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1105:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1091:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 328,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "1082:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1082:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "1082:35:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 336,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 281,
													"src": "1131:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 354,
													"nodeType": "Block",
													"src": "1261:59:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 350,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "1297:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 351,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 323,
																		"src": "1302:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 348,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "1282:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_DiverseTetherToken_$658",
																			"typeString": "contract super DiverseTetherToken"
																		}
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 128,
																	"src": "1282:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1282:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 327,
															"id": 353,
															"nodeType": "Return",
															"src": "1275:34:2"
														}
													]
												},
												"id": 355,
												"nodeType": "IfStatement",
												"src": "1127:193:2",
												"trueBody": {
													"id": 347,
													"nodeType": "Block",
													"src": "1143:112:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 341,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "1220:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1220:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 343,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "1232:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 344,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 323,
																		"src": "1237:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 338,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "1186:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 337,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1169,
																			"src": "1164:21:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$1169_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1164:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$1169",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1148,
																	"src": "1164:55:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1164:80:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 327,
															"id": 346,
															"nodeType": "Return",
															"src": "1157:87:2"
														}
													]
												}
											}
										]
									},
									"id": 357,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 326,
											"modifierName": {
												"argumentTypes": null,
												"id": 325,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 794,
												"src": "1058:13:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1058:13:2"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1025:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1038:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1038:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1024:26:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1072:0:2"
									},
									"scope": 658,
									"src": "1007:319:2",
									"stateMutability": "nonpayable",
									"superFunction": 128,
									"visibility": "public"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "1492:271:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1510:21:2",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 369,
																	"name": "isBlackListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "1511:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 371,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 370,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "1525:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1511:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "1502:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1502:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "1502:30:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 375,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 281,
													"src": "1546:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 395,
													"nodeType": "Block",
													"src": "1687:70:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 390,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "1727:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 391,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 361,
																		"src": "1734:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 392,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "1739:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 388,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "1708:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_DiverseTetherToken_$658",
																			"typeString": "contract super DiverseTetherToken"
																		}
																	},
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1069,
																	"src": "1708:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1708:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 367,
															"id": 394,
															"nodeType": "Return",
															"src": "1701:45:2"
														}
													]
												},
												"id": 396,
												"nodeType": "IfStatement",
												"src": "1542:215:2",
												"trueBody": {
													"id": 387,
													"nodeType": "Block",
													"src": "1558:123:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 380,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "1639:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1639:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 382,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "1651:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 383,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 361,
																		"src": "1658:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 384,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "1663:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 377,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "1601:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 376,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1169,
																			"src": "1579:21:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$1169_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1579:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$1169",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFromByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1159,
																	"src": "1579:59:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256) external"
																	}
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1579:91:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 367,
															"id": 386,
															"nodeType": "Return",
															"src": "1572:98:2"
														}
													]
												}
											}
										]
									},
									"id": 398,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 366,
											"modifierName": {
												"argumentTypes": null,
												"id": 365,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 794,
												"src": "1478:13:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1478:13:2"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "1430:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1430:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "1445:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "1458:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1458:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1429:41:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1492:0:2"
									},
									"scope": 658,
									"src": "1408:355:2",
									"stateMutability": "nonpayable",
									"superFunction": 1069,
									"visibility": "public"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "1908:175:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 405,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 281,
													"src": "1922:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 419,
													"nodeType": "Block",
													"src": "2025:52:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 416,
																		"name": "who",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "2062:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 414,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "2046:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_DiverseTetherToken_$658",
																			"typeString": "contract super DiverseTetherToken"
																		}
																	},
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 140,
																	"src": "2046:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2046:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 404,
															"id": 418,
															"nodeType": "Return",
															"src": "2039:27:2"
														}
													]
												},
												"id": 420,
												"nodeType": "IfStatement",
												"src": "1918:159:2",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "1934:85:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 410,
																		"name": "who",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "2004:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 407,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "1977:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 406,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1169,
																			"src": "1955:21:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$1169_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1955:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$1169",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 140,
																	"src": "1955:48:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1955:53:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 404,
															"id": 412,
															"nodeType": "Return",
															"src": "1948:60:2"
														}
													]
												}
											}
										]
									},
									"id": 422,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1864:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1864:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1863:13:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1902:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1902:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1901:6:2"
									},
									"scope": 658,
									"src": "1845:238:2",
									"stateMutability": "view",
									"superFunction": 140,
									"visibility": "public"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "2244:217:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 434,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 281,
													"src": "2258:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 452,
													"nodeType": "Block",
													"src": "2392:63:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 448,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "2427:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 449,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 426,
																		"src": "2437:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 446,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "2413:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_DiverseTetherToken_$658",
																			"typeString": "contract super DiverseTetherToken"
																		}
																	},
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1117,
																	"src": "2413:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2413:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 433,
															"id": 451,
															"nodeType": "Return",
															"src": "2406:38:2"
														}
													]
												},
												"id": 453,
												"nodeType": "IfStatement",
												"src": "2254:201:2",
												"trueBody": {
													"id": 445,
													"nodeType": "Block",
													"src": "2270:116:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 439,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "2346:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2346:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 441,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "2358:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 442,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 426,
																		"src": "2368:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 436,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "2313:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 435,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1169,
																			"src": "2291:21:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$1169_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2291:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$1169",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "approveByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1168,
																	"src": "2291:54:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2291:84:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 433,
															"id": 444,
															"nodeType": "Return",
															"src": "2284:91:2"
														}
													]
												}
											}
										]
									},
									"id": 455,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2236:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2240:2:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "2236:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 432,
											"modifierName": {
												"argumentTypes": null,
												"id": 428,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "2220:15:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2220:23:2"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2182:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2200:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2200:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2181:31:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2244:0:2"
									},
									"scope": 658,
									"src": "2165:296:2",
									"stateMutability": "nonpayable",
									"superFunction": 1117,
									"visibility": "public"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "2637:193:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 464,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 281,
													"src": "2651:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 480,
													"nodeType": "Block",
													"src": "2759:65:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 476,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "2796:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 477,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "2804:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 474,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "2780:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_DiverseTetherToken_$658",
																			"typeString": "contract super DiverseTetherToken"
																		}
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1133,
																	"src": "2780:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2780:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 463,
															"id": 479,
															"nodeType": "Return",
															"src": "2773:40:2"
														}
													]
												},
												"id": 481,
												"nodeType": "IfStatement",
												"src": "2647:177:2",
												"trueBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "2663:90:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 469,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "2725:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 470,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "2733:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 466,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "2698:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 465,
																			"name": "StandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1134,
																			"src": "2684:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_StandardToken_$1134_$",
																				"typeString": "type(contract StandardToken)"
																			}
																		},
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2684:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StandardToken_$1134",
																			"typeString": "contract StandardToken"
																		}
																	},
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1133,
																	"src": "2684:40:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2684:58:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 463,
															"id": 472,
															"nodeType": "Return",
															"src": "2677:65:2"
														}
													]
												}
											}
										]
									},
									"id": 483,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2562:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2562:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2578:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2578:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2561:34:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2621:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2621:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2620:16:2"
									},
									"scope": 658,
									"src": "2543:287:2",
									"stateMutability": "view",
									"superFunction": 1133,
									"visibility": "public"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "2955:115:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 490,
														"name": "deprecated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "2965:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:4:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2965:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2965:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 494,
														"name": "upgradedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "2992:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 495,
														"name": "_upgradedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "3010:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2992:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "2992:34:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 499,
															"name": "_upgradedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "3046:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 498,
														"name": "Deprecate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "3036:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3036:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "3036:27:2"
											}
										]
									},
									"id": 503,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 488,
											"modifierName": {
												"argumentTypes": null,
												"id": 487,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 753,
												"src": "2945:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2945:9:2"
										}
									],
									"name": "deprecate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"name": "_upgradedAddress",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2912:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2911:26:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2955:0:2"
									},
									"scope": 658,
									"src": "2893:177:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "3187:158:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 508,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 281,
													"src": "3201:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 518,
													"nodeType": "Block",
													"src": "3295:44:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 516,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "3316:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 507,
															"id": 517,
															"nodeType": "Return",
															"src": "3309:19:2"
														}
													]
												},
												"id": 519,
												"nodeType": "IfStatement",
												"src": "3197:142:2",
												"trueBody": {
													"id": 515,
													"nodeType": "Block",
													"src": "3213:76:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 510,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "3248:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 509,
																			"name": "StandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1134,
																			"src": "3234:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_StandardToken_$1134_$",
																				"typeString": "type(contract StandardToken)"
																			}
																		},
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3234:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StandardToken_$1134",
																			"typeString": "contract StandardToken"
																		}
																	},
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 706,
																	"src": "3234:42:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3234:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 507,
															"id": 514,
															"nodeType": "Return",
															"src": "3227:51:2"
														}
													]
												}
											}
										]
									},
									"id": 521,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3153:2:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3181:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3181:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3180:6:2"
									},
									"scope": 658,
									"src": "3133:212:2",
									"stateMutability": "view",
									"superFunction": 706,
									"visibility": "public"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "3548:214:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 529,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "3566:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 530,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "3581:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3566:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 532,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "3590:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3566:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "3558:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3558:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "3558:45:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 537,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "3621:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 539,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 538,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 733,
																		"src": "3630:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3621:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 540,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "3639:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3621:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 542,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "3648:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 544,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 543,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "3657:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3648:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3621:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "3613:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3613:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "3613:51:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 548,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "3675:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 550,
														"indexExpression": {
															"argumentTypes": null,
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "3684:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3675:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 551,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "3694:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3675:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "3675:25:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 554,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "3710:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 555,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "3726:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3710:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "3710:22:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 559,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "3748:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 558,
														"name": "Issue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "3742:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3742:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "3742:13:2"
											}
										]
									},
									"id": 563,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 526,
											"modifierName": {
												"argumentTypes": null,
												"id": 525,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 753,
												"src": "3538:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3538:9:2"
										}
									],
									"name": "issue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3518:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3518:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3517:13:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3548:0:2"
									},
									"scope": 658,
									"src": "3503:259:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "4032:184:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 571,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "4050:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 572,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "4066:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4050:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 570,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "4042:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4042:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "4042:31:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 577,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "4091:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 579,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 578,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "4100:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4091:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 580,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "4110:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4091:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "4083:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4083:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "4083:34:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 584,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "4128:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 585,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "4144:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4128:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "4128:22:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 588,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "4160:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 590,
														"indexExpression": {
															"argumentTypes": null,
															"id": 589,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "4169:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4160:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 591,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "4179:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4160:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "4160:25:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 595,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "4202:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 594,
														"name": "Redeem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "4195:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4195:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "4195:14:2"
											}
										]
									},
									"id": 599,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 568,
											"modifierName": {
												"argumentTypes": null,
												"id": 567,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 753,
												"src": "4022:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4022:9:2"
										}
									],
									"name": "redeem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "4002:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4002:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4001:13:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4032:0:2"
									},
									"scope": 658,
									"src": "3986:230:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "4295:305:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 609,
																"name": "newBasisPoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "4401:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3230",
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4418:2:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20_by_1",
																	"typeString": "int_const 20"
																},
																"value": "20"
															},
															"src": "4401:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "4393:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4393:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "4393:28:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 615,
																"name": "newMaxFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "4439:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3530",
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4451:2:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															"src": "4439:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 614,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "4431:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "4431:23:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 620,
														"name": "basisPointsRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "4465:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 621,
														"name": "newBasisPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "4483:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4465:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "4465:32:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 624,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "4507:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4534:2:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 628,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "4538:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4534:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 625,
																"name": "newMaxFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "4520:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 868,
															"src": "4520:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4520:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4507:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "4507:40:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 634,
															"name": "basisPointsRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "4565:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 635,
															"name": "maximumFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4582:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 633,
														"name": "Params",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "4558:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4558:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "4558:35:2"
											}
										]
									},
									"id": 639,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 606,
											"modifierName": {
												"argumentTypes": null,
												"id": 605,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 753,
												"src": "4285:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4285:9:2"
										}
									],
									"name": "setParams",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"name": "newBasisPoints",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "4241:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4241:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"name": "newMaxFee",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "4262:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4262:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4240:37:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4295:0:2"
									},
									"scope": 658,
									"src": "4222:378:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 643,
									"name": "Issue",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "4658:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4658:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4657:13:2"
									},
									"src": "4646:25:2"
								},
								{
									"anonymous": false,
									"id": 647,
									"name": "Redeem",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "4729:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4729:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4728:13:2"
									},
									"src": "4716:26:2"
								},
								{
									"anonymous": false,
									"id": 651,
									"name": "Deprecate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"indexed": false,
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4806:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4806:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4805:20:2"
									},
									"src": "4790:36:2"
								},
								{
									"anonymous": false,
									"id": 657,
									"name": "Params",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"indexed": false,
												"name": "feeBasisPoints",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "4886:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4886:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"indexed": false,
												"name": "maxFee",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "4907:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4907:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4885:34:2"
									},
									"src": "4873:47:2"
								}
							],
							"scope": 659,
							"src": "178:4744:2"
						}
					],
					"src": "32:4891:2"
				},
				"id": 2,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/DiverseTetherToken.sol",
						"exportedSymbols": {
							"DiverseTetherToken": [
								658
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 261,
							"name": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"attributes": {
								"SourceUnit": 834,
								"absolutePath": "contracts/Pausable.sol",
								"file": "./Pausable.sol",
								"scope": 659,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 262,
							"name": "ImportDirective",
							"src": "58:24:2"
						},
						{
							"attributes": {
								"SourceUnit": 1135,
								"absolutePath": "contracts/StandardToken.sol",
								"file": "./StandardToken.sol",
								"scope": 659,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 263,
							"name": "ImportDirective",
							"src": "83:29:2"
						},
						{
							"attributes": {
								"SourceUnit": 1170,
								"absolutePath": "contracts/UpgradedStandardToken.sol",
								"file": "./UpgradedStandardToken.sol",
								"scope": 659,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 264,
							"name": "ImportDirective",
							"src": "113:37:2"
						},
						{
							"attributes": {
								"SourceUnit": 260,
								"absolutePath": "contracts/Blacklist.sol",
								"file": "./Blacklist.sol",
								"scope": 659,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 265,
							"name": "ImportDirective",
							"src": "151:25:2"
						},
						{
							"attributes": {
								"contractDependencies": [
									259,
									697,
									729,
									773,
									833,
									1134,
									141
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									658,
									259,
									1134,
									697,
									141,
									729,
									833,
									773
								],
								"name": "DiverseTetherToken",
								"scope": 659
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Pausable",
												"referencedDeclaration": 833,
												"type": "contract Pausable"
											},
											"id": 266,
											"name": "UserDefinedTypeName",
											"src": "209:8:2"
										}
									],
									"id": 267,
									"name": "InheritanceSpecifier",
									"src": "209:8:2"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "StandardToken",
												"referencedDeclaration": 1134,
												"type": "contract StandardToken"
											},
											"id": 268,
											"name": "UserDefinedTypeName",
											"src": "219:13:2"
										}
									],
									"id": 269,
									"name": "InheritanceSpecifier",
									"src": "219:13:2"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "BlackList",
												"referencedDeclaration": 259,
												"type": "contract BlackList"
											},
											"id": 270,
											"name": "UserDefinedTypeName",
											"src": "234:9:2"
										}
									],
									"id": 271,
									"name": "InheritanceSpecifier",
									"src": "234:9:2"
								},
								{
									"attributes": {
										"constant": false,
										"name": "name",
										"scope": 658,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "string storage ref",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "string",
												"type": "string storage pointer"
											},
											"id": 272,
											"name": "ElementaryTypeName",
											"src": "251:6:2"
										}
									],
									"id": 273,
									"name": "VariableDeclaration",
									"src": "251:18:2"
								},
								{
									"attributes": {
										"constant": false,
										"name": "symbol",
										"scope": 658,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "string storage ref",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "string",
												"type": "string storage pointer"
											},
											"id": 274,
											"name": "ElementaryTypeName",
											"src": "275:6:2"
										}
									],
									"id": 275,
									"name": "VariableDeclaration",
									"src": "275:20:2"
								},
								{
									"attributes": {
										"constant": false,
										"name": "decimals",
										"scope": 658,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 276,
											"name": "ElementaryTypeName",
											"src": "301:4:2"
										}
									],
									"id": 277,
									"name": "VariableDeclaration",
									"src": "301:20:2"
								},
								{
									"attributes": {
										"constant": false,
										"name": "upgradedAddress",
										"scope": 658,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 278,
											"name": "ElementaryTypeName",
											"src": "327:7:2"
										}
									],
									"id": 279,
									"name": "VariableDeclaration",
									"src": "327:30:2"
								},
								{
									"attributes": {
										"constant": false,
										"name": "deprecated",
										"scope": 658,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "bool",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "bool",
												"type": "bool"
											},
											"id": 280,
											"name": "ElementaryTypeName",
											"src": "363:4:2"
										}
									],
									"id": 281,
									"name": "VariableDeclaration",
									"src": "363:22:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "DiverseTetherToken",
										"payable": false,
										"scope": 658,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 282,
											"name": "ParameterList",
											"src": "707:2:2"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 283,
											"name": "ParameterList",
											"src": "717:0:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 701,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 284,
																	"name": "Identifier",
																	"src": "727:12:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_rational_10000000000000000_by_1",
																			"typeString": "int_const 10000000000000000"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"operator": "*",
																		"type": "int_const 10000000000000000"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "3130303030303030303030",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 10000000000",
																				"value": "10000000000"
																			},
																			"id": 285,
																			"name": "Literal",
																			"src": "742:11:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_rational_1000000_by_1",
																					"typeString": "int_const 1000000"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"operator": "**",
																				"type": "int_const 1000000"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "3130",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "number",
																						"type": "int_const 10",
																						"value": "10"
																					},
																					"id": 286,
																					"name": "Literal",
																					"src": "756:2:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "36",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "number",
																						"type": "int_const 6",
																						"value": "6"
																					},
																					"id": 287,
																					"name": "Literal",
																					"src": "762:1:2"
																				}
																			],
																			"id": 288,
																			"name": "BinaryOperation",
																			"src": "756:7:2"
																		}
																	],
																	"id": 289,
																	"name": "BinaryOperation",
																	"src": "742:21:2"
																}
															],
															"id": 290,
															"name": "Assignment",
															"src": "727:36:2"
														}
													],
													"id": 291,
													"name": "ExpressionStatement",
													"src": "727:36:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "string storage ref"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 273,
																		"type": "string storage ref",
																		"value": "name"
																	},
																	"id": 292,
																	"name": "Identifier",
																	"src": "773:4:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "6454657468657220555344",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "string",
																		"type": "literal_string \"dTether USD\"",
																		"value": "dTether USD"
																	},
																	"id": 293,
																	"name": "Literal",
																	"src": "780:13:2"
																}
															],
															"id": 294,
															"name": "Assignment",
															"src": "773:20:2"
														}
													],
													"id": 295,
													"name": "ExpressionStatement",
													"src": "773:20:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "string storage ref"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 275,
																		"type": "string storage ref",
																		"value": "symbol"
																	},
																	"id": 296,
																	"name": "Identifier",
																	"src": "803:6:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "6455534454",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "string",
																		"type": "literal_string \"dUSDT\"",
																		"value": "dUSDT"
																	},
																	"id": 297,
																	"name": "Literal",
																	"src": "812:7:2"
																}
															],
															"id": 298,
															"name": "Assignment",
															"src": "803:16:2"
														}
													],
													"id": 299,
													"name": "ExpressionStatement",
													"src": "803:16:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 277,
																		"type": "uint256",
																		"value": "decimals"
																	},
																	"id": 300,
																	"name": "Identifier",
																	"src": "829:8:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "36",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 6",
																		"value": "6"
																	},
																	"id": 301,
																	"name": "Literal",
																	"src": "840:1:2"
																}
															],
															"id": 302,
															"name": "Assignment",
															"src": "829:12:2"
														}
													],
													"id": 303,
													"name": "ExpressionStatement",
													"src": "829:12:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 15,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 304,
																			"name": "Identifier",
																			"src": "851:8:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 733,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 305,
																			"name": "Identifier",
																			"src": "860:5:2"
																		}
																	],
																	"id": 306,
																	"name": "IndexAccess",
																	"src": "851:15:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_rational_10000000000000000_by_1",
																			"typeString": "int_const 10000000000000000"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"operator": "*",
																		"type": "int_const 10000000000000000"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "3130303030303030303030",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 10000000000",
																				"value": "10000000000"
																			},
																			"id": 307,
																			"name": "Literal",
																			"src": "869:11:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_rational_1000000_by_1",
																					"typeString": "int_const 1000000"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"operator": "**",
																				"type": "int_const 1000000"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "3130",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "number",
																						"type": "int_const 10",
																						"value": "10"
																					},
																					"id": 308,
																					"name": "Literal",
																					"src": "883:2:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "36",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "number",
																						"type": "int_const 6",
																						"value": "6"
																					},
																					"id": 309,
																					"name": "Literal",
																					"src": "889:1:2"
																				}
																			],
																			"id": 310,
																			"name": "BinaryOperation",
																			"src": "883:7:2"
																		}
																	],
																	"id": 311,
																	"name": "BinaryOperation",
																	"src": "869:21:2"
																}
															],
															"id": 312,
															"name": "Assignment",
															"src": "851:39:2"
														}
													],
													"id": 313,
													"name": "ExpressionStatement",
													"src": "851:39:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 281,
																		"type": "bool",
																		"value": "deprecated"
																	},
																	"id": 314,
																	"name": "Identifier",
																	"src": "900:10:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 315,
																	"name": "Literal",
																	"src": "913:5:2"
																}
															],
															"id": 316,
															"name": "Assignment",
															"src": "900:18:2"
														}
													],
													"id": 317,
													"name": "ExpressionStatement",
													"src": "900:18:2"
												}
											],
											"id": 318,
											"name": "Block",
											"src": "717:208:2"
										}
									],
									"id": 319,
									"name": "FunctionDefinition",
									"src": "680:245:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transfer",
										"payable": false,
										"scope": 658,
										"stateMutability": "nonpayable",
										"superFunction": 128,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 357,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 320,
															"name": "ElementaryTypeName",
															"src": "1025:7:2"
														}
													],
													"id": 321,
													"name": "VariableDeclaration",
													"src": "1025:11:2"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 357,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 322,
															"name": "ElementaryTypeName",
															"src": "1038:4:2"
														}
													],
													"id": 323,
													"name": "VariableDeclaration",
													"src": "1038:11:2"
												}
											],
											"id": 324,
											"name": "ParameterList",
											"src": "1024:26:2"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 327,
											"name": "ParameterList",
											"src": "1072:0:2"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 794,
														"type": "modifier ()",
														"value": "whenNotPaused"
													},
													"id": 325,
													"name": "Identifier",
													"src": "1058:13:2"
												}
											],
											"id": 326,
											"name": "ModifierInvocation",
											"src": "1058:13:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1190,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 328,
																	"name": "Identifier",
																	"src": "1082:7:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 173,
																						"type": "mapping(address => bool)",
																						"value": "isBlackListed"
																					},
																					"id": 329,
																					"name": "Identifier",
																					"src": "1091:13:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1172,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 330,
																							"name": "Identifier",
																							"src": "1105:3:2"
																						}
																					],
																					"id": 331,
																					"name": "MemberAccess",
																					"src": "1105:10:2"
																				}
																			],
																			"id": 332,
																			"name": "IndexAccess",
																			"src": "1091:25:2"
																		}
																	],
																	"id": 333,
																	"name": "UnaryOperation",
																	"src": "1090:26:2"
																}
															],
															"id": 334,
															"name": "FunctionCall",
															"src": "1082:35:2"
														}
													],
													"id": 335,
													"name": "ExpressionStatement",
													"src": "1082:35:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 281,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 336,
															"name": "Identifier",
															"src": "1131:10:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 327
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transferByLegacy",
																						"referencedDeclaration": 1148,
																						"type": "function (address,address,uint256) external"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1169,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 337,
																									"name": "Identifier",
																									"src": "1164:21:2"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 279,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 338,
																									"name": "Identifier",
																									"src": "1186:15:2"
																								}
																							],
																							"id": 339,
																							"name": "FunctionCall",
																							"src": "1164:38:2"
																						}
																					],
																					"id": 340,
																					"name": "MemberAccess",
																					"src": "1164:55:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1172,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 341,
																							"name": "Identifier",
																							"src": "1220:3:2"
																						}
																					],
																					"id": 342,
																					"name": "MemberAccess",
																					"src": "1220:10:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 321,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 343,
																					"name": "Identifier",
																					"src": "1232:3:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 323,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 344,
																					"name": "Identifier",
																					"src": "1237:6:2"
																				}
																			],
																			"id": 345,
																			"name": "FunctionCall",
																			"src": "1164:80:2"
																		}
																	],
																	"id": 346,
																	"name": "Return",
																	"src": "1157:87:2"
																}
															],
															"id": 347,
															"name": "Block",
															"src": "1143:112:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 327
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transfer",
																						"referencedDeclaration": 128,
																						"type": "function (address,uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1211,
																								"type": "contract super DiverseTetherToken",
																								"value": "super"
																							},
																							"id": 348,
																							"name": "Identifier",
																							"src": "1282:5:2"
																						}
																					],
																					"id": 349,
																					"name": "MemberAccess",
																					"src": "1282:14:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 321,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 350,
																					"name": "Identifier",
																					"src": "1297:3:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 323,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 351,
																					"name": "Identifier",
																					"src": "1302:6:2"
																				}
																			],
																			"id": 352,
																			"name": "FunctionCall",
																			"src": "1282:27:2"
																		}
																	],
																	"id": 353,
																	"name": "Return",
																	"src": "1275:34:2"
																}
															],
															"id": 354,
															"name": "Block",
															"src": "1261:59:2"
														}
													],
													"id": 355,
													"name": "IfStatement",
													"src": "1127:193:2"
												}
											],
											"id": 356,
											"name": "Block",
											"src": "1072:254:2"
										}
									],
									"id": 357,
									"name": "FunctionDefinition",
									"src": "1007:319:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transferFrom",
										"payable": false,
										"scope": 658,
										"stateMutability": "nonpayable",
										"superFunction": 1069,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_from",
														"scope": 398,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 358,
															"name": "ElementaryTypeName",
															"src": "1430:7:2"
														}
													],
													"id": 359,
													"name": "VariableDeclaration",
													"src": "1430:13:2"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 398,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 360,
															"name": "ElementaryTypeName",
															"src": "1445:7:2"
														}
													],
													"id": 361,
													"name": "VariableDeclaration",
													"src": "1445:11:2"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 398,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 362,
															"name": "ElementaryTypeName",
															"src": "1458:4:2"
														}
													],
													"id": 363,
													"name": "VariableDeclaration",
													"src": "1458:11:2"
												}
											],
											"id": 364,
											"name": "ParameterList",
											"src": "1429:41:2"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 367,
											"name": "ParameterList",
											"src": "1492:0:2"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 794,
														"type": "modifier ()",
														"value": "whenNotPaused"
													},
													"id": 365,
													"name": "Identifier",
													"src": "1478:13:2"
												}
											],
											"id": 366,
											"name": "ModifierInvocation",
											"src": "1478:13:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1190,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 368,
																	"name": "Identifier",
																	"src": "1502:7:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 173,
																						"type": "mapping(address => bool)",
																						"value": "isBlackListed"
																					},
																					"id": 369,
																					"name": "Identifier",
																					"src": "1511:13:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 359,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 370,
																					"name": "Identifier",
																					"src": "1525:5:2"
																				}
																			],
																			"id": 371,
																			"name": "IndexAccess",
																			"src": "1511:20:2"
																		}
																	],
																	"id": 372,
																	"name": "UnaryOperation",
																	"src": "1510:21:2"
																}
															],
															"id": 373,
															"name": "FunctionCall",
															"src": "1502:30:2"
														}
													],
													"id": 374,
													"name": "ExpressionStatement",
													"src": "1502:30:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 281,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 375,
															"name": "Identifier",
															"src": "1546:10:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 367
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transferFromByLegacy",
																						"referencedDeclaration": 1159,
																						"type": "function (address,address,address,uint256) external"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1169,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 376,
																									"name": "Identifier",
																									"src": "1579:21:2"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 279,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 377,
																									"name": "Identifier",
																									"src": "1601:15:2"
																								}
																							],
																							"id": 378,
																							"name": "FunctionCall",
																							"src": "1579:38:2"
																						}
																					],
																					"id": 379,
																					"name": "MemberAccess",
																					"src": "1579:59:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1172,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 380,
																							"name": "Identifier",
																							"src": "1639:3:2"
																						}
																					],
																					"id": 381,
																					"name": "MemberAccess",
																					"src": "1639:10:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 359,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 382,
																					"name": "Identifier",
																					"src": "1651:5:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 361,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 383,
																					"name": "Identifier",
																					"src": "1658:3:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 363,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 384,
																					"name": "Identifier",
																					"src": "1663:6:2"
																				}
																			],
																			"id": 385,
																			"name": "FunctionCall",
																			"src": "1579:91:2"
																		}
																	],
																	"id": 386,
																	"name": "Return",
																	"src": "1572:98:2"
																}
															],
															"id": 387,
															"name": "Block",
															"src": "1558:123:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 367
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transferFrom",
																						"referencedDeclaration": 1069,
																						"type": "function (address,address,uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1211,
																								"type": "contract super DiverseTetherToken",
																								"value": "super"
																							},
																							"id": 388,
																							"name": "Identifier",
																							"src": "1708:5:2"
																						}
																					],
																					"id": 389,
																					"name": "MemberAccess",
																					"src": "1708:18:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 359,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 390,
																					"name": "Identifier",
																					"src": "1727:5:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 361,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 391,
																					"name": "Identifier",
																					"src": "1734:3:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 363,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 392,
																					"name": "Identifier",
																					"src": "1739:6:2"
																				}
																			],
																			"id": 393,
																			"name": "FunctionCall",
																			"src": "1708:38:2"
																		}
																	],
																	"id": 394,
																	"name": "Return",
																	"src": "1701:45:2"
																}
															],
															"id": 395,
															"name": "Block",
															"src": "1687:70:2"
														}
													],
													"id": 396,
													"name": "IfStatement",
													"src": "1542:215:2"
												}
											],
											"id": 397,
											"name": "Block",
											"src": "1492:271:2"
										}
									],
									"id": 398,
									"name": "FunctionDefinition",
									"src": "1408:355:2"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "balanceOf",
										"payable": false,
										"scope": 658,
										"stateMutability": "view",
										"superFunction": 140,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "who",
														"scope": 422,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 399,
															"name": "ElementaryTypeName",
															"src": "1864:7:2"
														}
													],
													"id": 400,
													"name": "VariableDeclaration",
													"src": "1864:11:2"
												}
											],
											"id": 401,
											"name": "ParameterList",
											"src": "1863:13:2"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 422,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 402,
															"name": "ElementaryTypeName",
															"src": "1902:4:2"
														}
													],
													"id": 403,
													"name": "VariableDeclaration",
													"src": "1902:4:2"
												}
											],
											"id": 404,
											"name": "ParameterList",
											"src": "1901:6:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 281,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 405,
															"name": "Identifier",
															"src": "1922:10:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 404
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "balanceOf",
																						"referencedDeclaration": 140,
																						"type": "function (address) view external returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1169,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 406,
																									"name": "Identifier",
																									"src": "1955:21:2"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 279,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 407,
																									"name": "Identifier",
																									"src": "1977:15:2"
																								}
																							],
																							"id": 408,
																							"name": "FunctionCall",
																							"src": "1955:38:2"
																						}
																					],
																					"id": 409,
																					"name": "MemberAccess",
																					"src": "1955:48:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 400,
																						"type": "address",
																						"value": "who"
																					},
																					"id": 410,
																					"name": "Identifier",
																					"src": "2004:3:2"
																				}
																			],
																			"id": 411,
																			"name": "FunctionCall",
																			"src": "1955:53:2"
																		}
																	],
																	"id": 412,
																	"name": "Return",
																	"src": "1948:60:2"
																}
															],
															"id": 413,
															"name": "Block",
															"src": "1934:85:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 404
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "balanceOf",
																						"referencedDeclaration": 140,
																						"type": "function (address) view returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1211,
																								"type": "contract super DiverseTetherToken",
																								"value": "super"
																							},
																							"id": 414,
																							"name": "Identifier",
																							"src": "2046:5:2"
																						}
																					],
																					"id": 415,
																					"name": "MemberAccess",
																					"src": "2046:15:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 400,
																						"type": "address",
																						"value": "who"
																					},
																					"id": 416,
																					"name": "Identifier",
																					"src": "2062:3:2"
																				}
																			],
																			"id": 417,
																			"name": "FunctionCall",
																			"src": "2046:20:2"
																		}
																	],
																	"id": 418,
																	"name": "Return",
																	"src": "2039:27:2"
																}
															],
															"id": 419,
															"name": "Block",
															"src": "2025:52:2"
														}
													],
													"id": 420,
													"name": "IfStatement",
													"src": "1918:159:2"
												}
											],
											"id": 421,
											"name": "Block",
											"src": "1908:175:2"
										}
									],
									"id": 422,
									"name": "FunctionDefinition",
									"src": "1845:238:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "approve",
										"payable": false,
										"scope": 658,
										"stateMutability": "nonpayable",
										"superFunction": 1117,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 455,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 423,
															"name": "ElementaryTypeName",
															"src": "2182:7:2"
														}
													],
													"id": 424,
													"name": "VariableDeclaration",
													"src": "2182:16:2"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 455,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 425,
															"name": "ElementaryTypeName",
															"src": "2200:4:2"
														}
													],
													"id": 426,
													"name": "VariableDeclaration",
													"src": "2200:11:2"
												}
											],
											"id": 427,
											"name": "ParameterList",
											"src": "2181:31:2"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 433,
											"name": "ParameterList",
											"src": "2244:0:2"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 39,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 428,
													"name": "Identifier",
													"src": "2220:15:2"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 64"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 429,
															"name": "Literal",
															"src": "2236:1:2"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 430,
															"name": "Literal",
															"src": "2240:2:2"
														}
													],
													"id": 431,
													"name": "BinaryOperation",
													"src": "2236:6:2"
												}
											],
											"id": 432,
											"name": "ModifierInvocation",
											"src": "2220:23:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 281,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 434,
															"name": "Identifier",
															"src": "2258:10:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 433
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "approveByLegacy",
																						"referencedDeclaration": 1168,
																						"type": "function (address,address,uint256) external"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1169,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 435,
																									"name": "Identifier",
																									"src": "2291:21:2"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 279,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 436,
																									"name": "Identifier",
																									"src": "2313:15:2"
																								}
																							],
																							"id": 437,
																							"name": "FunctionCall",
																							"src": "2291:38:2"
																						}
																					],
																					"id": 438,
																					"name": "MemberAccess",
																					"src": "2291:54:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1172,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 439,
																							"name": "Identifier",
																							"src": "2346:3:2"
																						}
																					],
																					"id": 440,
																					"name": "MemberAccess",
																					"src": "2346:10:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 424,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 441,
																					"name": "Identifier",
																					"src": "2358:8:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 426,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 442,
																					"name": "Identifier",
																					"src": "2368:6:2"
																				}
																			],
																			"id": 443,
																			"name": "FunctionCall",
																			"src": "2291:84:2"
																		}
																	],
																	"id": 444,
																	"name": "Return",
																	"src": "2284:91:2"
																}
															],
															"id": 445,
															"name": "Block",
															"src": "2270:116:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 433
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "approve",
																						"referencedDeclaration": 1117,
																						"type": "function (address,uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1211,
																								"type": "contract super DiverseTetherToken",
																								"value": "super"
																							},
																							"id": 446,
																							"name": "Identifier",
																							"src": "2413:5:2"
																						}
																					],
																					"id": 447,
																					"name": "MemberAccess",
																					"src": "2413:13:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 424,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 448,
																					"name": "Identifier",
																					"src": "2427:8:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 426,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 449,
																					"name": "Identifier",
																					"src": "2437:6:2"
																				}
																			],
																			"id": 450,
																			"name": "FunctionCall",
																			"src": "2413:31:2"
																		}
																	],
																	"id": 451,
																	"name": "Return",
																	"src": "2406:38:2"
																}
															],
															"id": 452,
															"name": "Block",
															"src": "2392:63:2"
														}
													],
													"id": 453,
													"name": "IfStatement",
													"src": "2254:201:2"
												}
											],
											"id": 454,
											"name": "Block",
											"src": "2244:217:2"
										}
									],
									"id": 455,
									"name": "FunctionDefinition",
									"src": "2165:296:2"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "allowance",
										"payable": false,
										"scope": 658,
										"stateMutability": "view",
										"superFunction": 1133,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 483,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 456,
															"name": "ElementaryTypeName",
															"src": "2562:7:2"
														}
													],
													"id": 457,
													"name": "VariableDeclaration",
													"src": "2562:14:2"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 483,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 458,
															"name": "ElementaryTypeName",
															"src": "2578:7:2"
														}
													],
													"id": 459,
													"name": "VariableDeclaration",
													"src": "2578:16:2"
												}
											],
											"id": 460,
											"name": "ParameterList",
											"src": "2561:34:2"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "remaining",
														"scope": 483,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 461,
															"name": "ElementaryTypeName",
															"src": "2621:4:2"
														}
													],
													"id": 462,
													"name": "VariableDeclaration",
													"src": "2621:14:2"
												}
											],
											"id": 463,
											"name": "ParameterList",
											"src": "2620:16:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 281,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 464,
															"name": "Identifier",
															"src": "2651:10:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 463
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "allowance",
																						"referencedDeclaration": 1133,
																						"type": "function (address,address) view external returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract StandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1134,
																										"type": "type(contract StandardToken)",
																										"value": "StandardToken"
																									},
																									"id": 465,
																									"name": "Identifier",
																									"src": "2684:13:2"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 279,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 466,
																									"name": "Identifier",
																									"src": "2698:15:2"
																								}
																							],
																							"id": 467,
																							"name": "FunctionCall",
																							"src": "2684:30:2"
																						}
																					],
																					"id": 468,
																					"name": "MemberAccess",
																					"src": "2684:40:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 457,
																						"type": "address",
																						"value": "_owner"
																					},
																					"id": 469,
																					"name": "Identifier",
																					"src": "2725:6:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 459,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 470,
																					"name": "Identifier",
																					"src": "2733:8:2"
																				}
																			],
																			"id": 471,
																			"name": "FunctionCall",
																			"src": "2684:58:2"
																		}
																	],
																	"id": 472,
																	"name": "Return",
																	"src": "2677:65:2"
																}
															],
															"id": 473,
															"name": "Block",
															"src": "2663:90:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 463
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "allowance",
																						"referencedDeclaration": 1133,
																						"type": "function (address,address) view returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1211,
																								"type": "contract super DiverseTetherToken",
																								"value": "super"
																							},
																							"id": 474,
																							"name": "Identifier",
																							"src": "2780:5:2"
																						}
																					],
																					"id": 475,
																					"name": "MemberAccess",
																					"src": "2780:15:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 457,
																						"type": "address",
																						"value": "_owner"
																					},
																					"id": 476,
																					"name": "Identifier",
																					"src": "2796:6:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 459,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 477,
																					"name": "Identifier",
																					"src": "2804:8:2"
																				}
																			],
																			"id": 478,
																			"name": "FunctionCall",
																			"src": "2780:33:2"
																		}
																	],
																	"id": 479,
																	"name": "Return",
																	"src": "2773:40:2"
																}
															],
															"id": 480,
															"name": "Block",
															"src": "2759:65:2"
														}
													],
													"id": 481,
													"name": "IfStatement",
													"src": "2647:177:2"
												}
											],
											"id": 482,
											"name": "Block",
											"src": "2637:193:2"
										}
									],
									"id": 483,
									"name": "FunctionDefinition",
									"src": "2543:287:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "deprecate",
										"payable": false,
										"scope": 658,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_upgradedAddress",
														"scope": 503,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 484,
															"name": "ElementaryTypeName",
															"src": "2912:7:2"
														}
													],
													"id": 485,
													"name": "VariableDeclaration",
													"src": "2912:24:2"
												}
											],
											"id": 486,
											"name": "ParameterList",
											"src": "2911:26:2"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 489,
											"name": "ParameterList",
											"src": "2955:0:2"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 753,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 487,
													"name": "Identifier",
													"src": "2945:9:2"
												}
											],
											"id": 488,
											"name": "ModifierInvocation",
											"src": "2945:9:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 281,
																		"type": "bool",
																		"value": "deprecated"
																	},
																	"id": 490,
																	"name": "Identifier",
																	"src": "2965:10:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 491,
																	"name": "Literal",
																	"src": "2978:4:2"
																}
															],
															"id": 492,
															"name": "Assignment",
															"src": "2965:17:2"
														}
													],
													"id": 493,
													"name": "ExpressionStatement",
													"src": "2965:17:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 279,
																		"type": "address",
																		"value": "upgradedAddress"
																	},
																	"id": 494,
																	"name": "Identifier",
																	"src": "2992:15:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 485,
																		"type": "address",
																		"value": "_upgradedAddress"
																	},
																	"id": 495,
																	"name": "Identifier",
																	"src": "3010:16:2"
																}
															],
															"id": 496,
															"name": "Assignment",
															"src": "2992:34:2"
														}
													],
													"id": 497,
													"name": "ExpressionStatement",
													"src": "2992:34:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 651,
																		"type": "function (address)",
																		"value": "Deprecate"
																	},
																	"id": 498,
																	"name": "Identifier",
																	"src": "3036:9:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 485,
																		"type": "address",
																		"value": "_upgradedAddress"
																	},
																	"id": 499,
																	"name": "Identifier",
																	"src": "3046:16:2"
																}
															],
															"id": 500,
															"name": "FunctionCall",
															"src": "3036:27:2"
														}
													],
													"id": 501,
													"name": "ExpressionStatement",
													"src": "3036:27:2"
												}
											],
											"id": 502,
											"name": "Block",
											"src": "2955:115:2"
										}
									],
									"id": 503,
									"name": "FunctionDefinition",
									"src": "2893:177:2"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "totalSupply",
										"payable": false,
										"scope": 658,
										"stateMutability": "view",
										"superFunction": 706,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 504,
											"name": "ParameterList",
											"src": "3153:2:2"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 521,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 505,
															"name": "ElementaryTypeName",
															"src": "3181:4:2"
														}
													],
													"id": 506,
													"name": "VariableDeclaration",
													"src": "3181:4:2"
												}
											],
											"id": 507,
											"name": "ParameterList",
											"src": "3180:6:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 281,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 508,
															"name": "Identifier",
															"src": "3201:10:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 507
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"arguments": [
																					null
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							null
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "totalSupply",
																						"referencedDeclaration": 706,
																						"type": "function () view external returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract StandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1134,
																										"type": "type(contract StandardToken)",
																										"value": "StandardToken"
																									},
																									"id": 509,
																									"name": "Identifier",
																									"src": "3234:13:2"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 279,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 510,
																									"name": "Identifier",
																									"src": "3248:15:2"
																								}
																							],
																							"id": 511,
																							"name": "FunctionCall",
																							"src": "3234:30:2"
																						}
																					],
																					"id": 512,
																					"name": "MemberAccess",
																					"src": "3234:42:2"
																				}
																			],
																			"id": 513,
																			"name": "FunctionCall",
																			"src": "3234:44:2"
																		}
																	],
																	"id": 514,
																	"name": "Return",
																	"src": "3227:51:2"
																}
															],
															"id": 515,
															"name": "Block",
															"src": "3213:76:2"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 507
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 701,
																				"type": "uint256",
																				"value": "_totalSupply"
																			},
																			"id": 516,
																			"name": "Identifier",
																			"src": "3316:12:2"
																		}
																	],
																	"id": 517,
																	"name": "Return",
																	"src": "3309:19:2"
																}
															],
															"id": 518,
															"name": "Block",
															"src": "3295:44:2"
														}
													],
													"id": 519,
													"name": "IfStatement",
													"src": "3197:142:2"
												}
											],
											"id": 520,
											"name": "Block",
											"src": "3187:158:2"
										}
									],
									"id": 521,
									"name": "FunctionDefinition",
									"src": "3133:212:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "issue",
										"payable": false,
										"scope": 658,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "amount",
														"scope": 563,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 522,
															"name": "ElementaryTypeName",
															"src": "3518:4:2"
														}
													],
													"id": 523,
													"name": "VariableDeclaration",
													"src": "3518:11:2"
												}
											],
											"id": 524,
											"name": "ParameterList",
											"src": "3517:13:2"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 527,
											"name": "ParameterList",
											"src": "3548:0:2"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 753,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 525,
													"name": "Identifier",
													"src": "3538:9:2"
												}
											],
											"id": 526,
											"name": "ModifierInvocation",
											"src": "3538:9:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1190,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 528,
																	"name": "Identifier",
																	"src": "3558:7:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "+",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 701,
																						"type": "uint256",
																						"value": "_totalSupply"
																					},
																					"id": 529,
																					"name": "Identifier",
																					"src": "3566:12:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 523,
																						"type": "uint256",
																						"value": "amount"
																					},
																					"id": 530,
																					"name": "Identifier",
																					"src": "3581:6:2"
																				}
																			],
																			"id": 531,
																			"name": "BinaryOperation",
																			"src": "3566:21:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 701,
																				"type": "uint256",
																				"value": "_totalSupply"
																			},
																			"id": 532,
																			"name": "Identifier",
																			"src": "3590:12:2"
																		}
																	],
																	"id": 533,
																	"name": "BinaryOperation",
																	"src": "3566:36:2"
																}
															],
															"id": 534,
															"name": "FunctionCall",
															"src": "3558:45:2"
														}
													],
													"id": 535,
													"name": "ExpressionStatement",
													"src": "3558:45:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1190,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 536,
																	"name": "Identifier",
																	"src": "3613:7:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "+",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 15,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 537,
																							"name": "Identifier",
																							"src": "3621:8:2"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 733,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 538,
																							"name": "Identifier",
																							"src": "3630:5:2"
																						}
																					],
																					"id": 539,
																					"name": "IndexAccess",
																					"src": "3621:15:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 523,
																						"type": "uint256",
																						"value": "amount"
																					},
																					"id": 540,
																					"name": "Identifier",
																					"src": "3639:6:2"
																				}
																			],
																			"id": 541,
																			"name": "BinaryOperation",
																			"src": "3621:24:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 15,
																						"type": "mapping(address => uint256)",
																						"value": "balances"
																					},
																					"id": 542,
																					"name": "Identifier",
																					"src": "3648:8:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 733,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 543,
																					"name": "Identifier",
																					"src": "3657:5:2"
																				}
																			],
																			"id": 544,
																			"name": "IndexAccess",
																			"src": "3648:15:2"
																		}
																	],
																	"id": 545,
																	"name": "BinaryOperation",
																	"src": "3621:42:2"
																}
															],
															"id": 546,
															"name": "FunctionCall",
															"src": "3613:51:2"
														}
													],
													"id": 547,
													"name": "ExpressionStatement",
													"src": "3613:51:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 15,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 548,
																			"name": "Identifier",
																			"src": "3675:8:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 733,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 549,
																			"name": "Identifier",
																			"src": "3684:5:2"
																		}
																	],
																	"id": 550,
																	"name": "IndexAccess",
																	"src": "3675:15:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 523,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 551,
																	"name": "Identifier",
																	"src": "3694:6:2"
																}
															],
															"id": 552,
															"name": "Assignment",
															"src": "3675:25:2"
														}
													],
													"id": 553,
													"name": "ExpressionStatement",
													"src": "3675:25:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 701,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 554,
																	"name": "Identifier",
																	"src": "3710:12:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 523,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 555,
																	"name": "Identifier",
																	"src": "3726:6:2"
																}
															],
															"id": 556,
															"name": "Assignment",
															"src": "3710:22:2"
														}
													],
													"id": 557,
													"name": "ExpressionStatement",
													"src": "3710:22:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 643,
																		"type": "function (uint256)",
																		"value": "Issue"
																	},
																	"id": 558,
																	"name": "Identifier",
																	"src": "3742:5:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 523,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 559,
																	"name": "Identifier",
																	"src": "3748:6:2"
																}
															],
															"id": 560,
															"name": "FunctionCall",
															"src": "3742:13:2"
														}
													],
													"id": 561,
													"name": "ExpressionStatement",
													"src": "3742:13:2"
												}
											],
											"id": 562,
											"name": "Block",
											"src": "3548:214:2"
										}
									],
									"id": 563,
									"name": "FunctionDefinition",
									"src": "3503:259:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "redeem",
										"payable": false,
										"scope": 658,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "amount",
														"scope": 599,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 564,
															"name": "ElementaryTypeName",
															"src": "4002:4:2"
														}
													],
													"id": 565,
													"name": "VariableDeclaration",
													"src": "4002:11:2"
												}
											],
											"id": 566,
											"name": "ParameterList",
											"src": "4001:13:2"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 569,
											"name": "ParameterList",
											"src": "4032:0:2"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 753,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 567,
													"name": "Identifier",
													"src": "4022:9:2"
												}
											],
											"id": 568,
											"name": "ModifierInvocation",
											"src": "4022:9:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1190,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 570,
																	"name": "Identifier",
																	"src": "4042:7:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 701,
																				"type": "uint256",
																				"value": "_totalSupply"
																			},
																			"id": 571,
																			"name": "Identifier",
																			"src": "4050:12:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 565,
																				"type": "uint256",
																				"value": "amount"
																			},
																			"id": 572,
																			"name": "Identifier",
																			"src": "4066:6:2"
																		}
																	],
																	"id": 573,
																	"name": "BinaryOperation",
																	"src": "4050:22:2"
																}
															],
															"id": 574,
															"name": "FunctionCall",
															"src": "4042:31:2"
														}
													],
													"id": 575,
													"name": "ExpressionStatement",
													"src": "4042:31:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1190,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 576,
																	"name": "Identifier",
																	"src": "4083:7:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 15,
																						"type": "mapping(address => uint256)",
																						"value": "balances"
																					},
																					"id": 577,
																					"name": "Identifier",
																					"src": "4091:8:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 733,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 578,
																					"name": "Identifier",
																					"src": "4100:5:2"
																				}
																			],
																			"id": 579,
																			"name": "IndexAccess",
																			"src": "4091:15:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 565,
																				"type": "uint256",
																				"value": "amount"
																			},
																			"id": 580,
																			"name": "Identifier",
																			"src": "4110:6:2"
																		}
																	],
																	"id": 581,
																	"name": "BinaryOperation",
																	"src": "4091:25:2"
																}
															],
															"id": 582,
															"name": "FunctionCall",
															"src": "4083:34:2"
														}
													],
													"id": 583,
													"name": "ExpressionStatement",
													"src": "4083:34:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 701,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 584,
																	"name": "Identifier",
																	"src": "4128:12:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 565,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 585,
																	"name": "Identifier",
																	"src": "4144:6:2"
																}
															],
															"id": 586,
															"name": "Assignment",
															"src": "4128:22:2"
														}
													],
													"id": 587,
													"name": "ExpressionStatement",
													"src": "4128:22:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 15,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 588,
																			"name": "Identifier",
																			"src": "4160:8:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 733,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 589,
																			"name": "Identifier",
																			"src": "4169:5:2"
																		}
																	],
																	"id": 590,
																	"name": "IndexAccess",
																	"src": "4160:15:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 565,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 591,
																	"name": "Identifier",
																	"src": "4179:6:2"
																}
															],
															"id": 592,
															"name": "Assignment",
															"src": "4160:25:2"
														}
													],
													"id": 593,
													"name": "ExpressionStatement",
													"src": "4160:25:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 647,
																		"type": "function (uint256)",
																		"value": "Redeem"
																	},
																	"id": 594,
																	"name": "Identifier",
																	"src": "4195:6:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 565,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 595,
																	"name": "Identifier",
																	"src": "4202:6:2"
																}
															],
															"id": 596,
															"name": "FunctionCall",
															"src": "4195:14:2"
														}
													],
													"id": 597,
													"name": "ExpressionStatement",
													"src": "4195:14:2"
												}
											],
											"id": 598,
											"name": "Block",
											"src": "4032:184:2"
										}
									],
									"id": 599,
									"name": "FunctionDefinition",
									"src": "3986:230:2"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "setParams",
										"payable": false,
										"scope": 658,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "newBasisPoints",
														"scope": 639,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 600,
															"name": "ElementaryTypeName",
															"src": "4241:4:2"
														}
													],
													"id": 601,
													"name": "VariableDeclaration",
													"src": "4241:19:2"
												},
												{
													"attributes": {
														"constant": false,
														"name": "newMaxFee",
														"scope": 639,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 602,
															"name": "ElementaryTypeName",
															"src": "4262:4:2"
														}
													],
													"id": 603,
													"name": "VariableDeclaration",
													"src": "4262:14:2"
												}
											],
											"id": 604,
											"name": "ParameterList",
											"src": "4240:37:2"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 607,
											"name": "ParameterList",
											"src": "4295:0:2"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 753,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 605,
													"name": "Identifier",
													"src": "4285:9:2"
												}
											],
											"id": 606,
											"name": "ModifierInvocation",
											"src": "4285:9:2"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1190,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 608,
																	"name": "Identifier",
																	"src": "4393:7:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 601,
																				"type": "uint256",
																				"value": "newBasisPoints"
																			},
																			"id": 609,
																			"name": "Identifier",
																			"src": "4401:14:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "3230",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 20",
																				"value": "20"
																			},
																			"id": 610,
																			"name": "Literal",
																			"src": "4418:2:2"
																		}
																	],
																	"id": 611,
																	"name": "BinaryOperation",
																	"src": "4401:19:2"
																}
															],
															"id": 612,
															"name": "FunctionCall",
															"src": "4393:28:2"
														}
													],
													"id": 613,
													"name": "ExpressionStatement",
													"src": "4393:28:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1190,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 614,
																	"name": "Identifier",
																	"src": "4431:7:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 603,
																				"type": "uint256",
																				"value": "newMaxFee"
																			},
																			"id": 615,
																			"name": "Identifier",
																			"src": "4439:9:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "3530",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 50",
																				"value": "50"
																			},
																			"id": 616,
																			"name": "Literal",
																			"src": "4451:2:2"
																		}
																	],
																	"id": 617,
																	"name": "BinaryOperation",
																	"src": "4439:14:2"
																}
															],
															"id": 618,
															"name": "FunctionCall",
															"src": "4431:23:2"
														}
													],
													"id": 619,
													"name": "ExpressionStatement",
													"src": "4431:23:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 18,
																		"type": "uint256",
																		"value": "basisPointsRate"
																	},
																	"id": 620,
																	"name": "Identifier",
																	"src": "4465:15:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 601,
																		"type": "uint256",
																		"value": "newBasisPoints"
																	},
																	"id": 621,
																	"name": "Identifier",
																	"src": "4483:14:2"
																}
															],
															"id": 622,
															"name": "Assignment",
															"src": "4465:32:2"
														}
													],
													"id": 623,
													"name": "ExpressionStatement",
													"src": "4465:32:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 21,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 624,
																	"name": "Identifier",
																	"src": "4507:10:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "mul",
																				"referencedDeclaration": 868,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 603,
																						"type": "uint256",
																						"value": "newMaxFee"
																					},
																					"id": 625,
																					"name": "Identifier",
																					"src": "4520:9:2"
																				}
																			],
																			"id": 626,
																			"name": "MemberAccess",
																			"src": "4520:13:2"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "**",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "3130",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "number",
																						"type": "int_const 10",
																						"value": "10"
																					},
																					"id": 627,
																					"name": "Literal",
																					"src": "4534:2:2"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 277,
																						"type": "uint256",
																						"value": "decimals"
																					},
																					"id": 628,
																					"name": "Identifier",
																					"src": "4538:8:2"
																				}
																			],
																			"id": 629,
																			"name": "BinaryOperation",
																			"src": "4534:12:2"
																		}
																	],
																	"id": 630,
																	"name": "FunctionCall",
																	"src": "4520:27:2"
																}
															],
															"id": 631,
															"name": "Assignment",
															"src": "4507:40:2"
														}
													],
													"id": 632,
													"name": "ExpressionStatement",
													"src": "4507:40:2"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 657,
																		"type": "function (uint256,uint256)",
																		"value": "Params"
																	},
																	"id": 633,
																	"name": "Identifier",
																	"src": "4558:6:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 18,
																		"type": "uint256",
																		"value": "basisPointsRate"
																	},
																	"id": 634,
																	"name": "Identifier",
																	"src": "4565:15:2"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 21,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 635,
																	"name": "Identifier",
																	"src": "4582:10:2"
																}
															],
															"id": 636,
															"name": "FunctionCall",
															"src": "4558:35:2"
														}
													],
													"id": 637,
													"name": "ExpressionStatement",
													"src": "4558:35:2"
												}
											],
											"id": 638,
											"name": "Block",
											"src": "4295:305:2"
										}
									],
									"id": 639,
									"name": "FunctionDefinition",
									"src": "4222:378:2"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Issue"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "amount",
														"scope": 643,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 640,
															"name": "ElementaryTypeName",
															"src": "4658:4:2"
														}
													],
													"id": 641,
													"name": "VariableDeclaration",
													"src": "4658:11:2"
												}
											],
											"id": 642,
											"name": "ParameterList",
											"src": "4657:13:2"
										}
									],
									"id": 643,
									"name": "EventDefinition",
									"src": "4646:25:2"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Redeem"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "amount",
														"scope": 647,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 644,
															"name": "ElementaryTypeName",
															"src": "4729:4:2"
														}
													],
													"id": 645,
													"name": "VariableDeclaration",
													"src": "4729:11:2"
												}
											],
											"id": 646,
											"name": "ParameterList",
											"src": "4728:13:2"
										}
									],
									"id": 647,
									"name": "EventDefinition",
									"src": "4716:26:2"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Deprecate"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "newAddress",
														"scope": 651,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 648,
															"name": "ElementaryTypeName",
															"src": "4806:7:2"
														}
													],
													"id": 649,
													"name": "VariableDeclaration",
													"src": "4806:18:2"
												}
											],
											"id": 650,
											"name": "ParameterList",
											"src": "4805:20:2"
										}
									],
									"id": 651,
									"name": "EventDefinition",
									"src": "4790:36:2"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Params"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "feeBasisPoints",
														"scope": 657,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 652,
															"name": "ElementaryTypeName",
															"src": "4886:4:2"
														}
													],
													"id": 653,
													"name": "VariableDeclaration",
													"src": "4886:19:2"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "maxFee",
														"scope": 657,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 654,
															"name": "ElementaryTypeName",
															"src": "4907:4:2"
														}
													],
													"id": 655,
													"name": "VariableDeclaration",
													"src": "4907:11:2"
												}
											],
											"id": 656,
											"name": "ParameterList",
											"src": "4885:34:2"
										}
									],
									"id": 657,
									"name": "EventDefinition",
									"src": "4873:47:2"
								}
							],
							"id": 658,
							"name": "ContractDefinition",
							"src": "178:4744:2"
						}
					],
					"id": 659,
					"name": "SourceUnit",
					"src": "32:4891:2"
				}
			},
			"contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							697
						]
					},
					"id": 698,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 660,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "contracts/ERC20Basic.sol",
							"file": "./ERC20Basic.sol",
							"id": 661,
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 730,
							"src": "58:26:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 662,
										"name": "ERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 729,
										"src": "193:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$729",
											"typeString": "contract ERC20Basic"
										}
									},
									"id": 663,
									"nodeType": "InheritanceSpecifier",
									"src": "193:10:3"
								}
							],
							"contractDependencies": [
								729
							],
							"contractKind": "contract",
							"documentation": "@title ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
							"fullyImplemented": false,
							"id": 697,
							"linearizedBaseContracts": [
								697,
								729
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"id": 672,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "229:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "244:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "244:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "228:32:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "286:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "286:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "285:6:3"
									},
									"scope": 697,
									"src": "210:82:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 681,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "319:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "345:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "345:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "318:38:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:0:3"
									},
									"scope": 697,
									"src": "297:67:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 688,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "386:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "403:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "403:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "385:29:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "421:0:3"
									},
									"scope": 697,
									"src": "369:53:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 696,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "442:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "465:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "490:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "490:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "441:60:3"
									},
									"src": "427:75:3"
								}
							],
							"scope": 698,
							"src": "175:329:3"
						}
					],
					"src": "32:473:3"
				},
				"id": 3,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/ERC20.sol",
						"exportedSymbols": {
							"ERC20": [
								697
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 660,
							"name": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"attributes": {
								"SourceUnit": 730,
								"absolutePath": "contracts/ERC20Basic.sol",
								"file": "./ERC20Basic.sol",
								"scope": 698,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 661,
							"name": "ImportDirective",
							"src": "58:26:3"
						},
						{
							"attributes": {
								"contractDependencies": [
									729
								],
								"contractKind": "contract",
								"documentation": "@title ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									697,
									729
								],
								"name": "ERC20",
								"scope": 698
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "ERC20Basic",
												"referencedDeclaration": 729,
												"type": "contract ERC20Basic"
											},
											"id": 662,
											"name": "UserDefinedTypeName",
											"src": "193:10:3"
										}
									],
									"id": 663,
									"name": "InheritanceSpecifier",
									"src": "193:10:3"
								},
								{
									"attributes": {
										"body": null,
										"constant": true,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "allowance",
										"payable": false,
										"scope": 697,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "owner",
														"scope": 672,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 664,
															"name": "ElementaryTypeName",
															"src": "229:7:3"
														}
													],
													"id": 665,
													"name": "VariableDeclaration",
													"src": "229:13:3"
												},
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 672,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 666,
															"name": "ElementaryTypeName",
															"src": "244:7:3"
														}
													],
													"id": 667,
													"name": "VariableDeclaration",
													"src": "244:15:3"
												}
											],
											"id": 668,
											"name": "ParameterList",
											"src": "228:32:3"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 672,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 669,
															"name": "ElementaryTypeName",
															"src": "286:4:3"
														}
													],
													"id": 670,
													"name": "VariableDeclaration",
													"src": "286:4:3"
												}
											],
											"id": 671,
											"name": "ParameterList",
											"src": "285:6:3"
										}
									],
									"id": 672,
									"name": "FunctionDefinition",
									"src": "210:82:3"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transferFrom",
										"payable": false,
										"scope": 697,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 681,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 673,
															"name": "ElementaryTypeName",
															"src": "319:7:3"
														}
													],
													"id": 674,
													"name": "VariableDeclaration",
													"src": "319:12:3"
												},
												{
													"attributes": {
														"constant": false,
														"name": "to",
														"scope": 681,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 675,
															"name": "ElementaryTypeName",
															"src": "333:7:3"
														}
													],
													"id": 676,
													"name": "VariableDeclaration",
													"src": "333:10:3"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 681,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 677,
															"name": "ElementaryTypeName",
															"src": "345:4:3"
														}
													],
													"id": 678,
													"name": "VariableDeclaration",
													"src": "345:10:3"
												}
											],
											"id": 679,
											"name": "ParameterList",
											"src": "318:38:3"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 680,
											"name": "ParameterList",
											"src": "363:0:3"
										}
									],
									"id": 681,
									"name": "FunctionDefinition",
									"src": "297:67:3"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "approve",
										"payable": false,
										"scope": 697,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 688,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 682,
															"name": "ElementaryTypeName",
															"src": "386:7:3"
														}
													],
													"id": 683,
													"name": "VariableDeclaration",
													"src": "386:15:3"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 688,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 684,
															"name": "ElementaryTypeName",
															"src": "403:4:3"
														}
													],
													"id": 685,
													"name": "VariableDeclaration",
													"src": "403:10:3"
												}
											],
											"id": 686,
											"name": "ParameterList",
											"src": "385:29:3"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 687,
											"name": "ParameterList",
											"src": "421:0:3"
										}
									],
									"id": 688,
									"name": "FunctionDefinition",
									"src": "369:53:3"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Approval"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "owner",
														"scope": 696,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 689,
															"name": "ElementaryTypeName",
															"src": "442:7:3"
														}
													],
													"id": 690,
													"name": "VariableDeclaration",
													"src": "442:21:3"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "spender",
														"scope": 696,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 691,
															"name": "ElementaryTypeName",
															"src": "465:7:3"
														}
													],
													"id": 692,
													"name": "VariableDeclaration",
													"src": "465:23:3"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "value",
														"scope": 696,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 693,
															"name": "ElementaryTypeName",
															"src": "490:4:3"
														}
													],
													"id": 694,
													"name": "VariableDeclaration",
													"src": "490:10:3"
												}
											],
											"id": 695,
											"name": "ParameterList",
											"src": "441:60:3"
										}
									],
									"id": 696,
									"name": "EventDefinition",
									"src": "427:75:3"
								}
							],
							"id": 697,
							"name": "ContractDefinition",
							"src": "175:329:3"
						}
					],
					"id": 698,
					"name": "SourceUnit",
					"src": "32:473:3"
				}
			},
			"contracts/ERC20Basic.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20Basic.sol",
					"exportedSymbols": {
						"ERC20Basic": [
							729
						]
					},
					"id": 730,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 699,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title ERC20Basic\n@dev Simpler version of ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "ERC20Basic",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 701,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 729,
									"src": "211:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 700,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "211:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 706,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "261:2:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "289:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "289:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "288:6:4"
									},
									"scope": 729,
									"src": "241:54:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 713,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "319:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "318:13:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "357:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "357:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "356:6:4"
									},
									"scope": 729,
									"src": "300:63:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 720,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "386:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "398:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "398:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "385:24:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:0:4"
									},
									"scope": 729,
									"src": "368:49:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 728,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "437:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "459:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "479:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "479:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "436:54:4"
									},
									"src": "422:69:4"
								}
							],
							"scope": 730,
							"src": "185:308:4"
						}
					],
					"src": "32:462:4"
				},
				"id": 4,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/ERC20Basic.sol",
						"exportedSymbols": {
							"ERC20Basic": [
								729
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 699,
							"name": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": "@title ERC20Basic\n@dev Simpler version of ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									729
								],
								"name": "ERC20Basic",
								"scope": 730
							},
							"children": [
								{
									"attributes": {
										"constant": false,
										"name": "_totalSupply",
										"scope": 729,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 700,
											"name": "ElementaryTypeName",
											"src": "211:4:4"
										}
									],
									"id": 701,
									"name": "VariableDeclaration",
									"src": "211:24:4"
								},
								{
									"attributes": {
										"body": null,
										"constant": true,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "totalSupply",
										"payable": false,
										"scope": 729,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 702,
											"name": "ParameterList",
											"src": "261:2:4"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 706,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 703,
															"name": "ElementaryTypeName",
															"src": "289:4:4"
														}
													],
													"id": 704,
													"name": "VariableDeclaration",
													"src": "289:4:4"
												}
											],
											"id": 705,
											"name": "ParameterList",
											"src": "288:6:4"
										}
									],
									"id": 706,
									"name": "FunctionDefinition",
									"src": "241:54:4"
								},
								{
									"attributes": {
										"body": null,
										"constant": true,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "balanceOf",
										"payable": false,
										"scope": 729,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "who",
														"scope": 713,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 707,
															"name": "ElementaryTypeName",
															"src": "319:7:4"
														}
													],
													"id": 708,
													"name": "VariableDeclaration",
													"src": "319:11:4"
												}
											],
											"id": 709,
											"name": "ParameterList",
											"src": "318:13:4"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 713,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 710,
															"name": "ElementaryTypeName",
															"src": "357:4:4"
														}
													],
													"id": 711,
													"name": "VariableDeclaration",
													"src": "357:4:4"
												}
											],
											"id": 712,
											"name": "ParameterList",
											"src": "356:6:4"
										}
									],
									"id": 713,
									"name": "FunctionDefinition",
									"src": "300:63:4"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transfer",
										"payable": false,
										"scope": 729,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "to",
														"scope": 720,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 714,
															"name": "ElementaryTypeName",
															"src": "386:7:4"
														}
													],
													"id": 715,
													"name": "VariableDeclaration",
													"src": "386:10:4"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 720,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 716,
															"name": "ElementaryTypeName",
															"src": "398:4:4"
														}
													],
													"id": 717,
													"name": "VariableDeclaration",
													"src": "398:10:4"
												}
											],
											"id": 718,
											"name": "ParameterList",
											"src": "385:24:4"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 719,
											"name": "ParameterList",
											"src": "416:0:4"
										}
									],
									"id": 720,
									"name": "FunctionDefinition",
									"src": "368:49:4"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Transfer"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "from",
														"scope": 728,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 721,
															"name": "ElementaryTypeName",
															"src": "437:7:4"
														}
													],
													"id": 722,
													"name": "VariableDeclaration",
													"src": "437:20:4"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "to",
														"scope": 728,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 723,
															"name": "ElementaryTypeName",
															"src": "459:7:4"
														}
													],
													"id": 724,
													"name": "VariableDeclaration",
													"src": "459:18:4"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "value",
														"scope": 728,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 725,
															"name": "ElementaryTypeName",
															"src": "479:4:4"
														}
													],
													"id": 726,
													"name": "VariableDeclaration",
													"src": "479:10:4"
												}
											],
											"id": 727,
											"name": "ParameterList",
											"src": "436:54:4"
										}
									],
									"id": 728,
									"name": "EventDefinition",
									"src": "422:69:4"
								}
							],
							"id": 729,
							"name": "ContractDefinition",
							"src": "185:308:4"
						}
					],
					"id": 730,
					"name": "SourceUnit",
					"src": "32:462:4"
				}
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							773
						]
					},
					"id": 774,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".",
							"fullyImplemented": true,
							"id": 773,
							"linearizedBaseContracts": [
								773
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 733,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 773,
									"src": "271:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 732,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "271:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "451:35:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 736,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "461:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 737,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "469:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "469:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "461:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "461:18:5"
											}
										]
									},
									"id": 742,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Ownable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "441:2:5"
									},
									"payable": false,
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:0:5"
									},
									"scope": 773,
									"src": "425:61:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "597:56:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 745,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "615:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "615:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 747,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "629:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "615:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 744,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "607:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "607:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "607:28:5"
											},
											{
												"id": 751,
												"nodeType": "PlaceholderStatement",
												"src": "645:1:5"
											}
										]
									},
									"id": 753,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:2:5"
									},
									"src": "576:77:5",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "883:85:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 760,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "897:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "917:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "909:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "909:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "897:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 770,
												"nodeType": "IfStatement",
												"src": "893:69:5",
												"trueBody": {
													"id": 769,
													"nodeType": "Block",
													"src": "921:41:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 765,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "935:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 766,
																	"name": "newOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "943:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "935:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 768,
															"nodeType": "ExpressionStatement",
															"src": "935:16:5"
														}
													]
												}
											}
										]
									},
									"id": 772,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 758,
											"modifierName": {
												"argumentTypes": null,
												"id": 757,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 753,
												"src": "873:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "873:9:5"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "848:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "847:18:5"
									},
									"payable": false,
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "883:0:5"
									},
									"scope": 773,
									"src": "821:147:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 774,
							"src": "248:723:5"
						}
					],
					"src": "32:940:5"
				},
				"id": 5,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/Ownable.sol",
						"exportedSymbols": {
							"Ownable": [
								773
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 731,
							"name": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": "@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									773
								],
								"name": "Ownable",
								"scope": 774
							},
							"children": [
								{
									"attributes": {
										"constant": false,
										"name": "owner",
										"scope": 773,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 732,
											"name": "ElementaryTypeName",
											"src": "271:7:5"
										}
									],
									"id": 733,
									"name": "VariableDeclaration",
									"src": "271:20:5"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "Ownable",
										"payable": false,
										"scope": 773,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 734,
											"name": "ParameterList",
											"src": "441:2:5"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 735,
											"name": "ParameterList",
											"src": "451:0:5"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 733,
																		"type": "address",
																		"value": "owner"
																	},
																	"id": 736,
																	"name": "Identifier",
																	"src": "461:5:5"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1172,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 737,
																			"name": "Identifier",
																			"src": "469:3:5"
																		}
																	],
																	"id": 738,
																	"name": "MemberAccess",
																	"src": "469:10:5"
																}
															],
															"id": 739,
															"name": "Assignment",
															"src": "461:18:5"
														}
													],
													"id": 740,
													"name": "ExpressionStatement",
													"src": "461:18:5"
												}
											],
											"id": 741,
											"name": "Block",
											"src": "451:35:5"
										}
									],
									"id": 742,
									"name": "FunctionDefinition",
									"src": "425:61:5"
								},
								{
									"attributes": {
										"name": "onlyOwner",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 743,
											"name": "ParameterList",
											"src": "594:2:5"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1190,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 744,
																	"name": "Identifier",
																	"src": "607:7:5"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1172,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 745,
																					"name": "Identifier",
																					"src": "615:3:5"
																				}
																			],
																			"id": 746,
																			"name": "MemberAccess",
																			"src": "615:10:5"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 733,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 747,
																			"name": "Identifier",
																			"src": "629:5:5"
																		}
																	],
																	"id": 748,
																	"name": "BinaryOperation",
																	"src": "615:19:5"
																}
															],
															"id": 749,
															"name": "FunctionCall",
															"src": "607:28:5"
														}
													],
													"id": 750,
													"name": "ExpressionStatement",
													"src": "607:28:5"
												},
												{
													"id": 751,
													"name": "PlaceholderStatement",
													"src": "645:1:5"
												}
											],
											"id": 752,
											"name": "Block",
											"src": "597:56:5"
										}
									],
									"id": 753,
									"name": "ModifierDefinition",
									"src": "576:77:5"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transferOwnership",
										"payable": false,
										"scope": 773,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "newOwner",
														"scope": 772,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 754,
															"name": "ElementaryTypeName",
															"src": "848:7:5"
														}
													],
													"id": 755,
													"name": "VariableDeclaration",
													"src": "848:16:5"
												}
											],
											"id": 756,
											"name": "ParameterList",
											"src": "847:18:5"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 759,
											"name": "ParameterList",
											"src": "883:0:5"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 753,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 757,
													"name": "Identifier",
													"src": "873:9:5"
												}
											],
											"id": 758,
											"name": "ModifierInvocation",
											"src": "873:9:5"
										},
										{
											"children": [
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "!=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 755,
																		"type": "address",
																		"value": "newOwner"
																	},
																	"id": 760,
																	"name": "Identifier",
																	"src": "897:8:5"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "address",
																		"type_conversion": true
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"type": "type(address)",
																				"value": "address"
																			},
																			"id": 761,
																			"name": "ElementaryTypeNameExpression",
																			"src": "909:7:5"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 762,
																			"name": "Literal",
																			"src": "917:1:5"
																		}
																	],
																	"id": 763,
																	"name": "FunctionCall",
																	"src": "909:10:5"
																}
															],
															"id": 764,
															"name": "BinaryOperation",
															"src": "897:22:5"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 733,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 765,
																					"name": "Identifier",
																					"src": "935:5:5"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 755,
																						"type": "address",
																						"value": "newOwner"
																					},
																					"id": 766,
																					"name": "Identifier",
																					"src": "943:8:5"
																				}
																			],
																			"id": 767,
																			"name": "Assignment",
																			"src": "935:16:5"
																		}
																	],
																	"id": 768,
																	"name": "ExpressionStatement",
																	"src": "935:16:5"
																}
															],
															"id": 769,
															"name": "Block",
															"src": "921:41:5"
														}
													],
													"id": 770,
													"name": "IfStatement",
													"src": "893:69:5"
												}
											],
											"id": 771,
											"name": "Block",
											"src": "883:85:5"
										}
									],
									"id": 772,
									"name": "FunctionDefinition",
									"src": "821:147:5"
								}
							],
							"id": 773,
							"name": "ContractDefinition",
							"src": "248:723:5"
						}
					],
					"id": 774,
					"name": "SourceUnit",
					"src": "32:940:5"
				}
			},
			"contracts/Pausable.sol": {
				"ast": {
					"absolutePath": "contracts/Pausable.sol",
					"exportedSymbols": {
						"Pausable": [
							833
						]
					},
					"id": 834,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 775,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 776,
							"nodeType": "ImportDirective",
							"scope": 834,
							"sourceUnit": 774,
							"src": "58:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 777,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 773,
										"src": "217:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$773",
											"typeString": "contract Ownable"
										}
									},
									"id": 778,
									"nodeType": "InheritanceSpecifier",
									"src": "217:7:6"
								}
							],
							"contractDependencies": [
								773
							],
							"contractKind": "contract",
							"documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
							"fullyImplemented": true,
							"id": 833,
							"linearizedBaseContracts": [
								833,
								773
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 780,
									"name": "Pause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "240:2:6"
									},
									"src": "229:14:6"
								},
								{
									"anonymous": false,
									"id": 782,
									"name": "Unpause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:2:6"
									},
									"src": "246:16:6"
								},
								{
									"constant": false,
									"id": 785,
									"name": "paused",
									"nodeType": "VariableDeclaration",
									"scope": 833,
									"src": "266:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 783,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "266:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 784,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "287:5:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "420:34:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "434:7:6",
															"subExpression": {
																"argumentTypes": null,
																"id": 788,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "435:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 787,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "426:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "426:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "426:16:6"
											},
											{
												"id": 792,
												"nodeType": "PlaceholderStatement",
												"src": "448:1:6"
											}
										]
									},
									"id": 794,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "417:2:6"
									},
									"src": "395:59:6",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "573:33:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 797,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "587:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "579:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "579:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "579:15:6"
											},
											{
												"id": 800,
												"nodeType": "PlaceholderStatement",
												"src": "600:1:6"
											}
										]
									},
									"id": 802,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "570:2:6"
									},
									"src": "551:55:6",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "733:37:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 809,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "739:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "748:4:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "739:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "739:13:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 813,
														"name": "Pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "758:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "758:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "758:7:6"
											}
										]
									},
									"id": 817,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 805,
											"modifierName": {
												"argumentTypes": null,
												"id": 804,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 753,
												"src": "702:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "702:9:6"
										},
										{
											"arguments": [],
											"id": 807,
											"modifierName": {
												"argumentTypes": null,
												"id": 806,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 794,
												"src": "712:13:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "712:13:6"
										}
									],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "699:2:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:0:6"
									},
									"scope": 833,
									"src": "685:85:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "899:40:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 824,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "905:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "914:5:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "905:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "905:14:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 828,
														"name": "Unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "925:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "925:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "925:9:6"
											}
										]
									},
									"id": 832,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 820,
											"modifierName": {
												"argumentTypes": null,
												"id": 819,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 753,
												"src": "871:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "871:9:6"
										},
										{
											"arguments": [],
											"id": 822,
											"modifierName": {
												"argumentTypes": null,
												"id": 821,
												"name": "whenPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 802,
												"src": "881:10:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "881:10:6"
										}
									],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "868:2:6"
									},
									"payable": false,
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "899:0:6"
									},
									"scope": 833,
									"src": "852:87:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 834,
							"src": "196:745:6"
						}
					],
					"src": "32:910:6"
				},
				"id": 6,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/Pausable.sol",
						"exportedSymbols": {
							"Pausable": [
								833
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 775,
							"name": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"attributes": {
								"SourceUnit": 774,
								"absolutePath": "contracts/Ownable.sol",
								"file": "./Ownable.sol",
								"scope": 834,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 776,
							"name": "ImportDirective",
							"src": "58:23:6"
						},
						{
							"attributes": {
								"contractDependencies": [
									773
								],
								"contractKind": "contract",
								"documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									833,
									773
								],
								"name": "Pausable",
								"scope": 834
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 773,
												"type": "contract Ownable"
											},
											"id": 777,
											"name": "UserDefinedTypeName",
											"src": "217:7:6"
										}
									],
									"id": 778,
									"name": "InheritanceSpecifier",
									"src": "217:7:6"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Pause"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 779,
											"name": "ParameterList",
											"src": "240:2:6"
										}
									],
									"id": 780,
									"name": "EventDefinition",
									"src": "229:14:6"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Unpause"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 781,
											"name": "ParameterList",
											"src": "259:2:6"
										}
									],
									"id": 782,
									"name": "EventDefinition",
									"src": "246:16:6"
								},
								{
									"attributes": {
										"constant": false,
										"name": "paused",
										"scope": 833,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "bool",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "bool",
												"type": "bool"
											},
											"id": 783,
											"name": "ElementaryTypeName",
											"src": "266:4:6"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "66616c7365",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "bool",
												"type": "bool",
												"value": "false"
											},
											"id": 784,
											"name": "Literal",
											"src": "287:5:6"
										}
									],
									"id": 785,
									"name": "VariableDeclaration",
									"src": "266:26:6"
								},
								{
									"attributes": {
										"name": "whenNotPaused",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 786,
											"name": "ParameterList",
											"src": "417:2:6"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1190,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 787,
																	"name": "Identifier",
																	"src": "426:7:6"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 785,
																				"type": "bool",
																				"value": "paused"
																			},
																			"id": 788,
																			"name": "Identifier",
																			"src": "435:6:6"
																		}
																	],
																	"id": 789,
																	"name": "UnaryOperation",
																	"src": "434:7:6"
																}
															],
															"id": 790,
															"name": "FunctionCall",
															"src": "426:16:6"
														}
													],
													"id": 791,
													"name": "ExpressionStatement",
													"src": "426:16:6"
												},
												{
													"id": 792,
													"name": "PlaceholderStatement",
													"src": "448:1:6"
												}
											],
											"id": 793,
											"name": "Block",
											"src": "420:34:6"
										}
									],
									"id": 794,
									"name": "ModifierDefinition",
									"src": "395:59:6"
								},
								{
									"attributes": {
										"name": "whenPaused",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 795,
											"name": "ParameterList",
											"src": "570:2:6"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1190,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 796,
																	"name": "Identifier",
																	"src": "579:7:6"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 785,
																		"type": "bool",
																		"value": "paused"
																	},
																	"id": 797,
																	"name": "Identifier",
																	"src": "587:6:6"
																}
															],
															"id": 798,
															"name": "FunctionCall",
															"src": "579:15:6"
														}
													],
													"id": 799,
													"name": "ExpressionStatement",
													"src": "579:15:6"
												},
												{
													"id": 800,
													"name": "PlaceholderStatement",
													"src": "600:1:6"
												}
											],
											"id": 801,
											"name": "Block",
											"src": "573:33:6"
										}
									],
									"id": 802,
									"name": "ModifierDefinition",
									"src": "551:55:6"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "pause",
										"payable": false,
										"scope": 833,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 803,
											"name": "ParameterList",
											"src": "699:2:6"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 808,
											"name": "ParameterList",
											"src": "733:0:6"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 753,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 804,
													"name": "Identifier",
													"src": "702:9:6"
												}
											],
											"id": 805,
											"name": "ModifierInvocation",
											"src": "702:9:6"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 794,
														"type": "modifier ()",
														"value": "whenNotPaused"
													},
													"id": 806,
													"name": "Identifier",
													"src": "712:13:6"
												}
											],
											"id": 807,
											"name": "ModifierInvocation",
											"src": "712:13:6"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 785,
																		"type": "bool",
																		"value": "paused"
																	},
																	"id": 809,
																	"name": "Identifier",
																	"src": "739:6:6"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 810,
																	"name": "Literal",
																	"src": "748:4:6"
																}
															],
															"id": 811,
															"name": "Assignment",
															"src": "739:13:6"
														}
													],
													"id": 812,
													"name": "ExpressionStatement",
													"src": "739:13:6"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"arguments": [
																	null
																],
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			null
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 780,
																		"type": "function ()",
																		"value": "Pause"
																	},
																	"id": 813,
																	"name": "Identifier",
																	"src": "758:5:6"
																}
															],
															"id": 814,
															"name": "FunctionCall",
															"src": "758:7:6"
														}
													],
													"id": 815,
													"name": "ExpressionStatement",
													"src": "758:7:6"
												}
											],
											"id": 816,
											"name": "Block",
											"src": "733:37:6"
										}
									],
									"id": 817,
									"name": "FunctionDefinition",
									"src": "685:85:6"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "unpause",
										"payable": false,
										"scope": 833,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 818,
											"name": "ParameterList",
											"src": "868:2:6"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 823,
											"name": "ParameterList",
											"src": "899:0:6"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 753,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 819,
													"name": "Identifier",
													"src": "871:9:6"
												}
											],
											"id": 820,
											"name": "ModifierInvocation",
											"src": "871:9:6"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 802,
														"type": "modifier ()",
														"value": "whenPaused"
													},
													"id": 821,
													"name": "Identifier",
													"src": "881:10:6"
												}
											],
											"id": 822,
											"name": "ModifierInvocation",
											"src": "881:10:6"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 785,
																		"type": "bool",
																		"value": "paused"
																	},
																	"id": 824,
																	"name": "Identifier",
																	"src": "905:6:6"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 825,
																	"name": "Literal",
																	"src": "914:5:6"
																}
															],
															"id": 826,
															"name": "Assignment",
															"src": "905:14:6"
														}
													],
													"id": 827,
													"name": "ExpressionStatement",
													"src": "905:14:6"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"arguments": [
																	null
																],
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			null
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 782,
																		"type": "function ()",
																		"value": "Unpause"
																	},
																	"id": 828,
																	"name": "Identifier",
																	"src": "925:7:6"
																}
															],
															"id": 829,
															"name": "FunctionCall",
															"src": "925:9:6"
														}
													],
													"id": 830,
													"name": "ExpressionStatement",
													"src": "925:9:6"
												}
											],
											"id": 831,
											"name": "Block",
											"src": "899:40:6"
										}
									],
									"id": 832,
									"name": "FunctionDefinition",
									"src": "852:87:6"
								}
							],
							"id": 833,
							"name": "ContractDefinition",
							"src": "196:745:6"
						}
					],
					"id": 834,
					"name": "SourceUnit",
					"src": "32:910:6"
				}
			},
			"contracts/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							931
						]
					},
					"id": 932,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 835,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
							"fullyImplemented": true,
							"id": 931,
							"linearizedBaseContracts": [
								931
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "238:134:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 844,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "252:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "257:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "252:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 850,
												"nodeType": "IfStatement",
												"src": "248:45:7",
												"trueBody": {
													"id": 849,
													"nodeType": "Block",
													"src": "260:33:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "281:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 843,
															"id": 848,
															"nodeType": "Return",
															"src": "274:8:7"
														}
													]
												}
											},
											{
												"assignments": [
													852
												],
												"declarations": [
													{
														"constant": false,
														"id": 852,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "302:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 851,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "302:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 853,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "314:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 854,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "318:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "314:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "302:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 858,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 852,
																	"src": "336:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 859,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "340:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "336:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 861,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "345:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "336:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 857,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "329:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "329:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "329:18:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 865,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 852,
													"src": "364:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 843,
												"id": 866,
												"nodeType": "Return",
												"src": "357:8:7"
											}
										]
									},
									"id": 868,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "184:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "184:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "195:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "195:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "183:22:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "229:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "228:9:7"
									},
									"scope": 931,
									"src": "171:201:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "445:216:7",
										"statements": [
											{
												"assignments": [
													878
												],
												"declarations": [
													{
														"constant": false,
														"id": 878,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 886,
														"src": "533:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 877,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "533:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 882,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 879,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "545:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 880,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "549:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "545:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "533:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 883,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 878,
													"src": "653:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 876,
												"id": 884,
												"nodeType": "Return",
												"src": "646:8:7"
											}
										]
									},
									"id": 886,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "391:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "402:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "390:22:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "436:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "435:9:7"
									},
									"scope": 931,
									"src": "378:283:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "734:53:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 896,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "751:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 897,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "756:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "751:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 895,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "744:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "744:14:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 901,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "775:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 902,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "779:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "775:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 894,
												"id": 904,
												"nodeType": "Return",
												"src": "768:12:7"
											}
										]
									},
									"id": 906,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "680:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "691:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "679:22:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "725:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "724:9:7"
									},
									"scope": 931,
									"src": "667:120:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "860:76:7",
										"statements": [
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 930,
														"src": "870:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 915,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "870:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 920,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 917,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "882:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 918,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "886:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "882:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "870:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 922,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "904:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 923,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 908,
																"src": "909:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "904:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 921,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "897:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "897:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "897:14:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 927,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 916,
													"src": "928:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 914,
												"id": 928,
												"nodeType": "Return",
												"src": "921:8:7"
											}
										]
									},
									"id": 930,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "806:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "817:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "805:22:7"
									},
									"payable": false,
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "851:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "850:9:7"
									},
									"scope": 931,
									"src": "793:143:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 932,
							"src": "148:790:7"
						}
					],
					"src": "32:907:7"
				},
				"id": 7,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/SafeMath.sol",
						"exportedSymbols": {
							"SafeMath": [
								931
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 835,
							"name": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "library",
								"documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									931
								],
								"name": "SafeMath",
								"scope": 932
							},
							"children": [
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "mul",
										"payable": false,
										"scope": 931,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 868,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 836,
															"name": "ElementaryTypeName",
															"src": "184:7:7"
														}
													],
													"id": 837,
													"name": "VariableDeclaration",
													"src": "184:9:7"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 868,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 838,
															"name": "ElementaryTypeName",
															"src": "195:7:7"
														}
													],
													"id": 839,
													"name": "VariableDeclaration",
													"src": "195:9:7"
												}
											],
											"id": 840,
											"name": "ParameterList",
											"src": "183:22:7"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 868,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 841,
															"name": "ElementaryTypeName",
															"src": "229:7:7"
														}
													],
													"id": 842,
													"name": "VariableDeclaration",
													"src": "229:7:7"
												}
											],
											"id": 843,
											"name": "ParameterList",
											"src": "228:9:7"
										},
										{
											"children": [
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 837,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 844,
																	"name": "Identifier",
																	"src": "252:1:7"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 845,
																	"name": "Literal",
																	"src": "257:1:7"
																}
															],
															"id": 846,
															"name": "BinaryOperation",
															"src": "252:6:7"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 843
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 847,
																			"name": "Literal",
																			"src": "281:1:7"
																		}
																	],
																	"id": 848,
																	"name": "Return",
																	"src": "274:8:7"
																}
															],
															"id": 849,
															"name": "Block",
															"src": "260:33:7"
														}
													],
													"id": 850,
													"name": "IfStatement",
													"src": "248:45:7"
												},
												{
													"attributes": {
														"assignments": [
															852
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 868,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 851,
																	"name": "ElementaryTypeName",
																	"src": "302:7:7"
																}
															],
															"id": 852,
															"name": "VariableDeclaration",
															"src": "302:9:7"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "*",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 837,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 853,
																	"name": "Identifier",
																	"src": "314:1:7"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 839,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 854,
																	"name": "Identifier",
																	"src": "318:1:7"
																}
															],
															"id": 855,
															"name": "BinaryOperation",
															"src": "314:5:7"
														}
													],
													"id": 856,
													"name": "VariableDeclarationStatement",
													"src": "302:17:7"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1189,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 857,
																	"name": "Identifier",
																	"src": "329:6:7"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "/",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 852,
																						"type": "uint256",
																						"value": "c"
																					},
																					"id": 858,
																					"name": "Identifier",
																					"src": "336:1:7"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 837,
																						"type": "uint256",
																						"value": "a"
																					},
																					"id": 859,
																					"name": "Identifier",
																					"src": "340:1:7"
																				}
																			],
																			"id": 860,
																			"name": "BinaryOperation",
																			"src": "336:5:7"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 839,
																				"type": "uint256",
																				"value": "b"
																			},
																			"id": 861,
																			"name": "Identifier",
																			"src": "345:1:7"
																		}
																	],
																	"id": 862,
																	"name": "BinaryOperation",
																	"src": "336:10:7"
																}
															],
															"id": 863,
															"name": "FunctionCall",
															"src": "329:18:7"
														}
													],
													"id": 864,
													"name": "ExpressionStatement",
													"src": "329:18:7"
												},
												{
													"attributes": {
														"functionReturnParameters": 843
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 852,
																"type": "uint256",
																"value": "c"
															},
															"id": 865,
															"name": "Identifier",
															"src": "364:1:7"
														}
													],
													"id": 866,
													"name": "Return",
													"src": "357:8:7"
												}
											],
											"id": 867,
											"name": "Block",
											"src": "238:134:7"
										}
									],
									"id": 868,
									"name": "FunctionDefinition",
									"src": "171:201:7"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "div",
										"payable": false,
										"scope": 931,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 886,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 869,
															"name": "ElementaryTypeName",
															"src": "391:7:7"
														}
													],
													"id": 870,
													"name": "VariableDeclaration",
													"src": "391:9:7"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 886,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 871,
															"name": "ElementaryTypeName",
															"src": "402:7:7"
														}
													],
													"id": 872,
													"name": "VariableDeclaration",
													"src": "402:9:7"
												}
											],
											"id": 873,
											"name": "ParameterList",
											"src": "390:22:7"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 886,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 874,
															"name": "ElementaryTypeName",
															"src": "436:7:7"
														}
													],
													"id": 875,
													"name": "VariableDeclaration",
													"src": "436:7:7"
												}
											],
											"id": 876,
											"name": "ParameterList",
											"src": "435:9:7"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															878
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 886,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 877,
																	"name": "ElementaryTypeName",
																	"src": "533:7:7"
																}
															],
															"id": 878,
															"name": "VariableDeclaration",
															"src": "533:9:7"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "/",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 870,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 879,
																	"name": "Identifier",
																	"src": "545:1:7"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 872,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 880,
																	"name": "Identifier",
																	"src": "549:1:7"
																}
															],
															"id": 881,
															"name": "BinaryOperation",
															"src": "545:5:7"
														}
													],
													"id": 882,
													"name": "VariableDeclarationStatement",
													"src": "533:17:7"
												},
												{
													"attributes": {
														"functionReturnParameters": 876
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 878,
																"type": "uint256",
																"value": "c"
															},
															"id": 883,
															"name": "Identifier",
															"src": "653:1:7"
														}
													],
													"id": 884,
													"name": "Return",
													"src": "646:8:7"
												}
											],
											"id": 885,
											"name": "Block",
											"src": "445:216:7"
										}
									],
									"id": 886,
									"name": "FunctionDefinition",
									"src": "378:283:7"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "sub",
										"payable": false,
										"scope": 931,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 906,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 887,
															"name": "ElementaryTypeName",
															"src": "680:7:7"
														}
													],
													"id": 888,
													"name": "VariableDeclaration",
													"src": "680:9:7"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 906,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 889,
															"name": "ElementaryTypeName",
															"src": "691:7:7"
														}
													],
													"id": 890,
													"name": "VariableDeclaration",
													"src": "691:9:7"
												}
											],
											"id": 891,
											"name": "ParameterList",
											"src": "679:22:7"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 906,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 892,
															"name": "ElementaryTypeName",
															"src": "725:7:7"
														}
													],
													"id": 893,
													"name": "VariableDeclaration",
													"src": "725:7:7"
												}
											],
											"id": 894,
											"name": "ParameterList",
											"src": "724:9:7"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1189,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 895,
																	"name": "Identifier",
																	"src": "744:6:7"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 890,
																				"type": "uint256",
																				"value": "b"
																			},
																			"id": 896,
																			"name": "Identifier",
																			"src": "751:1:7"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 888,
																				"type": "uint256",
																				"value": "a"
																			},
																			"id": 897,
																			"name": "Identifier",
																			"src": "756:1:7"
																		}
																	],
																	"id": 898,
																	"name": "BinaryOperation",
																	"src": "751:6:7"
																}
															],
															"id": 899,
															"name": "FunctionCall",
															"src": "744:14:7"
														}
													],
													"id": 900,
													"name": "ExpressionStatement",
													"src": "744:14:7"
												},
												{
													"attributes": {
														"functionReturnParameters": 894
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 888,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 901,
																	"name": "Identifier",
																	"src": "775:1:7"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 890,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 902,
																	"name": "Identifier",
																	"src": "779:1:7"
																}
															],
															"id": 903,
															"name": "BinaryOperation",
															"src": "775:5:7"
														}
													],
													"id": 904,
													"name": "Return",
													"src": "768:12:7"
												}
											],
											"id": 905,
											"name": "Block",
											"src": "734:53:7"
										}
									],
									"id": 906,
									"name": "FunctionDefinition",
									"src": "667:120:7"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "add",
										"payable": false,
										"scope": 931,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 930,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 907,
															"name": "ElementaryTypeName",
															"src": "806:7:7"
														}
													],
													"id": 908,
													"name": "VariableDeclaration",
													"src": "806:9:7"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 930,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 909,
															"name": "ElementaryTypeName",
															"src": "817:7:7"
														}
													],
													"id": 910,
													"name": "VariableDeclaration",
													"src": "817:9:7"
												}
											],
											"id": 911,
											"name": "ParameterList",
											"src": "805:22:7"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 930,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 912,
															"name": "ElementaryTypeName",
															"src": "851:7:7"
														}
													],
													"id": 913,
													"name": "VariableDeclaration",
													"src": "851:7:7"
												}
											],
											"id": 914,
											"name": "ParameterList",
											"src": "850:9:7"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															916
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 930,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 915,
																	"name": "ElementaryTypeName",
																	"src": "870:7:7"
																}
															],
															"id": 916,
															"name": "VariableDeclaration",
															"src": "870:9:7"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 908,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 917,
																	"name": "Identifier",
																	"src": "882:1:7"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 910,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 918,
																	"name": "Identifier",
																	"src": "886:1:7"
																}
															],
															"id": 919,
															"name": "BinaryOperation",
															"src": "882:5:7"
														}
													],
													"id": 920,
													"name": "VariableDeclarationStatement",
													"src": "870:17:7"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1189,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 921,
																	"name": "Identifier",
																	"src": "897:6:7"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 916,
																				"type": "uint256",
																				"value": "c"
																			},
																			"id": 922,
																			"name": "Identifier",
																			"src": "904:1:7"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 908,
																				"type": "uint256",
																				"value": "a"
																			},
																			"id": 923,
																			"name": "Identifier",
																			"src": "909:1:7"
																		}
																	],
																	"id": 924,
																	"name": "BinaryOperation",
																	"src": "904:6:7"
																}
															],
															"id": 925,
															"name": "FunctionCall",
															"src": "897:14:7"
														}
													],
													"id": 926,
													"name": "ExpressionStatement",
													"src": "897:14:7"
												},
												{
													"attributes": {
														"functionReturnParameters": 914
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 916,
																"type": "uint256",
																"value": "c"
															},
															"id": 927,
															"name": "Identifier",
															"src": "928:1:7"
														}
													],
													"id": 928,
													"name": "Return",
													"src": "921:8:7"
												}
											],
											"id": 929,
											"name": "Block",
											"src": "860:76:7"
										}
									],
									"id": 930,
									"name": "FunctionDefinition",
									"src": "793:143:7"
								}
							],
							"id": 931,
							"name": "ContractDefinition",
							"src": "148:790:7"
						}
					],
					"id": 932,
					"name": "SourceUnit",
					"src": "32:907:7"
				}
			},
			"contracts/StandardToken.sol": {
				"ast": {
					"absolutePath": "contracts/StandardToken.sol",
					"exportedSymbols": {
						"StandardToken": [
							1134
						]
					},
					"id": 1135,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 933,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "contracts/BasicToken.sol",
							"file": "./BasicToken.sol",
							"id": 934,
							"nodeType": "ImportDirective",
							"scope": 1135,
							"sourceUnit": 142,
							"src": "58:26:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 935,
							"nodeType": "ImportDirective",
							"scope": 1135,
							"sourceUnit": 698,
							"src": "85:21:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 936,
										"name": "BasicToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 141,
										"src": "400:10:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BasicToken_$141",
											"typeString": "contract BasicToken"
										}
									},
									"id": 937,
									"nodeType": "InheritanceSpecifier",
									"src": "400:10:8"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 938,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 697,
										"src": "412:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$697",
											"typeString": "contract ERC20"
										}
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "412:5:8"
								}
							],
							"contractDependencies": [
								697,
								729,
								773,
								141
							],
							"contractKind": "contract",
							"documentation": "@title Standard ERC20 token\n * @dev Implementation of the basic standard token.\n@dev https://github.com/ethereum/EIPs/issues/20\n@dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol",
							"fullyImplemented": false,
							"id": 1134,
							"linearizedBaseContracts": [
								1134,
								697,
								141,
								729,
								773
							],
							"name": "StandardToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 945,
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 1134,
									"src": "425:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 944,
										"keyType": {
											"id": 940,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "434:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "425:46:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 943,
											"keyType": {
												"id": 941,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "454:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "445:25:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 942,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "465:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 952,
									"name": "MAX_UINT",
									"nodeType": "VariableDeclaration",
									"scope": 1134,
									"src": "493:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 946,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "493:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
										},
										"id": 951,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
											},
											"id": 949,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"hexValue": "32",
												"id": 947,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "525:1:8",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "323536",
												"id": 948,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "528:3:8",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_256_by_1",
													"typeString": "int_const 256"
												},
												"value": "256"
											},
											"src": "525:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31",
											"id": 950,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "534:1:8",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "525:10:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "911:786:8",
										"statements": [
											{
												"assignments": [
													966
												],
												"declarations": [
													{
														"constant": false,
														"id": 966,
														"name": "_allowance",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "921:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": null,
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 973,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 967,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "938:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 969,
														"indexExpression": {
															"argumentTypes": null,
															"id": 968,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "946:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "938:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 972,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 970,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "953:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "953:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "938:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "921:43:8"
											},
											{
												"assignments": [
													975
												],
												"declarations": [
													{
														"constant": false,
														"id": 975,
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "1130:8:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 974,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1130:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 984,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1175:5:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 978,
																			"name": "basisPointsRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 18,
																			"src": "1153:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 976,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "1142:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 868,
																		"src": "1142:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1142:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 980,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1141:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 886,
														"src": "1141:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1141:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1130:51:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 985,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "1195:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 986,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1201:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1195:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 993,
												"nodeType": "IfStatement",
												"src": "1191:63:8",
												"trueBody": {
													"id": 992,
													"nodeType": "Block",
													"src": "1213:41:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 988,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "1227:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 989,
																	"name": "maximumFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "1233:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1227:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 991,
															"nodeType": "ExpressionStatement",
															"src": "1227:16:8"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 994,
														"name": "_allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "1267:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 995,
														"name": "MAX_UINT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "1280:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1267:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1010,
												"nodeType": "IfStatement",
												"src": "1263:103:8",
												"trueBody": {
													"id": 1009,
													"nodeType": "Block",
													"src": "1290:76:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 997,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 945,
																			"src": "1304:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1001,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 998,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 954,
																			"src": "1312:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1304:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1002,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 999,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "1319:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1319:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1304:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1005,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "1348:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1003,
																			"name": "_allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 966,
																			"src": "1333:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 906,
																		"src": "1333:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1333:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1304:51:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1008,
															"nodeType": "ExpressionStatement",
															"src": "1304:51:8"
														}
													]
												}
											},
											{
												"assignments": [
													1012
												],
												"declarations": [
													{
														"constant": false,
														"id": 1012,
														"name": "sendAmount",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "1375:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1011,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1375:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1017,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1015,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "1404:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1013,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "1393:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 906,
														"src": "1393:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1375:33:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1018,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1418:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1020,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1019,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "1427:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1418:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1025,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "1456:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1021,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "1436:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1023,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1022,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "1445:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1436:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 906,
															"src": "1436:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1436:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1418:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "1418:45:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1029,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1473:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1031,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1030,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "1482:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1473:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1036,
																"name": "sendAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "1507:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1032,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "1489:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1034,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1033,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "1498:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1489:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 930,
															"src": "1489:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1489:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1473:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "1473:45:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1040,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "1532:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1538:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1532:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1061,
												"nodeType": "IfStatement",
												"src": "1528:121:8",
												"trueBody": {
													"id": 1060,
													"nodeType": "Block",
													"src": "1541:108:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1043,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "1555:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1045,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1044,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 733,
																		"src": "1564:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1555:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1050,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 975,
																			"src": "1593:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1046,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 15,
																				"src": "1573:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1048,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1047,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 733,
																				"src": "1582:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1573:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 930,
																		"src": "1573:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1555:42:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1053,
															"nodeType": "ExpressionStatement",
															"src": "1555:42:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1055,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "1620:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1056,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 733,
																		"src": "1627:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1057,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 975,
																		"src": "1634:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1054,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "1611:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1611:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1059,
															"nodeType": "ExpressionStatement",
															"src": "1611:27:8"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1063,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "1667:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1064,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "1674:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1065,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "1679:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1062,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "1658:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1658:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "1658:32:8"
											}
										]
									},
									"id": 1069,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_96_by_1",
														"typeString": "int_const 96"
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "903:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "907:2:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "903:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_96_by_1",
														"typeString": "int_const 96"
													}
												}
											],
											"id": 964,
											"modifierName": {
												"argumentTypes": null,
												"id": 960,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "887:15:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "887:23:8"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "839:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "854:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "867:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "867:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "838:41:8"
									},
									"payable": false,
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:8"
									},
									"scope": 1134,
									"src": "817:880:8",
									"stateMutability": "nonpayable",
									"superFunction": 681,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "2016:484:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2339:56:8",
															"subExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1084,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1082,
																						"name": "_value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1073,
																						"src": "2342:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 1083,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2352:1:8",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "2342:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 1085,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2341:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1093,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 1086,
																								"name": "allowed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 945,
																								"src": "2359:7:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(address => uint256))"
																								}
																							},
																							"id": 1089,
																							"indexExpression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 1087,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1172,
																									"src": "2367:3:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 1088,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": null,
																								"src": "2367:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2359:19:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 1091,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1090,
																							"name": "_spender",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1071,
																							"src": "2379:8:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2359:29:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 1092,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2392:1:8",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "2359:34:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 1094,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2358:36:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2341:53:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1096,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2340:55:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1081,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "2331:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2331:65:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "2331:65:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1100,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "2407:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1104,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1101,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "2415:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2415:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2407:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1105,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1103,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "2427:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2407:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1106,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "2439:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2407:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "2407:38:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1110,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "2464:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2464:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1112,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "2476:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1113,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "2486:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1109,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "2455:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2455:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1115,
												"nodeType": "ExpressionStatement",
												"src": "2455:38:8"
											}
										]
									},
									"id": 1117,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2008:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:2:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "2008:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 1079,
											"modifierName": {
												"argumentTypes": null,
												"id": 1075,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "1992:15:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1992:23:8"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "1954:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1954:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "1972:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1972:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1953:31:8"
									},
									"payable": false,
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2016:0:8"
									},
									"scope": 1134,
									"src": "1937:563:8",
									"stateMutability": "nonpayable",
									"superFunction": 688,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "2919:49:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1126,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "2936:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1128,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1127,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "2944:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2936:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1130,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1129,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "2952:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2936:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1125,
												"id": 1131,
												"nodeType": "Return",
												"src": "2929:32:8"
											}
										]
									},
									"id": 1133,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "2844:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2844:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "2860:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2860:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2843:34:8"
									},
									"payable": false,
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "2903:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2903:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2902:16:8"
									},
									"scope": 1134,
									"src": "2825:143:8",
									"stateMutability": "view",
									"superFunction": 672,
									"visibility": "public"
								}
							],
							"scope": 1135,
							"src": "374:2597:8"
						}
					],
					"src": "32:2940:8"
				},
				"id": 8,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/StandardToken.sol",
						"exportedSymbols": {
							"StandardToken": [
								1134
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 933,
							"name": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"attributes": {
								"SourceUnit": 142,
								"absolutePath": "contracts/BasicToken.sol",
								"file": "./BasicToken.sol",
								"scope": 1135,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 934,
							"name": "ImportDirective",
							"src": "58:26:8"
						},
						{
							"attributes": {
								"SourceUnit": 698,
								"absolutePath": "contracts/ERC20.sol",
								"file": "./ERC20.sol",
								"scope": 1135,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 935,
							"name": "ImportDirective",
							"src": "85:21:8"
						},
						{
							"attributes": {
								"contractDependencies": [
									697,
									729,
									773,
									141
								],
								"contractKind": "contract",
								"documentation": "@title Standard ERC20 token\n * @dev Implementation of the basic standard token.\n@dev https://github.com/ethereum/EIPs/issues/20\n@dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									1134,
									697,
									141,
									729,
									773
								],
								"name": "StandardToken",
								"scope": 1135
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "BasicToken",
												"referencedDeclaration": 141,
												"type": "contract BasicToken"
											},
											"id": 936,
											"name": "UserDefinedTypeName",
											"src": "400:10:8"
										}
									],
									"id": 937,
									"name": "InheritanceSpecifier",
									"src": "400:10:8"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "ERC20",
												"referencedDeclaration": 697,
												"type": "contract ERC20"
											},
											"id": 938,
											"name": "UserDefinedTypeName",
											"src": "412:5:8"
										}
									],
									"id": 939,
									"name": "InheritanceSpecifier",
									"src": "412:5:8"
								},
								{
									"attributes": {
										"constant": false,
										"name": "allowed",
										"scope": 1134,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => mapping(address => uint256))",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => mapping(address => uint256))"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 940,
													"name": "ElementaryTypeName",
													"src": "434:7:8"
												},
												{
													"attributes": {
														"type": "mapping(address => uint256)"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 941,
															"name": "ElementaryTypeName",
															"src": "454:7:8"
														},
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 942,
															"name": "ElementaryTypeName",
															"src": "465:4:8"
														}
													],
													"id": 943,
													"name": "Mapping",
													"src": "445:25:8"
												}
											],
											"id": 944,
											"name": "Mapping",
											"src": "425:46:8"
										}
									],
									"id": 945,
									"name": "VariableDeclaration",
									"src": "425:61:8"
								},
								{
									"attributes": {
										"constant": true,
										"name": "MAX_UINT",
										"scope": 1134,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 946,
											"name": "ElementaryTypeName",
											"src": "493:4:8"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"commonType": {
													"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
													"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
												},
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"operator": "-",
												"type": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
															"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "**",
														"type": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 947,
															"name": "Literal",
															"src": "525:1:8"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "323536",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 256",
																"value": "256"
															},
															"id": 948,
															"name": "Literal",
															"src": "528:3:8"
														}
													],
													"id": 949,
													"name": "BinaryOperation",
													"src": "525:6:8"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"hexvalue": "31",
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"subdenomination": null,
														"token": "number",
														"type": "int_const 1",
														"value": "1"
													},
													"id": 950,
													"name": "Literal",
													"src": "534:1:8"
												}
											],
											"id": 951,
											"name": "BinaryOperation",
											"src": "525:10:8"
										}
									],
									"id": 952,
									"name": "VariableDeclaration",
									"src": "493:42:8"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transferFrom",
										"payable": false,
										"scope": 1134,
										"stateMutability": "nonpayable",
										"superFunction": 681,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_from",
														"scope": 1069,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 953,
															"name": "ElementaryTypeName",
															"src": "839:7:8"
														}
													],
													"id": 954,
													"name": "VariableDeclaration",
													"src": "839:13:8"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 1069,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 955,
															"name": "ElementaryTypeName",
															"src": "854:7:8"
														}
													],
													"id": 956,
													"name": "VariableDeclaration",
													"src": "854:11:8"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 1069,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 957,
															"name": "ElementaryTypeName",
															"src": "867:4:8"
														}
													],
													"id": 958,
													"name": "VariableDeclaration",
													"src": "867:11:8"
												}
											],
											"id": 959,
											"name": "ParameterList",
											"src": "838:41:8"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 965,
											"name": "ParameterList",
											"src": "911:0:8"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 39,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 960,
													"name": "Identifier",
													"src": "887:15:8"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_96_by_1",
															"typeString": "int_const 96"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 96"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "33",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 3",
																"value": "3"
															},
															"id": 961,
															"name": "Literal",
															"src": "903:1:8"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 962,
															"name": "Literal",
															"src": "907:2:8"
														}
													],
													"id": 963,
													"name": "BinaryOperation",
													"src": "903:6:8"
												}
											],
											"id": 964,
											"name": "ModifierInvocation",
											"src": "887:23:8"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															966
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "_allowance",
																"scope": 1069,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"typeName": null,
																"value": null,
																"visibility": "internal"
															},
															"children": [],
															"id": 966,
															"name": "VariableDeclaration",
															"src": "921:14:8"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "mapping(address => uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 945,
																				"type": "mapping(address => mapping(address => uint256))",
																				"value": "allowed"
																			},
																			"id": 967,
																			"name": "Identifier",
																			"src": "938:7:8"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 954,
																				"type": "address",
																				"value": "_from"
																			},
																			"id": 968,
																			"name": "Identifier",
																			"src": "946:5:8"
																		}
																	],
																	"id": 969,
																	"name": "IndexAccess",
																	"src": "938:14:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1172,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 970,
																			"name": "Identifier",
																			"src": "953:3:8"
																		}
																	],
																	"id": 971,
																	"name": "MemberAccess",
																	"src": "953:10:8"
																}
															],
															"id": 972,
															"name": "IndexAccess",
															"src": "938:26:8"
														}
													],
													"id": 973,
													"name": "VariableDeclarationStatement",
													"src": "921:43:8"
												},
												{
													"attributes": {
														"assignments": [
															975
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "fee",
																"scope": 1069,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 974,
																	"name": "ElementaryTypeName",
																	"src": "1130:4:8"
																}
															],
															"id": 975,
															"name": "VariableDeclaration",
															"src": "1130:8:8"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "div",
																		"referencedDeclaration": 886,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "mul",
																								"referencedDeclaration": 868,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 958,
																										"type": "uint256",
																										"value": "_value"
																									},
																									"id": 976,
																									"name": "Identifier",
																									"src": "1142:6:8"
																								}
																							],
																							"id": 977,
																							"name": "MemberAccess",
																							"src": "1142:10:8"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 18,
																								"type": "uint256",
																								"value": "basisPointsRate"
																							},
																							"id": 978,
																							"name": "Identifier",
																							"src": "1153:15:8"
																						}
																					],
																					"id": 979,
																					"name": "FunctionCall",
																					"src": "1142:27:8"
																				}
																			],
																			"id": 980,
																			"name": "TupleExpression",
																			"src": "1141:29:8"
																		}
																	],
																	"id": 981,
																	"name": "MemberAccess",
																	"src": "1141:33:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "3130303030",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 10000",
																		"value": "10000"
																	},
																	"id": 982,
																	"name": "Literal",
																	"src": "1175:5:8"
																}
															],
															"id": 983,
															"name": "FunctionCall",
															"src": "1141:40:8"
														}
													],
													"id": 984,
													"name": "VariableDeclarationStatement",
													"src": "1130:51:8"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 975,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 985,
																	"name": "Identifier",
																	"src": "1195:3:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 21,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 986,
																	"name": "Identifier",
																	"src": "1201:10:8"
																}
															],
															"id": 987,
															"name": "BinaryOperation",
															"src": "1195:16:8"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 975,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 988,
																					"name": "Identifier",
																					"src": "1227:3:8"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 21,
																						"type": "uint256",
																						"value": "maximumFee"
																					},
																					"id": 989,
																					"name": "Identifier",
																					"src": "1233:10:8"
																				}
																			],
																			"id": 990,
																			"name": "Assignment",
																			"src": "1227:16:8"
																		}
																	],
																	"id": 991,
																	"name": "ExpressionStatement",
																	"src": "1227:16:8"
																}
															],
															"id": 992,
															"name": "Block",
															"src": "1213:41:8"
														}
													],
													"id": 993,
													"name": "IfStatement",
													"src": "1191:63:8"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "<",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 966,
																		"type": "uint256",
																		"value": "_allowance"
																	},
																	"id": 994,
																	"name": "Identifier",
																	"src": "1267:10:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 952,
																		"type": "uint256",
																		"value": "MAX_UINT"
																	},
																	"id": 995,
																	"name": "Identifier",
																	"src": "1280:8:8"
																}
															],
															"id": 996,
															"name": "BinaryOperation",
															"src": "1267:21:8"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"type": "mapping(address => uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 945,
																										"type": "mapping(address => mapping(address => uint256))",
																										"value": "allowed"
																									},
																									"id": 997,
																									"name": "Identifier",
																									"src": "1304:7:8"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 954,
																										"type": "address",
																										"value": "_from"
																									},
																									"id": 998,
																									"name": "Identifier",
																									"src": "1312:5:8"
																								}
																							],
																							"id": 1001,
																							"name": "IndexAccess",
																							"src": "1304:14:8"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1172,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 999,
																									"name": "Identifier",
																									"src": "1319:3:8"
																								}
																							],
																							"id": 1000,
																							"name": "MemberAccess",
																							"src": "1319:10:8"
																						}
																					],
																					"id": 1002,
																					"name": "IndexAccess",
																					"src": "1304:26:8"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sub",
																								"referencedDeclaration": 906,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 966,
																										"type": "uint256",
																										"value": "_allowance"
																									},
																									"id": 1003,
																									"name": "Identifier",
																									"src": "1333:10:8"
																								}
																							],
																							"id": 1004,
																							"name": "MemberAccess",
																							"src": "1333:14:8"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 958,
																								"type": "uint256",
																								"value": "_value"
																							},
																							"id": 1005,
																							"name": "Identifier",
																							"src": "1348:6:8"
																						}
																					],
																					"id": 1006,
																					"name": "FunctionCall",
																					"src": "1333:22:8"
																				}
																			],
																			"id": 1007,
																			"name": "Assignment",
																			"src": "1304:51:8"
																		}
																	],
																	"id": 1008,
																	"name": "ExpressionStatement",
																	"src": "1304:51:8"
																}
															],
															"id": 1009,
															"name": "Block",
															"src": "1290:76:8"
														}
													],
													"id": 1010,
													"name": "IfStatement",
													"src": "1263:103:8"
												},
												{
													"attributes": {
														"assignments": [
															1012
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "sendAmount",
																"scope": 1069,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 1011,
																	"name": "ElementaryTypeName",
																	"src": "1375:4:8"
																}
															],
															"id": 1012,
															"name": "VariableDeclaration",
															"src": "1375:15:8"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sub",
																		"referencedDeclaration": 906,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 958,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 1013,
																			"name": "Identifier",
																			"src": "1393:6:8"
																		}
																	],
																	"id": 1014,
																	"name": "MemberAccess",
																	"src": "1393:10:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 975,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 1015,
																	"name": "Identifier",
																	"src": "1404:3:8"
																}
															],
															"id": 1016,
															"name": "FunctionCall",
															"src": "1393:15:8"
														}
													],
													"id": 1017,
													"name": "VariableDeclarationStatement",
													"src": "1375:33:8"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 15,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 1018,
																			"name": "Identifier",
																			"src": "1418:8:8"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 954,
																				"type": "address",
																				"value": "_from"
																			},
																			"id": 1019,
																			"name": "Identifier",
																			"src": "1427:5:8"
																		}
																	],
																	"id": 1020,
																	"name": "IndexAccess",
																	"src": "1418:15:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sub",
																				"referencedDeclaration": 906,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 15,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 1021,
																							"name": "Identifier",
																							"src": "1436:8:8"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 954,
																								"type": "address",
																								"value": "_from"
																							},
																							"id": 1022,
																							"name": "Identifier",
																							"src": "1445:5:8"
																						}
																					],
																					"id": 1023,
																					"name": "IndexAccess",
																					"src": "1436:15:8"
																				}
																			],
																			"id": 1024,
																			"name": "MemberAccess",
																			"src": "1436:19:8"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 958,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 1025,
																			"name": "Identifier",
																			"src": "1456:6:8"
																		}
																	],
																	"id": 1026,
																	"name": "FunctionCall",
																	"src": "1436:27:8"
																}
															],
															"id": 1027,
															"name": "Assignment",
															"src": "1418:45:8"
														}
													],
													"id": 1028,
													"name": "ExpressionStatement",
													"src": "1418:45:8"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 15,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 1029,
																			"name": "Identifier",
																			"src": "1473:8:8"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 956,
																				"type": "address",
																				"value": "_to"
																			},
																			"id": 1030,
																			"name": "Identifier",
																			"src": "1482:3:8"
																		}
																	],
																	"id": 1031,
																	"name": "IndexAccess",
																	"src": "1473:13:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "add",
																				"referencedDeclaration": 930,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 15,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 1032,
																							"name": "Identifier",
																							"src": "1489:8:8"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 956,
																								"type": "address",
																								"value": "_to"
																							},
																							"id": 1033,
																							"name": "Identifier",
																							"src": "1498:3:8"
																						}
																					],
																					"id": 1034,
																					"name": "IndexAccess",
																					"src": "1489:13:8"
																				}
																			],
																			"id": 1035,
																			"name": "MemberAccess",
																			"src": "1489:17:8"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1012,
																				"type": "uint256",
																				"value": "sendAmount"
																			},
																			"id": 1036,
																			"name": "Identifier",
																			"src": "1507:10:8"
																		}
																	],
																	"id": 1037,
																	"name": "FunctionCall",
																	"src": "1489:29:8"
																}
															],
															"id": 1038,
															"name": "Assignment",
															"src": "1473:45:8"
														}
													],
													"id": 1039,
													"name": "ExpressionStatement",
													"src": "1473:45:8"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 975,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 1040,
																	"name": "Identifier",
																	"src": "1532:3:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 1041,
																	"name": "Literal",
																	"src": "1538:1:8"
																}
															],
															"id": 1042,
															"name": "BinaryOperation",
															"src": "1532:7:8"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 15,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 1043,
																							"name": "Identifier",
																							"src": "1555:8:8"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 733,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 1044,
																							"name": "Identifier",
																							"src": "1564:5:8"
																						}
																					],
																					"id": 1045,
																					"name": "IndexAccess",
																					"src": "1555:15:8"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "add",
																								"referencedDeclaration": 930,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 15,
																												"type": "mapping(address => uint256)",
																												"value": "balances"
																											},
																											"id": 1046,
																											"name": "Identifier",
																											"src": "1573:8:8"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 733,
																												"type": "address",
																												"value": "owner"
																											},
																											"id": 1047,
																											"name": "Identifier",
																											"src": "1582:5:8"
																										}
																									],
																									"id": 1048,
																									"name": "IndexAccess",
																									"src": "1573:15:8"
																								}
																							],
																							"id": 1049,
																							"name": "MemberAccess",
																							"src": "1573:19:8"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 975,
																								"type": "uint256",
																								"value": "fee"
																							},
																							"id": 1050,
																							"name": "Identifier",
																							"src": "1593:3:8"
																						}
																					],
																					"id": 1051,
																					"name": "FunctionCall",
																					"src": "1573:24:8"
																				}
																			],
																			"id": 1052,
																			"name": "Assignment",
																			"src": "1555:42:8"
																		}
																	],
																	"id": 1053,
																	"name": "ExpressionStatement",
																	"src": "1555:42:8"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 728,
																						"type": "function (address,address,uint256)",
																						"value": "Transfer"
																					},
																					"id": 1054,
																					"name": "Identifier",
																					"src": "1611:8:8"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 954,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 1055,
																					"name": "Identifier",
																					"src": "1620:5:8"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 733,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 1056,
																					"name": "Identifier",
																					"src": "1627:5:8"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 975,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 1057,
																					"name": "Identifier",
																					"src": "1634:3:8"
																				}
																			],
																			"id": 1058,
																			"name": "FunctionCall",
																			"src": "1611:27:8"
																		}
																	],
																	"id": 1059,
																	"name": "ExpressionStatement",
																	"src": "1611:27:8"
																}
															],
															"id": 1060,
															"name": "Block",
															"src": "1541:108:8"
														}
													],
													"id": 1061,
													"name": "IfStatement",
													"src": "1528:121:8"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 728,
																		"type": "function (address,address,uint256)",
																		"value": "Transfer"
																	},
																	"id": 1062,
																	"name": "Identifier",
																	"src": "1658:8:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 954,
																		"type": "address",
																		"value": "_from"
																	},
																	"id": 1063,
																	"name": "Identifier",
																	"src": "1667:5:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 956,
																		"type": "address",
																		"value": "_to"
																	},
																	"id": 1064,
																	"name": "Identifier",
																	"src": "1674:3:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1012,
																		"type": "uint256",
																		"value": "sendAmount"
																	},
																	"id": 1065,
																	"name": "Identifier",
																	"src": "1679:10:8"
																}
															],
															"id": 1066,
															"name": "FunctionCall",
															"src": "1658:32:8"
														}
													],
													"id": 1067,
													"name": "ExpressionStatement",
													"src": "1658:32:8"
												}
											],
											"id": 1068,
											"name": "Block",
											"src": "911:786:8"
										}
									],
									"id": 1069,
									"name": "FunctionDefinition",
									"src": "817:880:8"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "approve",
										"payable": false,
										"scope": 1134,
										"stateMutability": "nonpayable",
										"superFunction": 688,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 1117,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1070,
															"name": "ElementaryTypeName",
															"src": "1954:7:8"
														}
													],
													"id": 1071,
													"name": "VariableDeclaration",
													"src": "1954:16:8"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 1117,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1072,
															"name": "ElementaryTypeName",
															"src": "1972:4:8"
														}
													],
													"id": 1073,
													"name": "VariableDeclaration",
													"src": "1972:11:8"
												}
											],
											"id": 1074,
											"name": "ParameterList",
											"src": "1953:31:8"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1080,
											"name": "ParameterList",
											"src": "2016:0:8"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 39,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 1075,
													"name": "Identifier",
													"src": "1992:15:8"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 64"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 1076,
															"name": "Literal",
															"src": "2008:1:8"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 1077,
															"name": "Literal",
															"src": "2012:2:8"
														}
													],
													"id": 1078,
													"name": "BinaryOperation",
													"src": "2008:6:8"
												}
											],
											"id": 1079,
											"name": "ModifierInvocation",
											"src": "1992:23:8"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1190,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1081,
																	"name": "Identifier",
																	"src": "2331:7:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "&&",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"type": "bool"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"operator": "!=",
																										"type": "bool"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 1073,
																												"type": "uint256",
																												"value": "_value"
																											},
																											"id": 1082,
																											"name": "Identifier",
																											"src": "2342:6:8"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"hexvalue": "30",
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"subdenomination": null,
																												"token": "number",
																												"type": "int_const 0",
																												"value": "0"
																											},
																											"id": 1083,
																											"name": "Literal",
																											"src": "2352:1:8"
																										}
																									],
																									"id": 1084,
																									"name": "BinaryOperation",
																									"src": "2342:11:8"
																								}
																							],
																							"id": 1085,
																							"name": "TupleExpression",
																							"src": "2341:13:8"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"type": "bool"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"operator": "!=",
																										"type": "bool"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"type": "uint256"
																											},
																											"children": [
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"isConstant": false,
																														"isLValue": true,
																														"isPure": false,
																														"lValueRequested": false,
																														"type": "mapping(address => uint256)"
																													},
																													"children": [
																														{
																															"attributes": {
																																"argumentTypes": null,
																																"overloadedDeclarations": [
																																	null
																																],
																																"referencedDeclaration": 945,
																																"type": "mapping(address => mapping(address => uint256))",
																																"value": "allowed"
																															},
																															"id": 1086,
																															"name": "Identifier",
																															"src": "2359:7:8"
																														},
																														{
																															"attributes": {
																																"argumentTypes": null,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"member_name": "sender",
																																"referencedDeclaration": null,
																																"type": "address"
																															},
																															"children": [
																																{
																																	"attributes": {
																																		"argumentTypes": null,
																																		"overloadedDeclarations": [
																																			null
																																		],
																																		"referencedDeclaration": 1172,
																																		"type": "msg",
																																		"value": "msg"
																																	},
																																	"id": 1087,
																																	"name": "Identifier",
																																	"src": "2367:3:8"
																																}
																															],
																															"id": 1088,
																															"name": "MemberAccess",
																															"src": "2367:10:8"
																														}
																													],
																													"id": 1089,
																													"name": "IndexAccess",
																													"src": "2359:19:8"
																												},
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"overloadedDeclarations": [
																															null
																														],
																														"referencedDeclaration": 1071,
																														"type": "address",
																														"value": "_spender"
																													},
																													"id": 1090,
																													"name": "Identifier",
																													"src": "2379:8:8"
																												}
																											],
																											"id": 1091,
																											"name": "IndexAccess",
																											"src": "2359:29:8"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"hexvalue": "30",
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"subdenomination": null,
																												"token": "number",
																												"type": "int_const 0",
																												"value": "0"
																											},
																											"id": 1092,
																											"name": "Literal",
																											"src": "2392:1:8"
																										}
																									],
																									"id": 1093,
																									"name": "BinaryOperation",
																									"src": "2359:34:8"
																								}
																							],
																							"id": 1094,
																							"name": "TupleExpression",
																							"src": "2358:36:8"
																						}
																					],
																					"id": 1095,
																					"name": "BinaryOperation",
																					"src": "2341:53:8"
																				}
																			],
																			"id": 1096,
																			"name": "TupleExpression",
																			"src": "2340:55:8"
																		}
																	],
																	"id": 1097,
																	"name": "UnaryOperation",
																	"src": "2339:56:8"
																}
															],
															"id": 1098,
															"name": "FunctionCall",
															"src": "2331:65:8"
														}
													],
													"id": 1099,
													"name": "ExpressionStatement",
													"src": "2331:65:8"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "mapping(address => uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 945,
																						"type": "mapping(address => mapping(address => uint256))",
																						"value": "allowed"
																					},
																					"id": 1100,
																					"name": "Identifier",
																					"src": "2407:7:8"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1172,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 1101,
																							"name": "Identifier",
																							"src": "2415:3:8"
																						}
																					],
																					"id": 1102,
																					"name": "MemberAccess",
																					"src": "2415:10:8"
																				}
																			],
																			"id": 1104,
																			"name": "IndexAccess",
																			"src": "2407:19:8"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1071,
																				"type": "address",
																				"value": "_spender"
																			},
																			"id": 1103,
																			"name": "Identifier",
																			"src": "2427:8:8"
																		}
																	],
																	"id": 1105,
																	"name": "IndexAccess",
																	"src": "2407:29:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1073,
																		"type": "uint256",
																		"value": "_value"
																	},
																	"id": 1106,
																	"name": "Identifier",
																	"src": "2439:6:8"
																}
															],
															"id": 1107,
															"name": "Assignment",
															"src": "2407:38:8"
														}
													],
													"id": 1108,
													"name": "ExpressionStatement",
													"src": "2407:38:8"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 696,
																		"type": "function (address,address,uint256)",
																		"value": "Approval"
																	},
																	"id": 1109,
																	"name": "Identifier",
																	"src": "2455:8:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1172,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 1110,
																			"name": "Identifier",
																			"src": "2464:3:8"
																		}
																	],
																	"id": 1111,
																	"name": "MemberAccess",
																	"src": "2464:10:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1071,
																		"type": "address",
																		"value": "_spender"
																	},
																	"id": 1112,
																	"name": "Identifier",
																	"src": "2476:8:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1073,
																		"type": "uint256",
																		"value": "_value"
																	},
																	"id": 1113,
																	"name": "Identifier",
																	"src": "2486:6:8"
																}
															],
															"id": 1114,
															"name": "FunctionCall",
															"src": "2455:38:8"
														}
													],
													"id": 1115,
													"name": "ExpressionStatement",
													"src": "2455:38:8"
												}
											],
											"id": 1116,
											"name": "Block",
											"src": "2016:484:8"
										}
									],
									"id": 1117,
									"name": "FunctionDefinition",
									"src": "1937:563:8"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "allowance",
										"payable": false,
										"scope": 1134,
										"stateMutability": "view",
										"superFunction": 672,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 1133,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1118,
															"name": "ElementaryTypeName",
															"src": "2844:7:8"
														}
													],
													"id": 1119,
													"name": "VariableDeclaration",
													"src": "2844:14:8"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 1133,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1120,
															"name": "ElementaryTypeName",
															"src": "2860:7:8"
														}
													],
													"id": 1121,
													"name": "VariableDeclaration",
													"src": "2860:16:8"
												}
											],
											"id": 1122,
											"name": "ParameterList",
											"src": "2843:34:8"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "remaining",
														"scope": 1133,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1123,
															"name": "ElementaryTypeName",
															"src": "2903:4:8"
														}
													],
													"id": 1124,
													"name": "VariableDeclaration",
													"src": "2903:14:8"
												}
											],
											"id": 1125,
											"name": "ParameterList",
											"src": "2902:16:8"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 1125
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "mapping(address => uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 945,
																				"type": "mapping(address => mapping(address => uint256))",
																				"value": "allowed"
																			},
																			"id": 1126,
																			"name": "Identifier",
																			"src": "2936:7:8"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1119,
																				"type": "address",
																				"value": "_owner"
																			},
																			"id": 1127,
																			"name": "Identifier",
																			"src": "2944:6:8"
																		}
																	],
																	"id": 1128,
																	"name": "IndexAccess",
																	"src": "2936:15:8"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1121,
																		"type": "address",
																		"value": "_spender"
																	},
																	"id": 1129,
																	"name": "Identifier",
																	"src": "2952:8:8"
																}
															],
															"id": 1130,
															"name": "IndexAccess",
															"src": "2936:25:8"
														}
													],
													"id": 1131,
													"name": "Return",
													"src": "2929:32:8"
												}
											],
											"id": 1132,
											"name": "Block",
											"src": "2919:49:8"
										}
									],
									"id": 1133,
									"name": "FunctionDefinition",
									"src": "2825:143:8"
								}
							],
							"id": 1134,
							"name": "ContractDefinition",
							"src": "374:2597:8"
						}
					],
					"id": 1135,
					"name": "SourceUnit",
					"src": "32:2940:8"
				}
			},
			"contracts/UpgradedStandardToken.sol": {
				"ast": {
					"absolutePath": "contracts/UpgradedStandardToken.sol",
					"exportedSymbols": {
						"UpgradedStandardToken": [
							1169
						]
					},
					"id": 1170,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1136,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "contracts/StandardToken.sol",
							"file": "./StandardToken.sol",
							"id": 1137,
							"nodeType": "ImportDirective",
							"scope": 1170,
							"sourceUnit": 1135,
							"src": "58:29:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 1138,
										"name": "StandardToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1134,
										"src": "123:13:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StandardToken_$1134",
											"typeString": "contract StandardToken"
										}
									},
									"id": 1139,
									"nodeType": "InheritanceSpecifier",
									"src": "123:13:9"
								}
							],
							"contractDependencies": [
								697,
								729,
								773,
								1134,
								141
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1169,
							"linearizedBaseContracts": [
								1169,
								1134,
								697,
								141,
								729,
								773
							],
							"name": "UpgradedStandardToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"id": 1148,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "289:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "303:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "303:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "315:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "315:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "288:38:9"
									},
									"payable": false,
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "333:0:9"
									},
									"scope": 1169,
									"src": "263:71:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 1159,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFromByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "369:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "369:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "385:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "399:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "399:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "416:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "368:59:9"
									},
									"payable": false,
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:0:9"
									},
									"scope": 1169,
									"src": "339:96:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 1168,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approveByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "465:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "479:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "496:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "496:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "464:43:9"
									},
									"payable": false,
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:0:9"
									},
									"scope": 1169,
									"src": "440:75:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1170,
							"src": "89:428:9"
						}
					],
					"src": "32:486:9"
				},
				"id": 9,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/UpgradedStandardToken.sol",
						"exportedSymbols": {
							"UpgradedStandardToken": [
								1169
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 1136,
							"name": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"attributes": {
								"SourceUnit": 1135,
								"absolutePath": "contracts/StandardToken.sol",
								"file": "./StandardToken.sol",
								"scope": 1170,
								"symbolAliases": [
									null
								],
								"unitAlias": ""
							},
							"id": 1137,
							"name": "ImportDirective",
							"src": "58:29:9"
						},
						{
							"attributes": {
								"contractDependencies": [
									697,
									729,
									773,
									1134,
									141
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									1169,
									1134,
									697,
									141,
									729,
									773
								],
								"name": "UpgradedStandardToken",
								"scope": 1170
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "StandardToken",
												"referencedDeclaration": 1134,
												"type": "contract StandardToken"
											},
											"id": 1138,
											"name": "UserDefinedTypeName",
											"src": "123:13:9"
										}
									],
									"id": 1139,
									"name": "InheritanceSpecifier",
									"src": "123:13:9"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transferByLegacy",
										"payable": false,
										"scope": 1169,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 1148,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1140,
															"name": "ElementaryTypeName",
															"src": "289:7:9"
														}
													],
													"id": 1141,
													"name": "VariableDeclaration",
													"src": "289:12:9"
												},
												{
													"attributes": {
														"constant": false,
														"name": "to",
														"scope": 1148,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1142,
															"name": "ElementaryTypeName",
															"src": "303:7:9"
														}
													],
													"id": 1143,
													"name": "VariableDeclaration",
													"src": "303:10:9"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 1148,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1144,
															"name": "ElementaryTypeName",
															"src": "315:4:9"
														}
													],
													"id": 1145,
													"name": "VariableDeclaration",
													"src": "315:10:9"
												}
											],
											"id": 1146,
											"name": "ParameterList",
											"src": "288:38:9"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1147,
											"name": "ParameterList",
											"src": "333:0:9"
										}
									],
									"id": 1148,
									"name": "FunctionDefinition",
									"src": "263:71:9"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transferFromByLegacy",
										"payable": false,
										"scope": 1169,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "sender",
														"scope": 1159,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1149,
															"name": "ElementaryTypeName",
															"src": "369:7:9"
														}
													],
													"id": 1150,
													"name": "VariableDeclaration",
													"src": "369:14:9"
												},
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 1159,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1151,
															"name": "ElementaryTypeName",
															"src": "385:7:9"
														}
													],
													"id": 1152,
													"name": "VariableDeclaration",
													"src": "385:12:9"
												},
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 1159,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1153,
															"name": "ElementaryTypeName",
															"src": "399:7:9"
														}
													],
													"id": 1154,
													"name": "VariableDeclaration",
													"src": "399:15:9"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 1159,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1155,
															"name": "ElementaryTypeName",
															"src": "416:4:9"
														}
													],
													"id": 1156,
													"name": "VariableDeclaration",
													"src": "416:10:9"
												}
											],
											"id": 1157,
											"name": "ParameterList",
											"src": "368:59:9"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1158,
											"name": "ParameterList",
											"src": "434:0:9"
										}
									],
									"id": 1159,
									"name": "FunctionDefinition",
									"src": "339:96:9"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "approveByLegacy",
										"payable": false,
										"scope": 1169,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 1168,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1160,
															"name": "ElementaryTypeName",
															"src": "465:7:9"
														}
													],
													"id": 1161,
													"name": "VariableDeclaration",
													"src": "465:12:9"
												},
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 1168,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1162,
															"name": "ElementaryTypeName",
															"src": "479:7:9"
														}
													],
													"id": 1163,
													"name": "VariableDeclaration",
													"src": "479:15:9"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 1168,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1164,
															"name": "ElementaryTypeName",
															"src": "496:4:9"
														}
													],
													"id": 1165,
													"name": "VariableDeclaration",
													"src": "496:10:9"
												}
											],
											"id": 1166,
											"name": "ParameterList",
											"src": "464:43:9"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1167,
											"name": "ParameterList",
											"src": "514:0:9"
										}
									],
									"id": 1168,
									"name": "FunctionDefinition",
									"src": "440:75:9"
								}
							],
							"id": 1169,
							"name": "ContractDefinition",
							"src": "89:428:9"
						}
					],
					"id": 1170,
					"name": "SourceUnit",
					"src": "32:486:9"
				}
			}
		}
	}
}